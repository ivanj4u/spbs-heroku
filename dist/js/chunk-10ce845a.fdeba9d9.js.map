{"version":3,"sources":["webpack:///./node_modules/core-js/library/modules/_object-to-array.js","webpack:///./node_modules/core-js/library/modules/es6.array.is-array.js","webpack:///./src/components/Dashboard/Views/Maps/WorldMap.vue?3522","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray.js","webpack:///./node_modules/d3-array/src/ascending.js","webpack:///./node_modules/d3-array/src/bisector.js","webpack:///./node_modules/d3-array/src/bisect.js","webpack:///./node_modules/d3-array/src/cross.js","webpack:///./node_modules/d3-array/src/array.js","webpack:///./node_modules/d3-array/src/ticks.js","webpack:///./node_modules/d3-array/src/threshold/sturges.js","webpack:///./node_modules/d3-array/src/merge.js","webpack:///./node_modules/d3-axis/src/array.js","webpack:///./node_modules/d3-dispatch/src/dispatch.js","webpack:///./node_modules/d3-selection/src/namespaces.js","webpack:///./node_modules/d3-selection/src/namespace.js","webpack:///./node_modules/d3-selection/src/creator.js","webpack:///./node_modules/d3-selection/src/selector.js","webpack:///./node_modules/d3-selection/src/selection/select.js","webpack:///./node_modules/d3-selection/src/selectorAll.js","webpack:///./node_modules/d3-selection/src/selection/selectAll.js","webpack:///./node_modules/d3-selection/src/matcher.js","webpack:///./node_modules/d3-selection/src/selection/filter.js","webpack:///./node_modules/d3-selection/src/selection/sparse.js","webpack:///./node_modules/d3-selection/src/selection/enter.js","webpack:///./node_modules/d3-selection/src/constant.js","webpack:///./node_modules/d3-selection/src/selection/data.js","webpack:///./node_modules/d3-selection/src/selection/exit.js","webpack:///./node_modules/d3-selection/src/selection/join.js","webpack:///./node_modules/d3-selection/src/selection/merge.js","webpack:///./node_modules/d3-selection/src/selection/order.js","webpack:///./node_modules/d3-selection/src/selection/sort.js","webpack:///./node_modules/d3-selection/src/selection/call.js","webpack:///./node_modules/d3-selection/src/selection/nodes.js","webpack:///./node_modules/d3-selection/src/selection/node.js","webpack:///./node_modules/d3-selection/src/selection/size.js","webpack:///./node_modules/d3-selection/src/selection/empty.js","webpack:///./node_modules/d3-selection/src/selection/each.js","webpack:///./node_modules/d3-selection/src/selection/attr.js","webpack:///./node_modules/d3-selection/src/window.js","webpack:///./node_modules/d3-selection/src/selection/style.js","webpack:///./node_modules/d3-selection/src/selection/property.js","webpack:///./node_modules/d3-selection/src/selection/classed.js","webpack:///./node_modules/d3-selection/src/selection/text.js","webpack:///./node_modules/d3-selection/src/selection/html.js","webpack:///./node_modules/d3-selection/src/selection/raise.js","webpack:///./node_modules/d3-selection/src/selection/lower.js","webpack:///./node_modules/d3-selection/src/selection/append.js","webpack:///./node_modules/d3-selection/src/selection/insert.js","webpack:///./node_modules/d3-selection/src/selection/remove.js","webpack:///./node_modules/d3-selection/src/selection/clone.js","webpack:///./node_modules/d3-selection/src/selection/datum.js","webpack:///./node_modules/d3-selection/src/selection/on.js","webpack:///./node_modules/d3-selection/src/selection/dispatch.js","webpack:///./node_modules/d3-selection/src/selection/index.js","webpack:///./node_modules/d3-selection/src/local.js","webpack:///./node_modules/d3-drag/src/event.js","webpack:///./node_modules/d3-drag/src/drag.js","webpack:///./node_modules/d3-color/src/define.js","webpack:///./node_modules/d3-color/src/color.js","webpack:///./node_modules/d3-color/src/math.js","webpack:///./node_modules/d3-color/src/lab.js","webpack:///./node_modules/d3-color/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/basis.js","webpack:///./node_modules/d3-interpolate/src/basisClosed.js","webpack:///./node_modules/d3-interpolate/src/constant.js","webpack:///./node_modules/d3-interpolate/src/color.js","webpack:///./node_modules/d3-interpolate/src/rgb.js","webpack:///./node_modules/d3-interpolate/src/array.js","webpack:///./node_modules/d3-interpolate/src/date.js","webpack:///./node_modules/d3-interpolate/src/number.js","webpack:///./node_modules/d3-interpolate/src/object.js","webpack:///./node_modules/d3-interpolate/src/string.js","webpack:///./node_modules/d3-interpolate/src/transform/parse.js","webpack:///./node_modules/d3-interpolate/src/value.js","webpack:///./node_modules/d3-interpolate/src/round.js","webpack:///./node_modules/d3-interpolate/src/transform/decompose.js","webpack:///./node_modules/d3-interpolate/src/transform/index.js","webpack:///./node_modules/d3-interpolate/src/zoom.js","webpack:///./node_modules/d3-interpolate/src/hsl.js","webpack:///./node_modules/d3-interpolate/src/hcl.js","webpack:///./node_modules/d3-interpolate/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/quantize.js","webpack:///./node_modules/d3-timer/src/timer.js","webpack:///./node_modules/d3-timer/src/timeout.js","webpack:///./node_modules/d3-transition/src/transition/schedule.js","webpack:///./node_modules/d3-transition/src/interrupt.js","webpack:///./node_modules/d3-transition/src/selection/interrupt.js","webpack:///./node_modules/d3-transition/src/transition/tween.js","webpack:///./node_modules/d3-transition/src/transition/interpolate.js","webpack:///./node_modules/d3-transition/src/transition/attr.js","webpack:///./node_modules/d3-transition/src/transition/attrTween.js","webpack:///./node_modules/d3-transition/src/transition/delay.js","webpack:///./node_modules/d3-transition/src/transition/duration.js","webpack:///./node_modules/d3-transition/src/transition/ease.js","webpack:///./node_modules/d3-transition/src/transition/filter.js","webpack:///./node_modules/d3-transition/src/transition/merge.js","webpack:///./node_modules/d3-transition/src/transition/on.js","webpack:///./node_modules/d3-transition/src/transition/remove.js","webpack:///./node_modules/d3-transition/src/transition/select.js","webpack:///./node_modules/d3-transition/src/transition/selectAll.js","webpack:///./node_modules/d3-transition/src/transition/selection.js","webpack:///./node_modules/d3-transition/src/transition/style.js","webpack:///./node_modules/d3-transition/src/transition/styleTween.js","webpack:///./node_modules/d3-transition/src/transition/text.js","webpack:///./node_modules/d3-transition/src/transition/transition.js","webpack:///./node_modules/d3-transition/src/transition/end.js","webpack:///./node_modules/d3-transition/src/transition/index.js","webpack:///./node_modules/d3-ease/src/cubic.js","webpack:///./node_modules/d3-ease/src/poly.js","webpack:///./node_modules/d3-ease/src/sin.js","webpack:///./node_modules/d3-ease/src/back.js","webpack:///./node_modules/d3-ease/src/elastic.js","webpack:///./node_modules/d3-transition/src/selection/transition.js","webpack:///./node_modules/d3-transition/src/selection/index.js","webpack:///./node_modules/d3-brush/src/brush.js","webpack:///./node_modules/d3-chord/src/math.js","webpack:///./node_modules/d3-chord/src/array.js","webpack:///./node_modules/d3-chord/src/chord.js","webpack:///./node_modules/d3-path/src/path.js","webpack:///./node_modules/d3-chord/src/ribbon.js","webpack:///./node_modules/d3-collection/src/map.js","webpack:///./node_modules/d3-collection/src/set.js","webpack:///./node_modules/d3-contour/src/array.js","webpack:///./node_modules/d3-contour/src/density.js","webpack:///./node_modules/d3-dsv/src/dsv.js","webpack:///./node_modules/d3-dsv/src/csv.js","webpack:///./node_modules/d3-dsv/src/tsv.js","webpack:///./node_modules/d3-fetch/src/text.js","webpack:///./node_modules/d3-fetch/src/dsv.js","webpack:///./node_modules/d3-fetch/src/xml.js","webpack:///./node_modules/d3-quadtree/src/add.js","webpack:///./node_modules/d3-quadtree/src/cover.js","webpack:///./node_modules/d3-quadtree/src/data.js","webpack:///./node_modules/d3-quadtree/src/extent.js","webpack:///./node_modules/d3-quadtree/src/quad.js","webpack:///./node_modules/d3-quadtree/src/find.js","webpack:///./node_modules/d3-quadtree/src/remove.js","webpack:///./node_modules/d3-quadtree/src/root.js","webpack:///./node_modules/d3-quadtree/src/size.js","webpack:///./node_modules/d3-quadtree/src/visit.js","webpack:///./node_modules/d3-quadtree/src/visitAfter.js","webpack:///./node_modules/d3-quadtree/src/x.js","webpack:///./node_modules/d3-quadtree/src/y.js","webpack:///./node_modules/d3-quadtree/src/quadtree.js","webpack:///./node_modules/d3-force/src/simulation.js","webpack:///./node_modules/d3-format/src/formatDecimal.js","webpack:///./node_modules/d3-format/src/exponent.js","webpack:///./node_modules/d3-format/src/formatGroup.js","webpack:///./node_modules/d3-format/src/formatNumerals.js","webpack:///./node_modules/d3-format/src/formatSpecifier.js","webpack:///./node_modules/d3-format/src/formatTrim.js","webpack:///./node_modules/d3-format/src/formatPrefixAuto.js","webpack:///./node_modules/d3-format/src/defaultLocale.js","webpack:///./node_modules/d3-format/src/formatRounded.js","webpack:///./node_modules/d3-format/src/formatTypes.js","webpack:///./node_modules/d3-format/src/identity.js","webpack:///./node_modules/d3-format/src/locale.js","webpack:///./node_modules/d3-format/src/precisionFixed.js","webpack:///./node_modules/d3-format/src/precisionPrefix.js","webpack:///./node_modules/d3-format/src/precisionRound.js","webpack:///./node_modules/d3-geo/src/adder.js","webpack:///./node_modules/d3-geo/src/math.js","webpack:///./node_modules/d3-geo/src/noop.js","webpack:///./node_modules/d3-geo/src/area.js","webpack:///./node_modules/d3-geo/src/cartesian.js","webpack:///./node_modules/d3-geo/src/bounds.js","webpack:///./node_modules/d3-geo/src/rotation.js","webpack:///./node_modules/d3-geo/src/circle.js","webpack:///./node_modules/d3-geo/src/clip/buffer.js","webpack:///./node_modules/d3-geo/src/pointEqual.js","webpack:///./node_modules/d3-geo/src/clip/rejoin.js","webpack:///./node_modules/d3-geo/src/polygonContains.js","webpack:///./node_modules/d3-geo/src/clip/index.js","webpack:///./node_modules/d3-geo/src/clip/antimeridian.js","webpack:///./node_modules/d3-geo/src/length.js","webpack:///./node_modules/d3-geo/src/path/area.js","webpack:///./node_modules/d3-geo/src/path/context.js","webpack:///./node_modules/d3-geo/src/path/measure.js","webpack:///./node_modules/d3-geo/src/path/string.js","webpack:///./node_modules/d3-geo/src/transform.js","webpack:///./node_modules/d3-geo/src/projection/resample.js","webpack:///./node_modules/d3-geo/src/projection/index.js","webpack:///./node_modules/d3-geo/src/projection/azimuthal.js","webpack:///./node_modules/d3-geo/src/projection/azimuthalEqualArea.js","webpack:///./node_modules/d3-geo/src/projection/azimuthalEquidistant.js","webpack:///./node_modules/d3-geo/src/projection/mercator.js","webpack:///./node_modules/d3-geo/src/projection/equirectangular.js","webpack:///./node_modules/d3-geo/src/projection/conicEquidistant.js","webpack:///./node_modules/d3-geo/src/projection/equalEarth.js","webpack:///./node_modules/d3-geo/src/projection/gnomonic.js","webpack:///./node_modules/d3-geo/src/projection/naturalEarth1.js","webpack:///./node_modules/d3-geo/src/projection/orthographic.js","webpack:///./node_modules/d3-geo/src/projection/stereographic.js","webpack:///./node_modules/d3-geo/src/projection/transverseMercator.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/count.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/each.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/sum.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/sort.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/path.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/ancestors.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/descendants.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/leaves.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/links.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/index.js","webpack:///./node_modules/d3-hierarchy/src/array.js","webpack:///./node_modules/d3-hierarchy/src/treemap/round.js","webpack:///./node_modules/d3-hierarchy/src/treemap/dice.js","webpack:///./node_modules/d3-hierarchy/src/tree.js","webpack:///./node_modules/d3-hierarchy/src/treemap/slice.js","webpack:///./node_modules/d3-hierarchy/src/treemap/squarify.js","webpack:///./node_modules/d3-hierarchy/src/treemap/resquarify.js","webpack:///./node_modules/d3-polygon/src/hull.js","webpack:///./node_modules/d3-random/src/defaultSource.js","webpack:///./node_modules/d3-random/src/normal.js","webpack:///./node_modules/d3-random/src/uniform.js","webpack:///./node_modules/d3-random/src/irwinHall.js","webpack:///./node_modules/d3-random/src/logNormal.js","webpack:///./node_modules/d3-random/src/bates.js","webpack:///./node_modules/d3-random/src/exponential.js","webpack:///./node_modules/d3-scale/src/init.js","webpack:///./node_modules/d3-scale/src/array.js","webpack:///./node_modules/d3-scale/src/constant.js","webpack:///./node_modules/d3-scale/src/number.js","webpack:///./node_modules/d3-scale/src/continuous.js","webpack:///./node_modules/d3-scale/src/tickFormat.js","webpack:///./node_modules/d3-scale/src/linear.js","webpack:///./node_modules/d3-time/src/interval.js","webpack:///./node_modules/d3-time/src/millisecond.js","webpack:///./node_modules/d3-time/src/duration.js","webpack:///./node_modules/d3-time/src/second.js","webpack:///./node_modules/d3-time/src/minute.js","webpack:///./node_modules/d3-time/src/hour.js","webpack:///./node_modules/d3-time/src/day.js","webpack:///./node_modules/d3-time/src/week.js","webpack:///./node_modules/d3-time/src/month.js","webpack:///./node_modules/d3-time/src/year.js","webpack:///./node_modules/d3-time/src/utcMinute.js","webpack:///./node_modules/d3-time/src/utcHour.js","webpack:///./node_modules/d3-time/src/utcDay.js","webpack:///./node_modules/d3-time/src/utcWeek.js","webpack:///./node_modules/d3-time/src/utcMonth.js","webpack:///./node_modules/d3-time/src/utcYear.js","webpack:///./node_modules/d3-time-format/src/locale.js","webpack:///./node_modules/d3-time-format/src/defaultLocale.js","webpack:///./node_modules/d3-time-format/src/isoFormat.js","webpack:///./node_modules/d3-time-format/src/isoParse.js","webpack:///./node_modules/d3-scale-chromatic/src/colors.js","webpack:///./node_modules/d3-scale-chromatic/src/ramp.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack:///./node_modules/d3-shape/src/math.js","webpack:///./node_modules/d3-shape/src/curve/linear.js","webpack:///./node_modules/d3-shape/src/curve/radial.js","webpack:///./node_modules/d3-shape/src/array.js","webpack:///./node_modules/d3-shape/src/symbol/diamond.js","webpack:///./node_modules/d3-shape/src/symbol/circle.js","webpack:///./node_modules/d3-shape/src/symbol/star.js","webpack:///./node_modules/d3-shape/src/noop.js","webpack:///./node_modules/d3-shape/src/symbol/triangle.js","webpack:///./node_modules/d3-shape/src/symbol/wye.js","webpack:///./node_modules/d3-shape/src/curve/basis.js","webpack:///./node_modules/d3-shape/src/curve/basisClosed.js","webpack:///./node_modules/d3-shape/src/curve/basisOpen.js","webpack:///./node_modules/d3-shape/src/curve/bundle.js","webpack:///./node_modules/d3-shape/src/curve/cardinal.js","webpack:///./node_modules/d3-shape/src/curve/cardinalClosed.js","webpack:///./node_modules/d3-shape/src/curve/cardinalOpen.js","webpack:///./node_modules/d3-shape/src/curve/catmullRom.js","webpack:///./node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack:///./node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack:///./node_modules/d3-shape/src/curve/linearClosed.js","webpack:///./node_modules/d3-shape/src/curve/monotone.js","webpack:///./node_modules/d3-shape/src/curve/natural.js","webpack:///./node_modules/d3-shape/src/curve/step.js","webpack:///./node_modules/d3-voronoi/src/RedBlackTree.js","webpack:///./node_modules/d3-voronoi/src/Edge.js","webpack:///./node_modules/d3-voronoi/src/Cell.js","webpack:///./node_modules/d3-voronoi/src/Circle.js","webpack:///./node_modules/d3-voronoi/src/Beach.js","webpack:///./node_modules/d3-voronoi/src/Diagram.js","webpack:///./node_modules/d3-zoom/src/transform.js","webpack:///./node_modules/topojson/node_modules/topojson-client/src/bisect.js","webpack:///./node_modules/topojson/node_modules/topojson-server/src/hash/point-hash.js","webpack:///./node_modules/topojson/node_modules/topojson-simplify/src/spherical.js","webpack:///src/components/Dashboard/Views/Maps/WorldMap.vue","webpack:///./src/components/Dashboard/Views/Maps/WorldMap.vue?1995","webpack:///./src/components/Dashboard/Views/Maps/WorldMap.vue","webpack:///./node_modules/core-js/library/modules/_create-property.js","webpack:///./node_modules/datamaps/node_modules/d3/d3.js","webpack:///./node_modules/core-js/library/modules/es6.array.from.js","webpack:///./node_modules/core-js/library/fn/is-iterable.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/array/from.js","webpack:///./node_modules/core-js/library/modules/es7.object.values.js","webpack:///./node_modules/core-js/library/modules/core.is-iterable.js","webpack:///./node_modules/core-js/library/fn/object/values.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/array/is-array.js","webpack:///./node_modules/datamaps/node_modules/topojson/build/topojson.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/is-iterable.js","webpack:///./node_modules/datamaps/dist/datamaps.all.js","webpack:///./node_modules/core-js/library/fn/array/from.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/values.js","webpack:///./node_modules/core-js/library/fn/array/is-array.js"],"names":["getKeys","__webpack_require__","toIObject","isEnum","f","module","exports","isEntries","it","key","O","keys","length","i","result","call","push","$export","S","isArray","render","_vm","this","_h","$createElement","_c","_self","staticStyle","height","attrs","id","staticRenderFns","_arrayWithoutHoles","arr","is_array_default","arr2","Array","_iterableToArray","iter","is_iterable_default","Object","prototype","toString","from_default","_nonIterableSpread","TypeError","_toConsumableArray","ascending","a","b","NaN","bisector","compare","ascendingComparator","left","x","lo","hi","mid","right","d","ascendingBisect","bisectRight","bisect","array_array","e10","slice","map","Math","sqrt","e5","e2","ticks","start","stop","count","reverse","n","step","tickIncrement","isFinite","ceil","floor","max","power","log","LN10","error","pow","tickStep","step0","abs","step1","src_merge","arrays","m","merged","array","j","noop","value","dispatch","t","arguments","_","Error","Dispatch","parseTypenames","typenames","types","trim","split","name","indexOf","hasOwnProperty","type","get","c","set","callback","concat","constructor","on","typename","T","copy","that","args","apply","src_dispatch","xhtml","namespaces","svg","xlink","xml","xmlns","namespace","prefix","space","local","creatorInherit","document","ownerDocument","uri","namespaceURI","documentElement","createElement","createElementNS","creatorFixed","fullname","creator","none","src_selector","selector","querySelector","selection_select","select","groups","_groups","subgroups","node","subnode","group","subgroup","__data__","Selection","_parents","selectorAll_empty","selectorAll","querySelectorAll","selectAll","parents","matcher","matches","selection_filter","match","sparse","update","selection_enter","_enter","EnterNode","parent","datum","_next","_parent","appendChild","child","insertBefore","next","src_constant","keyPrefix","bindIndex","enter","exit","data","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","selection_data","size","each","bind","enterGroup","updateGroup","exitGroup","previous","i0","i1","_exit","selection_exit","join","onenter","onupdate","onexit","append","remove","merge","order","selection_merge","selection","groups0","groups1","m0","m1","min","merges","group0","group1","selection_order","compareDocumentPosition","parentNode","selection_sort","compareNode","sort_ascending","sortgroups","sortgroup","sort","selection_nodes","nodes","selection_node","selection_size","selection_empty","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","v","attrFunctionNS","attr","getAttributeNS","getAttribute","src_window","defaultView","styleRemove","style","removeProperty","styleConstant","priority","setProperty","styleFunction","styleValue","getPropertyValue","getComputedStyle","propertyRemove","propertyConstant","propertyFunction","property","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","classedTrue","classedFalse","classedFunction","splice","contains","classed","textRemove","textContent","textConstant","textFunction","selection_text","htmlRemove","innerHTML","htmlConstant","htmlFunction","html","raise","nextSibling","selection_raise","lower","previousSibling","firstChild","selection_lower","create","constantNull","insert","before","remove_remove","removeChild","selection_remove","selection_cloneShallow","cloneNode","selection_cloneDeep","clone","deep","filterEvents","on_event","on_element","mouseenter","mouseleave","filterContextListener","listener","index","contextListener","event","related","relatedTarget","event1","event0","on_parseTypenames","onRemove","__on","o","removeEventListener","capture","onAdd","wrap","addEventListener","selection_on","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","selection_dispatch","selection_root","selection_selection","filter","empty","text","src_selection","nextId","Local","DragEvent","target","subject","active","y","dx","dy","identifier","define","factory","extend","definition","Color","darker","brighter","reI","reN","reP","reHex3","reHex6","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_color","format","toLowerCase","exec","parseInt","Rgb","rgbn","rgba","hsla","r","g","rgbConvert","rgb","opacity","color_rgb","hex","round","h","s","l","Hsl","hslConvert","hsl","hsl2rgb","m2","displayable","k","isNaN","deg2rad","PI","rad2deg","K","Xn","Yn","Zn","lab_t0","lab_t1","lab_t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","cubehelix_A","cubehelix_B","C","cubehelix_D","cubehelix_E","ED","EB","BC_DA","cubehelixConvert","Cubehelix","bl","cubehelix_cubehelix","basis","t1","v0","v1","v2","v3","t2","cosh","sinh","src_basis","values","basisClosed","d3_interpolate_src_constant","linear","exponential","color_hue","gamma","nogamma","src_rgb","rgbGamma","color","end","rgbSpline","spline","colors","rgbBasis","src_array","nb","na","src_value","src_date","Date","setTime","src_number","src_object","reA","reB","source","string_zero","one","cssNode","cssRoot","cssView","svgNode","src_string","am","bm","bs","bi","lastIndex","q","valueOf","src_round","degrees","decompose_identity","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","e","atan","parseCss","transform","parseSvg","baseVal","consolidate","matrix","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","scale","interpolateTransformCss","interpolateTransformSvg","SQRT2","hsl_hsl","hue","hcl_hcl","src_cubehelix_cubehelix","cubehelixGamma","cubehelix","cubehelixLong","taskHead","taskTail","timer_frame","timeout","timer_interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","now","setFrame","requestAnimationFrame","setTimeout","clearNow","Timer","_call","_time","timer","delay","time","restart","timerFlush","wake","nap","poke","t0","Infinity","sleep","clearTimeout","clearInterval","setInterval","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","schedule_create","tween","duration","ease","state","schedule_init","schedule","schedule_get","schedule_set","self","tick","interrupt","selection_interrupt","tweenRemove","tween0","tween1","tweenFunction","transition_tween","_id","tweenValue","transition","transition_interpolate","attr_attrRemove","attr_attrRemoveNS","attr_attrConstant","interpolate","value1","string00","interpolate0","string1","string0","attr_attrConstantNS","attr_attrFunction","string10","attr_attrFunctionNS","transition_attr","attrTween","attrInterpolate","attrInterpolateNS","attrTweenNS","_value","transition_attrTween","delayFunction","delayConstant","transition_delay","durationFunction","durationConstant","transition_duration","easeConstant","transition_filter","Transition","_name","transition_merge","on_start","every","onFunction","on0","on1","sit","transition_on","removeFunction","transition_remove","transition_select","transition_selectAll","children","inherit","selection_Selection","transition_selection","styleNull","style_styleRemove","style_styleConstant","style_styleFunction","styleMaybeRemove","listener0","undefined","transition_style","styleTween","styleInterpolate","transition_styleTween","text_textConstant","text_textFunction","transition_text","transition_transition","id0","id1","newId","transition_end","Promise","resolve","reject","cancel","transition_id","src_transition_transition","selection_prototype","cubicInOut","poly_exponent","custom","polyIn","exponent","polyOut","polyInOut","overshoot","tau","backIn","backOut","backInOut","amplitude","period","defaultTiming","p","asin","elasticIn","elasticOut","elasticInOut","transition_inherit","selection_transition","brush_type","path_pi","path_tau","path_epsilon","tauEpsilon","Path","_x0","_y0","_x1","_y1","path_path","moveTo","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","x0","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","a1","ccw","cw","da","rect","w","map_prefix","Map","map_map","object","has","clear","entries","src_map","Set","proto","set_set","src_array_array","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","JSON","stringify","customConverter","row","inferColumns","rows","columnSet","forEach","column","pad","width","dsv_formatYear","year","formatDate","date","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","getUTCFullYear","getUTCMonth","getUTCDate","dsv","delimiter","reFormat","DELIMITER","charCodeAt","convert","parseRows","N","I","eof","eol","token","replace","preformatBody","formatValue","formatBody","formatRows","formatRow","test","csv","csvParse","tsv","tsvParse","responseText","response","ok","status","statusText","src_text","input","init","fetch","then","dsvParse","parser","DOMParser","parseFromString","_x","_y","add_add","cover","tree","xm","ym","xp","yp","bottom","_root","leaf","addAll","xz","yz","src_cover","src_data","visit","d3_quadtree_src_extent","src_quad","find","radius","x3","y3","quads","d2","src_remove","retainer","removeAll","src_root","src_size","visitAfter","x_defaultX","src_x","y_defaultY","src_y","quadtree","Quadtree","leaf_copy","treeProto","extent","root","formatDecimal","toExponential","coefficient","src_exponent","formatGroup","grouping","thousands","substring","formatNumerals","numerals","re","formatSpecifier","specifier","FormatSpecifier","fill","align","sign","symbol","zero","comma","precision","prefixExponent","defaultLocale_locale","defaultLocale_format","defaultLocale_formatPrefix","formatTrim","out","formatPrefixAuto","formatRounded","formatTypes","%","toFixed","toPrecision","X","toUpperCase","d3_format_src_identity","prefixes","src_locale","locale","currency","decimal","percent","newFormat","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","padding","formatPrefix","defaultLocale","precisionFixed","precisionPrefix","precisionRound","adder","Adder","reset","adder_add","temp","bv","av","math_epsilon","math_epsilon2","src_math_pi","src_math_halfPi","quarterPi","src_math_tau","radians","math_cos","exp","math_sin","noop_noop","cartesian_cartesian","spherical","lambda","phi","cosPhi","cartesianCross","cartesianNormalizeInPlace","rotationIdentity","invert","clip_buffer","line","lines","point","lineStart","lineEnd","rejoin","shift","pointEqual","Intersection","points","other","entry","segments","compareIntersection","startInside","stream","clip","segment","p0","p1","rejoin_link","current","isSubject","polygonContains_sum","polygonContains","polygon","sinPhi","normal","angle","winding","ring","point0","lambda0","phi0","sinPhi0","cosPhi0","lambda1","sinPhi1","cosPhi1","point1","phi1","delta","absDelta","antimeridian","intersection","phiArc","src_clip","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","polygonStart","pointRing","ringStart","ringEnd","polygonEnd","clip_compareIntersection","sphere","pointLine","clean","ringSegments","validSegment","clipAntimeridianLine","clipAntimeridianInterpolate","sign0","sign1","clipAntimeridianIntersect","sinLambda0Lambda1","from","to","direction","PathContext","context","_context","_radius","pointRadius","_line","_point","PathString","_string","string_circle","_circle","transformer","methods","TransformStream","azimuthalRaw","cx","cy","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","mercatorRaw","equirectangularRaw","A1","A2","A3","A4","M","equalEarth_iterations","equalEarthRaw","l2","l6","fy","fpy","gnomonicRaw","naturalEarth1Raw","phi2","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","count_count","sum","hierarchy_count","eachAfter","hierarchy_each","eachBefore","hierarchy_sum","hierarchy_sort","hierarchy_path","ancestor","leastCommonAncestor","aNodes","ancestors","bNodes","descendants","leaves","hierarchy_links","links","hierarchy","childs","Node","valued","defaultChildren","depth","computeHeight","node_copy","copyData","path","dice","TreeNode","A","treemap_slice","squarify_phi","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","squarify","resquarify","_squarify","src_defaultSource","random","src_normal","sourceRandomUniform","randomUniform","sourceRandomNormal","randomNormal","mu","sigma","irwinHall","sourceRandomLogNormal","randomLogNormal","sourceRandomIrwinHall","randomIrwinHall","sourceRandomBates","randomBates","sourceRandomExponential","randomExponential","initRange","domain","range","d3_scale_src_array_array","array_map","d3_scale_src_array_slice","d3_scale_src_constant","d3_scale_src_number","unit","continuous_identity","normalize","clamper","bimap","d0","d1","r0","r1","polymap","clamp","unknown","continuous_transformer","untransform","piecewise","output","rescale","rangeRound","u","continuous","src_tickFormat","linearish","tickFormat","nice","src_linear_linear","interval_t0","interval_t1","newInterval","floori","offseti","field","interval","offset","millisecond_millisecond","durationSecond","durationMinute","durationHour","durationDay","durationWeek","second_second","getMilliseconds","minute_minute","getSeconds","getMinutes","hour_hour","getHours","day_day","setHours","setDate","getDate","getTimezoneOffset","src_day","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","month_month","setMonth","getMonth","getFullYear","year_year","setFullYear","src_year","utcMinute","setUTCSeconds","utcHour","setUTCMinutes","utcDay","setUTCHours","setUTCDate","src_utcDay","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","utcYear","setUTCFullYear","src_utcYear","localDate","H","L","utcDate","UTC","newYear","formatLocale","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","formatRe","periodLookup","formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","B","formatMonth","formatDayOfMonth","formatMicroseconds","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatPeriod","Q","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","U","formatWeekNumberSunday","V","formatWeekNumberISO","formatWeekdayNumberSunday","W","formatWeekNumberMonday","locale_formatYear","Y","formatFullYear","Z","formatZone","formatLiteralPercent","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCPeriod","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parsePeriod","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseLocaleDate","parseLocaleTime","parseYear","parseFullYear","parseZone","parseLiteralPercent","pads","charAt","newParse","newDate","week","day","parseSpecifier","utcFormat","utcParse","src_defaultLocale_locale","-","0","numberRe","percentRe","requoteRe","locale_pad","requote","dow","defaultLocale_defaultLocale","isoSpecifier","formatIsoNative","toISOString","parseIsoNative","src_colors","ramp","scheme","BrBG_scheme","PRGn_scheme","PiYG_scheme","PuOr_scheme","RdBu_scheme","RdGy_scheme","RdYlBu_scheme","RdYlGn_scheme","Spectral_scheme","BuGn_scheme","BuPu_scheme","GnBu_scheme","OrRd_scheme","PuBuGn_scheme","PuBu_scheme","PuRd_scheme","RdPu_scheme","YlGnBu_scheme","YlGn_scheme","YlOrBr_scheme","YlOrRd_scheme","Blues_scheme","Greens_scheme","Greys_scheme","Purples_scheme","Reds_scheme","Oranges_scheme","viridis_ramp","src_math_epsilon","d3_shape_src_math_pi","d3_shape_src_math_tau","Linear","areaStart","areaEnd","curve_linear","curveRadial","Radial","curve","_curve","radial","kr","d3_shape_src_noop","basis_point","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","_basis","_beta","bundle","cardinal_point","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","catmullRom_point","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","x23","y23","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","monotone_sign","slope3","h0","h1","s0","s1","slope2","monotone_point","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","sibling","src_RedBlackTree","createEdge","edge","Diagram_edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","clipEdges","Diagram_epsilon","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","dc","v00","v01","v11","v10","firstCircle","circlePool","Circle","attachCircle","lArc","rArc","lSite","cSite","rSite","Diagram_epsilon2","ha","hc","circle","Diagram_circles","detachCircle","beachPool","Beach","createBeach","beach","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","edges","polygons","triangles","e1","_found","vx","vy","Transform","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","transform_identity","transform_transform","__zoom","point_hash_buffer","ArrayBuffer","Float64Array","Uint32Array","WorldMapvue_type_script_lang_js_","color1","color2","highlightFillColor","highlightBorderColor","mapData","AUS","BRA","CAN","DEU","FRA","GBR","GEO","IND","ROU","RUS","USA","generateColors","generateMapColors","mapDataValues","values_default","maxVal","fills","defaultFill","val","fillKey","initVectorMap","_this$generateMapColo","worldMap","datamaps_all_default","scope","element","getElementById","responsive","geographyConfig","borderWidth","borderOpacity","highlightBorderWidth","highlightBorderOpacity","resizeFunc","resize","throttle","mounted","_mounted","asyncToGenerator","regeneratorRuntime","mark","_callee","prev","Maps_WorldMapvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","$defineProperty","createDesc","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3","version","d3_arraySlice","d3_array","d3_document","d3_documentElement","d3_window","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","d3_ascending","d3_number","d3_numeric","d3_bisector","descending","mean","quantile","median","numbers","variance","deviation","d3_bisect","d3_transposeLength","bisectLeft","shuffle","permute","indexes","permutes","pairs","transpose","zip","d3_range_integerScale","d3_class","ctor","properties","defineProperty","enumerable","d3_Map","d3_map_proto","d3_map_zero","d3_map_escape","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","d3_map_empty","d3_Set","d3_identity","d3_rebind","method","d3_vendorSymbol","d3_vendorPrefixes","prefixName","nest","sortValues","rollup","sortKeys","mapType","setter","valuesByKey","sortKey","keyMap","behavior","rebind","d3_noop","d3_dispatch","d3_dispatch_event","listeners","listenerByName","d3_eventPreventDefault","preventDefault","d3_eventSource","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e0","d3_requote_re","d3_subclass","__proto__","d3_selection","d3_selectionPrototype","d3_select","d3_selectAll","d3_selectMatches","d3_selectMatcher","Sizzle","matchesSelector","d3_selection_selector","d3_selection_selectorAll","d3_nsXhtml","d3_nsPrefix","d3_selection_attr","attrNull","attrNullNS","ns","qualify","d3_collapse","d3_selection_classedRe","d3_selection_classes","d3_selection_classed","d3_selection_classedName","classedConstant","d3_selection_style","d3_selection_property","propertyNull","d3_selection_creator","createNS","d3_selectionRemove","d3_selection_dataNode","d3_selection_filter","d3_selection_sortComparator","comparator","d3_selection_each","d3_selection_enter","d3_selection_enterPrototype","groupData","nodeData","n0","updateNodes","enterNodes","exitNodes","d3_selection_enterInsertBefore","j0","d3_selection_on","d3_selection_onListener","d3_selection_onFilters","$","d3_selection_onFilter","upgroup","d3_event_dragSelect","d3_event_dragId","d3_event_dragSuppress","click","suppressClick","off","mouse","container","d3_mousePoint","d3_mouse_bug44083","navigator","userAgent","changedTouches","ownerSVGElement","createSVGPoint","scrollX","scrollY","position","top","margin","border","ctm","getScreenCTM","pageX","pageY","clientX","clientY","matrixTransform","inverse","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","touch","touches","drag","origin","mousedown","dragstart","touchstart","move","dragOffset","correspondingElement","dragged","dragId","dragName","dragSubject","moved","ended","dragRestore","position0","position1","ε","ε2","π","τ","τε","halfπ","d3_radians","d3_degrees","d3_sgn","d3_cross2d","d3_acos","d3_asin","d3_sinh","d3_cosh","d3_tanh","d3_haversin","ρ","ρ2","ρ4","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","b0","b1","coshr0","zoom","translate0","center0","center","mousewheelTimer","touchtime","view","scaleExtent","d3_behavior_zoomInfinity","zooming","mousemove","mouseup","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","scaleTo","translateTo","zoomTo","__chart__","zoomstarted","zoomed","zoomended","location0","d3_selection_interrupt","scale0","locations0","distance0","zoomName","touchmove","touchend","targets","relocate","started","changed","LN2","l0","l1","distance1","scale1","d3_behavior_zoomDelta","shiftKey","deltaY","deltaMode","wheelDelta","view1","d3_transitionInheritId","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","d3_hslPrototype","d3_hsl_rgb","vv","d3_rgb","d3_hcl","d3_lab_hcl","d3_lab","d3_rgb_lab","d3_hclPrototype","d3_hcl_lab","d3_lab_K","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_labPrototype","d3_lab_rgb","d3_lab_xyz","d3_xyz_rgb","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgbPrototype","d3_rgb_hex","parseFloat","d3_rgb_parseNumber","d3_rgb_names","d3_rgb_xyz","d3_functor","d3_xhrType","url","mimeType","d3_xhr","xhr","headers","request","XMLHttpRequest","responseType","respond","d3_xhrHasResponse","load","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","d3_xhr_fixCallback","functor","delimiterCode","typedResponse","fieldSet","fields","d3_timer_queueHead","d3_timer_queueTail","d3_timer_interval","d3_timer_timeout","d3_timer_frame","d3_timer","d3_timer_step","d3_timer_mark","d3_timer_sweep","d3_format_precision","flush","d3_formatPrefixes","d3_formatPrefix","d3_locale_numberFormat","locale_decimal","locale_thousands","locale_grouping","locale_currency","d3_format_re","zfill","integer","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","lastIndexOf","String","fromCharCode","d3_time","d3_date","d3_date_utc","getTime","d3_time_prototype","setDay","setUTCDay","setMilliseconds","setUTCMilliseconds","setMinutes","setSeconds","d3_time_interval","number","dt","times","range_utc","utc","d3_time_interval_utc","d3_locale_timeFormat","locale_days","locale_shortDays","d3_time_format","template","d3_time_formatPads","d3_time_formats","d3_time_parse","localZ","d3_time_parsers","multi","d3_time_formatMulti","d3_time_periodLookup","d3_time_dayRe","d3_time_formatRe","d3_time_dayLookup","d3_time_formatLookup","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_monthRe","d3_time_monthLookup","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_formatPad","dayOfYear","sundayOfYear","mondayOfYear","d3_time_zone","d3_time_parseWeekdayAbbrev","d3_time_parseWeekday","d3_time_parseMonthAbbrev","d3_time_parseMonth","d3_time_parseLocaleFull","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseAmPm","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseLocaleDate","d3_time_parseLocaleTime","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","years","weeks","weekOfYear","d3_time_numberRe","d3_time_percentRe","d3_time_expandYear","zs","zh","zm","numberFormat","timeFormat","d3_locale_enUS","d3_adder","geo","d3_adderSum","d3_adderTemp","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","coordinates","MultiPoint","LineString","d3_geo_streamLine","MultiLineString","Polygon","d3_geo_streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","area","d3_geo_areaSum","d3_geo_area","d3_geo_centroidW0","d3_geo_centroidW1","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_areaRingSum","d3_geo_areaRingStart","λ00","φ00","λ0","cosφ0","sinφ0","nextPoint","λ","φ","dλ","sdλ","adλ","cosφ","sinφ","d3_geo_cartesian","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","bounds","φ0","λ1","φ1","λ_","λ__","φ__","dλSum","ranges","bound","ringPoint","linePoint","equatorial","inflection","λi","φi","compareRanges","withinRange","best","centroid","d3_geo_centroid","d3_geo_centroidPoint","d3_geo_centroidLineStart","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","d3_geo_centroidPointXYZ","z0","cz","d3_geo_compose","compose","d3_true","d3_geo_clipPolygon","clipStartInside","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","d3_geo_clip","clipStart","rotatedClipStart","d3_geo_pointInPolygon","d3_geo_clipSort","buffer","d3_geo_clipBufferListener","ringListener","d3_geo_clipSegmentLength1","d3_geo_clipAntimeridian","d3_geo_clipAntimeridianLine","d3_geo_clipAntimeridianInterpolate","sλ0","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","meridian","parallel","meridianNormal","polarAngle","φarc","d3_geo_clipCircle","cr","smallRadius","notHemisphere","d3_geo_circleInterpolate","visible","c0","point2","code","intersect","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","δλ","polar","q1","d3_geom_clipLine","d3_geo_clipExtentMAX","d3_geo_clipExtent","x__","y__","v__","x_","y_","v_","first","listener_","bufferListener","insidePolygon","inside","wn","corner","comparePoints","ca","cb","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","ρ0","forward","ρ0_y","clipExtent","valid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathAreaPolygon","d3_geo_pathBoundsX0","d3_geo_pathBoundsY0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY1","d3_geo_pathArea","d3_geo_pathAreaRingStart","x00","y00","d3_geo_pathBounds","d3_geo_pathBoundsPoint","d3_geo_pathBuffer","pointCircle","d3_geo_pathBufferCircle","pointLineStart","lineEndPolygon","d3_geo_lengthSum","d3_geo_pathCentroid","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","d3_geo_resample","project","δ2","cosMinDistance","maxDepth","resample","resampleRecursive","resampleNone","d3_geo_transformPoint","a00","b00","c00","resampleLineTo","φ2","λ2","dx2","dy2","dz","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projectRotate","δx","δy","projectResample","δφ","δγ","preclip","postclip","clipAngle","projection","d3_geo_rotation","invalidate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","projectStream","contextStream","cacheStream","projectionMutator","equirectangular","Δλ","sinΔλ","cosΔλ","sinφ1","graticule","X1","X0","Y1","Y0","DX","DY","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_length","d3_geo_lengthLineStart","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","d3_geo_conicConformal","F","d3_geo_mercator","d3_geo_conicEquidistant","G","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","d3_geo_mercatorProjection","clipAuto","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","skipLeft","skipRight","d3_geom_polygonPrototype","d3_geom_polygonInside","d3_geom_polygonIntersect","x43","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiEdges","d3_geom_voronoiCells","d3_geom_voronoiBeaches","d3_geom_voronoiFirstCircle","d3_geom_voronoiCircles","d3_geom_voronoiBeachPool","d3_geom_voronoiCirclePool","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","d3_geom_voronoiCreateBeach","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiRemoveBeach","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","d3_geom_voronoiCell","d3_geom_voronoiCloseCells","iHalfEdge","halfEdges","nHalfEdges","prepare","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiConnectEdge","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","bbox","d3_geom_voronoiVertexOrder","diagram","voronoi","d3_geom_voronoiClipExtent","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","d3_geom_quadtreeVisit","sx","sy","d3_geom_quadtreeFind","closestPoint","minDistance2","distance2","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","d3_interpolate_numberA","d3_interpolate_numberB","delaunay","compat","xs","ys","x1_","y1_","x2_","y2_","nx","ny","insertChild","nPoint","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolators","d3_interpolateArray","interpolateArray","d3_ease_default","d3_ease","poly","d3_ease_poly","quad","d3_ease_quad","cubic","d3_ease_cubic","d3_ease_sin","d3_ease_exp","d3_ease_circle","elastic","d3_ease_elastic","back","d3_ease_back","bounce","d3_ease_bounce","d3_ease_mode","in","d3_ease_reverse","in-out","d3_ease_reflect","out-in","d3_ease_clamp","d3_ease_cubicInOut","d3_interpolateHcl","ah","ac","al","bh","bc","d3_interpolateHsl","as","d3_interpolateLab","aa","ba","d3_interpolateRound","d3_transform","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","d3_transformIdentity","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","d3_layout_forceMouseout","d3_layout_forceAccumulate","charges","charge","pointCharge","layout","paths","chord","chords","sortGroups","sortSubgroups","sortChords","relayout","groupSums","groupIndex","subgroupIndex","di","dj","subindex","startAngle","endAngle","resort","force","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","chargeDistance2","d3_layout_forceChargeDistance2","gravity","theta2","repulse","dw","dn","dragmove","resume","weight","chargeDistance","theta","neighbors","dimension","candidates","d3_layout_hierarchyRebind","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","stack","revalue","partition","pie","Number","d3_layout_pieSortByValue","padAngle","arcs","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","d3_layout_stackMaxIndex","sums","d3_layout_stackReduceSum","tops","bottoms","default","silhouette","wiggle","s2","s3","o0","expand","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","d3_layout_packUnlink","d3_layout_packTransform","db","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","d3_scale_niceStep","d3_scale_niceIdentity","histogram","frequency","valuer","ranger","binner","bin","bins","thresholds","pack","separation","nodeSize","root0","root1","wrapTree","firstWalk","secondWalk","sizeNode","tx","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","stickies","sticky","mode","score","remaining","worst","stickify","rmax","rmin","padFunction","padConstant","µ","σ","logNormal","bates","d3_scale_polylinear","d3_scale_linear","d3_scale_linearTicks","d3_scale_linearTickFormat","d3_scale_linearNice","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","rangeBand","steps","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","d3_scale_quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","quantize","threshold","innerRadius","d3_svg_arcInnerRadius","outerRadius","d3_svg_arcOuterRadius","cornerRadius","padRadius","d3_svg_arcAuto","d3_svg_arcStartAngle","d3_svg_arcEndAngle","d3_svg_arcPadAngle","rc","circleSegment","rp","ap","d3_svg_arcSweep","rc1","rc0","oc","kc","lc","t30","d3_svg_arcCornerTangents","t12","t03","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","linear-closed","d3_svg_lineLinearClosed","d3_svg_lineStep","step-before","d3_svg_lineStepBefore","step-after","d3_svg_lineStepAfter","d3_svg_lineBasis","basis-open","d3_svg_lineBasisOpen","basis-closed","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineCardinal","cardinal-open","d3_svg_lineCardinalOpen","cardinal-closed","d3_svg_lineCardinalClosed","monotone","d3_svg_lineMonotone","d3_svg_lineHermite","d3_svg_lineCardinalTangents","tangents","pi","lp","p2","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineRadial","d3_svg_area","interpolateReverse","points0","points1","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","equals","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionNamespace","d3_transitionInherit","d3_transitionNode","d3_transition","d3_selection_interruptNS","lock","activeId","d3_transitionPrototype","d3_transition_tween","d3_transition_text","tweens","cancelId","subnodes","nameNS","styleString","inheritId","axis","tickFormat_","orient","d3_svg_axisDefaultOrient","innerTickSize","outerTickSize","tickPadding","tickArguments_","tickValues","tickTransform","tickEnter","tickExit","tickUpdate","tickSpacing","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","d3_svg_axisX","d3_svg_axisY","d3_svg_axisOrients","tickSize","tickSubdivide","brush","xExtentDomain","yExtentDomain","xExtent","yExtent","xClamp","yClamp","resizes","d3_svg_brushResizes","brushstart","background","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","eventTarget","event_","resizing","resizingX","resizingY","dragging","keydown","keyup","brushmove","brushend","ex","ey","altKey","keyCode","move1","extent1","extent0","yi","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","d3_time_formatIsoNative","d3_time_scale","tickMethod","d3_time_scaleSteps","d3_time_scaleMilliseconds","d3_time_scaleDate","skip","skipped","iso","second","minute","hour","timezone","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","d3_json","d3_html","createRange","selectNode","body","createContextualFragment","json","responseXML","ctx","toObject","isArrayIter","toLength","createProperty","getIterFn","arrayLike","iterator","aLen","mapfn","mapping","iterFn","done","$values","classof","ITERATOR","Iterators","isIterable","global","transformAbsolute","transformRelative","topology","feature$1","absolute","geometryType","stitchArcs","stitchedArcs","fragmentByStart","fragmentByEnd","fragments","emptyIndex","ends","dp","fg","gf","mesh","meshArcs","geomsByArc","geoms","cartesianTriangleArea","triangle","mergeArcs","objects","polygonsByArc","components","register","ring$$","ki","indexesByArc","ij","ik","compareArea","minAreaHeap","heap","up","down","removed","presimplify","relative","maxArea","topojson","defaultOptions","aspectRatio","setProjection","dataType","filters","dataUrl","hideAntarctica","hideHawaiiAndAlaska","borderColor","popupTemplate","geography","popupOnHover","highlightOnHover","projectionConfig","bubblesConfig","fillOpacity","animate","highlightFillOpacity","exitDelay","arcConfig","strokeColor","strokeWidth","arcSharpness","animationSpeed","destination","latitude","longitude","datumValue","optionsValue","optionsValues","fnContext","addContainer","offsetWidth","offsetHeight","options","padding-bottom","addStyleBlock","drawSubunits","fillData","colorCodeData","geoConfig","subunits","addLayer","geoData","fillColor","handleGeographyConfig","moveToFront","$this","previousAttributes","stroke","stroke-width","fill-opacity","updatePopup","addLegend","layer","label","legendTitle","defaultFillName","labels","addGraticule","handleArcs","defaults","originXY","destXY","latLngToXY","midXY","sharpness","getTotalLength","WebkitTransition","strokeDasharray","strokeDashoffset","handleLabels","labelStartCoodinates","xOffset","yOffset","smallStateIndex","yStart","fontSize","labelColor","lineWidth","fontFamily","customLabelText","handleBubbles","filterData","datumHasCoords","latLng","centered","filterKey","obj","prop","Datamap","addPlugin","disableDefaultStyles","draw","newsize","clientWidth","oldsize","pathAndProjection","results","customTopo","dataJson","tmpData","Datamaps","updateChoropleth","hoverover","worldTopo","world","abwTopo","afgTopo","agoTopo","aiaTopo","albTopo","aldTopo","andTopo","areTopo","argTopo","armTopo","asmTopo","ataTopo","atcTopo","atfTopo","atgTopo","ausTopo","autTopo","azeTopo","bdiTopo","belTopo","benTopo","bfaTopo","bgdTopo","bgrTopo","bhrTopo","bhsTopo","bihTopo","bjnTopo","blmTopo","blrTopo","blzTopo","bmuTopo","bolTopo","braTopo","brbTopo","brnTopo","btnTopo","norTopo","bwaTopo","cafTopo","canTopo","cheTopo","chlTopo","chnTopo","civTopo","clpTopo","cmrTopo","codTopo","cogTopo","cokTopo","colTopo","comTopo","cpvTopo","criTopo","csiTopo","cubTopo","cuwTopo","cymTopo","cynTopo","cypTopo","czeTopo","deuTopo","djiTopo","dmaTopo","dnkTopo","domTopo","dzaTopo","ecuTopo","egyTopo","eriTopo","esbTopo","espTopo","estTopo","ethTopo","finTopo","fjiTopo","flkTopo","fraTopo","froTopo","fsmTopo","gabTopo","psxTopo","gbrTopo","geoTopo","ggyTopo","ghaTopo","gibTopo","ginTopo","gmbTopo","gnbTopo","gnqTopo","grcTopo","grdTopo","grlTopo","gtmTopo","gumTopo","guyTopo","hkgTopo","hmdTopo","hndTopo","hrvTopo","htiTopo","hunTopo","idnTopo","imnTopo","indTopo","ioaTopo","iotTopo","irlTopo","irnTopo","irqTopo","islTopo","isrTopo","itaTopo","jamTopo","jeyTopo","jorTopo","jpnTopo","kabTopo","kasTopo","kazTopo","kenTopo","kgzTopo","khmTopo","kirTopo","knaTopo","korTopo","kosTopo","kwtTopo","laoTopo","lbnTopo","lbrTopo","lbyTopo","lcaTopo","lieTopo","lkaTopo","lsoTopo","ltuTopo","luxTopo","lvaTopo","macTopo","mafTopo","marTopo","mcoTopo","mdaTopo","mdgTopo","mdvTopo","mexTopo","mhlTopo","mkdTopo","mliTopo","mltTopo","mmrTopo","mneTopo","mngTopo","mnpTopo","mozTopo","mrtTopo","msrTopo","musTopo","mwiTopo","mysTopo","namTopo","nclTopo","nerTopo","nfkTopo","ngaTopo","nicTopo","niuTopo","nldTopo","nplTopo","nruTopo","nulTopo","nzlTopo","omnTopo","pakTopo","panTopo","pcnTopo","perTopo","pgaTopo","phlTopo","plwTopo","pngTopo","polTopo","priTopo","prkTopo","prtTopo","pryTopo","pyfTopo","qatTopo","rouTopo","rusTopo","rwaTopo","sahTopo","sauTopo","scrTopo","sdnTopo","sdsTopo","senTopo","serTopo","sgpTopo","sgsTopo","shnTopo","slbTopo","sleTopo","slvTopo","smrTopo","solTopo","somTopo","spmTopo","srbTopo","stpTopo","surTopo","svkTopo","svnTopo","sweTopo","swzTopo","sxmTopo","sycTopo","syrTopo","tcaTopo","tcdTopo","tgoTopo","thaTopo","tjkTopo","tkmTopo","tlsTopo","tonTopo","ttoTopo","tunTopo","turTopo","tuvTopo","twnTopo","tzaTopo","ugaTopo","ukrTopo","umiTopo","uryTopo","usaTopo","usa","usgTopo","uzbTopo","vatTopo","vctTopo","venTopo","vgbTopo","virTopo","vnmTopo","vutTopo","wlfTopo","wsbTopo","wsmTopo","yemTopo","zafTopo","zmbTopo","zweTopo","lat","lng","className","subunit","subunitData","pluginFn","createNewLayer","jQuery","fn","datamaps","datamap"],"mappings":"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ACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACArD,IAAM07C,KCVKS,IDYIR,GAAKO,ICZH,IAAAj+C,MAAA,GAAAoF,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACArD,IAAM07C,KCVKU,IDYIT,GAAKQ,ICZH,IAAAl+C,MAAA,GAAAoF,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACArD,IAAM07C,KCVKW,IDYIV,GAAKS,ICZH,IAAAn+C,MAAA,GAAAoF,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACArD,IAAM07C,KCVKY,IDYIX,GAAKU,ICZH,IAAAp+C,MAAA,GAAAoF,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACArD,IAAM07C,KCRKa,IDUIZ,GAAKW,ICVH,IAAAr+C,MAAA,GAAAoF,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACArD,IAAM07C,KCRKc,IDUIb,GAAKY,ICVH,IAAAt+C,MAAA,GAAAoF,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACArD,IAAM07C,KCRKe,IDUId,GAAKa,ICVH,IAAAv+C,MAAA,GAAAoF,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACArD,IAAM07C,KCRKgB,IDUIf,GAAKc,ICVH,IAAAx+C,MAAA,GAAAoF,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACArD,IAAM07C,KCRKiB,IDUIhB,GAAKe,ICVH,IAAAz+C,MAAA,GAAAoF,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACArD,IAAM07C,KCRKkB,IDUIjB,GAAKgB,ICVH,IAAA1+C,MAAA,GAAAoF,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACArD,IAAM07C,KCRKmB,IDUIlB,GAAKiB,ICVH,IAAA3+C,MAAA,GAAAoF,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACArD,IAAM07C,KCRKoB,IDUInB,GAAKkB,ICVH,IAAA5+C,MAAA,GAAAoF,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACArD,IAAM07C,KCRKqB,IDUIpB,GAAKmB,ICVH,IAAA7+C,MAAA,GAAAoF,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACArD,IAAM07C,KCRKsB,IDUIrB,GAAKoB,ICVH,IAAA9+C,MAAA,GAAAoF,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACArD,IAAM07C,KCRKuB,IDUItB,GAAKqB,ICVH,IAAA/+C,MAAA,GAAAoF,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACArD,IAAM07C,KCRKwB,IDUIvB,GAAKsB,ICVH,IAAAh/C,MAAA,GAAAoF,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACArD,IAAM07C,KCRKyB,IDUIxB,GAAKuB,ICVH,IAAAj/C,MAAA,GAAAoF,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACArD,IAAM07C,KCRK0B,IDUIzB,GAAKwB,ICVH,IAAAl/C,MAAA,GAAAoF,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACArD,IAAM07C,KCRK2B,IDUI1B,GAAKyB,ICVH,IAAAn/C,MAAA,GAAAoF,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACArD,IAAM07C,KCRK4B,IDUI3B,GAAK0B,ICVH,IAAAp/C,MAAA,GAAAoF,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACArD,IAAM07C,KCRK6B,IDUI5B,GAAK2B,ICVH,IAAAr/C,MAAA,GAAAoF,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACArD,IAAM07C,KAESC,GAAK4B,ICVLj2B,GAAyB5F,GAAS,UAAiBA,IAAS,WCAzD4F,GAAyB5F,IAAS,aAAoBA,GAAS,YAE/D4F,GAAyB5F,GAAS,aAAmBA,GAAS,YAExEA,KCLAlD,KACRve,KA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F,KAAA,UACA8sD,WAAA,CACAjtD,KAAA,gBAEAlF,GAAA,MACA8uF,KAAA,CACA,mCACA,SAEa,CACbzpF,KAAA,UACA8sD,WAAA,CACAjtD,KAAA,UAEAlF,GAAA,MACA8uF,KAAA,CACA,yCAEa,CACbzpF,KAAA,UACA8sD,WAAA,CACAjtD,KAAA,YAEAlF,GAAA,MACA8uF,KAAA,CACA,2BAKAA,KAAA,CACA,CACA,YACA,SACA,OACA,OACA,OACA,QACA,OACA,QACA,OACA,SACA,QAEA,CACA,YACA,QACA,UAEA,CACA,YACA,OACA,QACA,QACA,OACA,QACA,MACA,OACA,QACA,SACA,SACA,OACA,SACA,SACA,QACA,OACA,QACA,QACA,QAEA,CACA,YACA,SAEA,CACA,YACA,SACA,UACA,SACA,UACA,UACA,QACA,QACA,UACA,QACA,SACA,QACA,SACA,UACA,UACA,QACA,UACA,QACA,SACA,SACA,QACA,UACA,SACA,UACA,QACA,SACA,QACA,SACA,UAEA,CACA,YACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,SAEA,CACA,YACA,QACA,SACA,QACA,SACA,QACA,QACA,UACA,SACA,UAEA,CACA,YACA,UACA,QACA,SACA,UACA,QACA,SACA,QACA,UACA,WAEA,CACA,YACA,QACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,OACA,OACA,QACA,QACA,SACA,QAEA,CACA,YACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,SACA,OACA,MACA,QACA,OACA,OACA,OACA,OACA,OACA,SACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,MACA,QACA,OACA,SAEA,CACA,YACA,SAEA,CACA,YACA,QACA,OACA,UAEA,CACA,YACA,UACA,SACA,SACA,SAEA,CACA,YACA,SACA,QACA,UAEA,CACA,YACA,QACA,QACA,SACA,WAEA,CACA,YACA,OACA,OACA,SACA,QACA,OACA,OACA,SAEA,CACA,YACA,QACA,QACA,QACA,OAEA,CACA,YACA,QACA,OACA,SAEA,CACA,YACA,MACA,QACA,OACA,QACA,QACA,QACA,QACA,SAEA,CACA,YACA,SAEA,CACA,YACA,SAEA,CACA,YACA,QACA,SACA,OACA,UACA,QACA,SACA,UAEA,CACA,YACA,SACA,SACA,SACA,SAEA,CACA,YACA,QACA,QACA,SAEA,CACA,YACA,SACA,SACA,SACA,SACA,UACA,SACA,UAEA,CACA,YACA,SACA,QACA,SACA,SACA,QACA,UACA,SACA,QACA,QACA,QACA,QAEA,CACA,YACA,QACA,SACA,SACA,UACA,UACA,UACA,WAEA,CACA,YACA,SACA,SACA,QACA,SACA,UAEA,CACA,YACA,SACA,SACA,SACA,SACA,SACA,UACA,UACA,UACA,QACA,QACA,SACA,QACA,UACA,SACA,SACA,UACA,QACA,SACA,QACA,QACA,UACA,UACA,SACA,SACA,QACA,UACA,SACA,SACA,SACA,SACA,UACA,UACA,UACA,UACA,QACA,SACA,SAEA,CACA,YACA,QACA,QACA,SACA,OACA,SACA,SACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,OACA,OACA,QACA,QACA,OACA,QACA,QACA,QACA,OACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,SAEA,CACA,YACA,QACA,SACA,SACA,QACA,QACA,SAEA,CACA,YACA,QAEA,CACA,YACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SAEA,CACA,YACA,UAEA,CACA,YACA,SACA,OACA,SACA,QACA,SAEA,CACA,YACA,SACA,SACA,OACA,SAEA,CACA,WACA,SACA,SACA,QACA,SACA,SACA,MACA,SACA,QACA,QACA,QACA,QACA,UAEA,CACA,UACA,SACA,SACA,SACA,OACA,SACA,QACA,QACA,SACA,SACA,SAEA,CACA,WACA,SACA,SACA,QACA,QACA,UACA,UACA,UACA,UACA,QACA,SACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,UAEA,CACA,WACA,QACA,QACA,UACA,UACA,QACA,SACA,OACA,UAEA,CACA,WACA,SACA,QACA,QACA,SACA,QACA,UAEA,CACA,WACA,QACA,OACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,QACA,QACA,SAEA,CACA,WACA,QACA,SACA,SACA,SACA,UACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,OACA,QACA,OACA,OACA,OACA,QACA,OACA,SACA,QACA,SACA,SACA,SAEA,CACA,YACA,UACA,QACA,SACA,UACA,UACA,UACA,SACA,QACA,SACA,UACA,SACA,UACA,UACA,UACA,SACA,QACA,SACA,SACA,SACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,SACA,UACA,UACA,SACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,SACA,QACA,SACA,QACA,QACA,SACA,SACA,SACA,UACA,QACA,UACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,SACA,QACA,QACA,OACA,QACA,QACA,OACA,QACA,QACA,SACA,SACA,OACA,SACA,UACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,SACA,QACA,QACA,OACA,OACA,QACA,OACA,QACA,QACA,SACA,OACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,OACA,OACA,QACA,QACA,QACA,SACA,SACA,QACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,OACA,QACA,QACA,QACA,SACA,SACA,SACA,OACA,SACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,OACA,QACA,QACA,SACA,QACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,OACA,SACA,SACA,SACA,UACA,UACA,QACA,OACA,SACA,UACA,UACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,OACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,OACA,QACA,QACA,OACA,QACA,SACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,OACA,OACA,OACA,QACA,QACA,OACA,QACA,SACA,SACA,SACA,OACA,SACA,SACA,QACA,OACA,QACA,QACA,OACA,QACA,QACA,OACA,OACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,SACA,QACA,SACA,SACA,SACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,QACA,OACA,QACA,OACA,QACA,QACA,SACA,SACA,SACA,SACA,UACA,UACA,SACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,UACA,SACA,UACA,SACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,SACA,QACA,SACA,SACA,WACA,QACA,SACA,MACA,QACA,MACA,OACA,SACA,QACA,MACA,QACA,SACA,QACA,SACA,SACA,SACA,UACA,QACA,UACA,SACA,QACA,QACA,OACA,SACA,SACA,SACA,SACA,OACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,OACA,SACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,OACA,OACA,SACA,OACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,QACA,SACA,QACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,OACA,SACA,OACA,OACA,QACA,QACA,OACA,QACA,QACA,OACA,QACA,OACA,SACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,QACA,OACA,QACA,SACA,SACA,QACA,OACA,QACA,OACA,SACA,OACA,QACA,SACA,SACA,OACA,SACA,QACA,QACA,SACA,QACA,QACA,SACA,OACA,SACA,SACA,OACA,QACA,QACA,OACA,OACA,OACA,QACA,QACA,OACA,QACA,QACA,SACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,QACA,QACA,OACA,SACA,UACA,WAEA,CACA,YACA,SACA,QACA,QACA,SACA,SACA,QACA,OACA,QAEA,CACA,YACA,SACA,OACA,QACA,QACA,QACA,SACA,SACA,SACA,UACA,OACA,QACA,SACA,QACA,SACA,OACA,SAEA,CACA,YACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,OACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,MACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,UACA,UACA,UACA,SACA,SACA,UACA,SACA,SACA,QACA,UACA,SACA,UACA,UACA,UACA,SACA,SACA,OACA,UACA,UACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,SACA,QACA,OACA,QACA,UACA,UACA,QACA,OACA,QACA,QACA,UACA,UACA,UACA,SACA,OACA,SACA,SACA,OACA,SACA,QACA,SACA,SACA,UACA,UACA,QACA,UACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,SACA,UACA,OACA,UACA,UACA,QACA,QACA,SACA,SACA,OACA,OACA,OACA,QACA,OACA,QACA,SACA,QACA,OACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,QACA,OACA,SACA,QACA,QACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,QACA,OACA,OACA,MACA,QACA,QACA,QACA,OACA,QACA,OACA,OACA,QACA,SACA,QACA,SACA,OACA,SACA,OACA,QACA,OACA,QACA,OACA,QACA,OACA,OACA,OACA,SACA,SACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,OACA,SACA,SACA,SACA,MACA,SACA,QACA,QACA,OACA,SACA,SACA,UACA,QACA,QACA,SACA,UACA,QACA,SACA,SACA,SACA,SACA,MACA,SACA,QACA,SACA,QACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,OACA,OACA,QACA,OACA,OACA,OACA,QACA,QACA,QACA,OACA,QACA,SACA,QACA,UAEA,CACA,YACA,SACA,QACA,QACA,UAEA,CACA,YACA,SACA,SACA,UACA,SAEA,CACA,YACA,SACA,QACA,UACA,SACA,SAEA,CACA,YACA,QACA,SACA,OACA,SAEA,CACA,YACA,MACA,SACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,SAEA,CACA,YACA,SACA,QACA,OACA,SACA,OACA,UAEA,CACA,YACA,QACA,SAEA,CACA,YACA,QACA,SACA,SAEA,CACA,YACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,UACA,SAEA,CACA,YACA,QACA,SACA,QACA,QACA,SACA,WAEA,CACA,YACA,OACA,SACA,QACA,MACA,SACA,OAEA,CACA,YACA,OACA,SACA,QACA,OACA,SAEA,CACA,YACA,QACA,SAEA,CACA,YACA,QACA,OACA,SAEA,CACA,YACA,QACA,QACA,QACA,SACA,UACA,UACA,UAEA,CACA,YACA,QACA,QACA,SACA,UAEA,CACA,YACA,UAEA,CACA,YACA,QACA,UAEA,CACA,YACA,SACA,SACA,SACA,SACA,QACA,SAEA,CACA,YACA,SAEA,CACA,YACA,UAEA,CACA,YACA,QACA,QACA,QACA,QACA,SACA,QACA,QAEA,CACA,YACA,OACA,OACA,OACA,QAEA,CACA,YACA,QACA,OACA,UAEA,CACA,YACA,SACA,QACA,SACA,QACA,UACA,SACA,SACA,QACA,UAEA,CACA,YACA,SACA,SACA,UACA,SACA,QACA,UAEA,CACA,YACA,QACA,OACA,QACA,QACA,OACA,OACA,QACA,QACA,OACA,QACA,OACA,QACA,OACA,QACA,QAEA,CACA,YACA,SACA,QACA,SACA,QACA,SACA,UAEA,CACA,YACA,SAEA,CACA,WACA,QACA,QACA,QACA,SACA,SACA,SAEA,CACA,YACA,QACA,QACA,SAEA,CACA,YACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,SACA,OACA,SAEA,CACA,YACA,QACA,SACA,OACA,SACA,OACA,QACA,SACA,OACA,SACA,QACA,QACA,QACA,OACA,SACA,UACA,SACA,SACA,SACA,OACA,MACA,UAEA,CACA,YACA,QACA,OACA,QACA,QACA,QACA,QACA,SACA,SAEA,CACA,YACA,UACA,UACA,SAEA,CACA,YACA,QACA,WAEA,CACA,YACA,QACA,SACA,SACA,UACA,SAEA,CACA,YACA,QACA,UAEA,CACA,YACA,MACA,OACA,OACA,QACA,SACA,QACA,QAEA,CACA,YACA,QACA,QACA,SACA,OACA,OACA,SACA,SAEA,CACA,YACA,UACA,QACA,OACA,QACA,SAEA,CACA,YACA,SACA,OACA,OACA,SACA,MACA,UAEA,CACA,YACA,OACA,SACA,SACA,SACA,SAEA,CACA,YACA,QACA,SACA,UAEA,CACA,YACA,SACA,SACA,SACA,SACA,QACA,SACA,OACA,SACA,OACA,OACA,SACA,OACA,UAEA,CACA,YACA,OACA,QACA,OACA,QACA,SAEA,CACA,YACA,QACA,SAEA,CACA,YACA,SACA,QACA,OACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,UACA,QACA,QACA,QACA,SAEA,CACA,YACA,SACA,SACA,SACA,QACA,SACA,QACA,UACA,QACA,QACA,SACA,QACA,SACA,UACA,UAEA,CACA,YACA,QACA,QACA,QACA,OACA,QACA,SAEA,CACA,YACA,OACA,MACA,OACA,QACA,OAEA,CACA,YACA,OACA,OACA,QACA,SACA,OACA,SACA,OACA,SACA,SACA,QACA,UAEA,CACA,YACA,OACA,OACA,QAEA,CACA,YACA,SACA,SACA,SACA,OACA,SACA,QACA,UAEA,CACA,YACA,QACA,SACA,OACA,QACA,QACA,OACA,OACA,OACA,UAEA,CACA,YACA,QACA,OACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,QACA,SACA,SACA,SACA,OACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,UAEA,CACA,YACA,QACA,SACA,QACA,UACA,UACA,SACA,WAEA,CACA,YACA,OACA,OACA,OACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,UACA,SACA,OACA,SAEA,CACA,YACA,UACA,QACA,OACA,UACA,QACA,SACA,QACA,OACA,SACA,SACA,OACA,OACA,QACA,QACA,OACA,OACA,QACA,QACA,MACA,SAEA,CACA,YACA,SACA,OACA,QACA,SACA,OACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,OAEA,CACA,YACA,SACA,OACA,OACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,SACA,MACA,QACA,SACA,OACA,OACA,QACA,QACA,SAEA,CACA,YACA,OACA,QACA,SACA,OACA,QACA,SACA,SACA,QACA,QACA,SACA,QACA,OACA,MACA,QACA,OACA,QACA,OAEA,CACA,YACA,QACA,OACA,QACA,OACA,QACA,OACA,UAEA,CACA,YACA,SACA,OACA,OACA,QACA,OACA,QACA,OACA,SAEA,CACA,YACA,MACA,QACA,UACA,SACA,QACA,UACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,OACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,UACA,UACA,UACA,UACA,UACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,QACA,UACA,UACA,UACA,UACA,UACA,SACA,QACA,SACA,SACA,UACA,WACA,UACA,UACA,UACA,WAEA,CACA,YACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,UAEA,CACA,YACA,QACA,SAEA,CACA,YACA,SACA,SACA,QACA,SACA,UAEA,CACA,YACA,SACA,SACA,SACA,QACA,SACA,SACA,SAEA,CACA,YACA,QACA,QACA,SACA,QACA,UAEA,CACA,YACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,UACA,QACA,SACA,QACA,UACA,SACA,UACA,UACA,SACA,QACA,OACA,SACA,QAEA,CACA,YACA,QACA,OACA,QACA,OACA,QACA,SACA,QACA,MACA,SAEA,CACA,YACA,QAEA,CACA,YACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,UAEA,CACA,YACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,MACA,QACA,QACA,QACA,QACA,SAEA,CACA,YACA,QACA,SACA,QACA,SACA,QACA,UAEA,CACA,YACA,UAEA,CACA,YACA,SACA,QACA,SACA,SACA,QACA,SACA,SAEA,CACA,YACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,UACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,UACA,UACA,UAEA,CACA,YACA,QACA,SACA,UACA,WAEA,CACA,YACA,QACA,QACA,SACA,SACA,QACA,SACA,OACA,QACA,OACA,OACA,SAEA,CACA,YACA,QACA,OACA,UACA,SACA,SACA,QACA,QACA,UAEA,CACA,YACA,SACA,SACA,SACA,OACA,SACA,SACA,SAEA,CACA,YACA,SACA,SACA,QACA,SACA,QACA,SACA,SACA,OACA,SACA,QACA,QACA,QACA,SACA,SACA,UAEA,CACA,YACA,UACA,QACA,SACA,UACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,UACA,SACA,SACA,OACA,OACA,UACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,SACA,WAEA,CACA,YACA,OACA,SACA,SACA,QACA,SACA,SACA,SACA,QACA,OACA,SAEA,CACA,YACA,UACA,QACA,QACA,MACA,QACA,QACA,SAEA,CACA,YACA,UACA,QACA,QACA,QACA,OACA,SAEA,CACA,YACA,QACA,OACA,SACA,SACA,SACA,QACA,OACA,SACA,UACA,SACA,SACA,UACA,UACA,QACA,SACA,QACA,OACA,OACA,SAEA,CACA,YACA,SACA,QACA,QACA,OACA,SACA,QACA,QACA,WAEA,CACA,YACA,UACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,UAEA,CACA,YACA,SACA,OACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,QACA,SACA,QACA,QACA,UACA,UACA,QACA,SACA,QACA,QACA,UACA,QACA,QACA,OACA,UACA,SACA,UACA,OACA,QACA,OACA,MACA,OACA,QACA,OACA,QACA,QACA,SACA,OACA,OACA,OACA,OACA,QACA,QACA,OACA,MACA,OACA,QACA,SACA,SACA,SACA,SACA,UACA,OACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,OACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAEA,CACA,YACA,OACA,SACA,SACA,SACA,SACA,OACA,SACA,QACA,SACA,QAEA,CACA,YACA,QACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,UACA,SACA,SACA,SACA,QACA,QACA,SAEA,CACA,YACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,OACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,OACA,SACA,UACA,SACA,OACA,QACA,SACA,QACA,SACA,QACA,OACA,OACA,SACA,SACA,OACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,OACA,QACA,QACA,SACA,SACA,UACA,SACA,SACA,QACA,SACA,SACA,SACA,QACA,QACA,OACA,QACA,QACA,SACA,QACA,UACA,SACA,SACA,UACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,SACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,SACA,UACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,UACA,UACA,UACA,UACA,UACA,SACA,QACA,SACA,UACA,UACA,UACA,UACA,OACA,QACA,QACA,OACA,SACA,UACA,QACA,QACA,SACA,OACA,QACA,QACA,SACA,UACA,UACA,UACA,UACA,QACA,QACA,QACA,SACA,UAEA,CACA,YACA,UACA,QACA,SACA,QACA,SACA,SACA,QACA,SACA,OACA,QACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,UAEA,CACA,YACA,UACA,SACA,OACA,OACA,UAEA,CACA,YACA,QACA,QACA,QACA,SACA,OACA,SACA,OACA,OACA,QACA,UAEA,CACA,YACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,SACA,UACA,SACA,SACA,SACA,QACA,SACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,QACA,SACA,SACA,QACA,SACA,SACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,UACA,SACA,UACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,WAEA,CACA,YACA,SACA,OACA,QACA,UACA,SACA,SACA,UACA,QACA,SACA,SACA,OACA,QACA,SACA,SAEA,CACA,YACA,UACA,QACA,SACA,OACA,QACA,QACA,QACA,SACA,UACA,WAEA,CACA,YACA,UACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,UACA,UACA,UACA,SAEA,CACA,YACA,UACA,QACA,SACA,QACA,QACA,SACA,UAEA,CACA,YACA,SACA,QACA,UACA,SACA,SACA,OACA,SACA,QACA,QACA,QACA,QACA,OAEA,CACA,YACA,SACA,QACA,QACA,QACA,UACA,UACA,UACA,SACA,QACA,QACA,UACA,SACA,QACA,QACA,SACA,SACA,QACA,SACA,QACA,QACA,SAEA,CACA,YACA,SACA,OACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,OACA,QACA,SACA,QACA,UACA,UACA,QACA,UACA,SACA,QACA,SACA,QACA,QACA,SACA,QACA,SACA,QACA,SAEA,CACA,YACA,SACA,UACA,SACA,UACA,SACA,SACA,QACA,QACA,QACA,QAEA,CACA,YACA,SACA,QACA,QACA,QACA,SACA,SAEA,CACA,YACA,UACA,SACA,QACA,OACA,SACA,UAEA,CACA,YACA,UACA,QACA,MACA,QACA,QACA,UAEA,CACA,YACA,UACA,SACA,SACA,QACA,QACA,QACA,SACA,UAEA,CACA,YACA,SACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,SACA,UAEA,CACA,YACA,SACA,UACA,UACA,SACA,QACA,SACA,OACA,QACA,QACA,SACA,SACA,QACA,QACA,OACA,SACA,OACA,SACA,SACA,SACA,UAEA,CACA,YACA,QACA,QACA,SACA,SACA,UACA,UACA,UACA,OACA,UACA,UACA,UACA,UACA,UACA,SACA,QACA,UACA,SACA,UACA,UACA,UACA,UACA,QACA,OACA,QACA,UACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,OACA,SACA,SACA,SACA,QACA,QACA,OACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,QACA,OACA,OACA,QACA,QACA,SACA,QACA,OACA,OACA,OACA,QACA,QACA,QACA,SAEA,CACA,YACA,SACA,UACA,QACA,SACA,SACA,QACA,UACA,SACA,UAEA,CACA,YACA,SACA,SACA,OACA,QACA,QACA,QACA,QAEA,CACA,YACA,QACA,OACA,UAEA,CACA,YACA,UACA,UACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,OACA,QACA,SAEA,CACA,YACA,QACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,QACA,OACA,SACA,SACA,QACA,QACA,SACA,QACA,OACA,SACA,SACA,SACA,SACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,SAEA,CACA,YACA,QACA,QAEA,CACA,YACA,UACA,SACA,OACA,QACA,QACA,QACA,QACA,UACA,UAEA,CACA,YACA,SACA,UACA,UACA,QACA,QACA,SACA,UACA,UACA,WAEA,CACA,YACA,UACA,UACA,UACA,QACA,QACA,QACA,SACA,UACA,UACA,UACA,SACA,UACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,QACA,UACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,QACA,UACA,QACA,SACA,SACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,SACA,UACA,UACA,SACA,UACA,SACA,QACA,OACA,SACA,UAEA,CACA,YACA,SACA,SACA,OACA,SACA,SACA,UACA,SACA,QACA,WAEA,CACA,YACA,SACA,QACA,QACA,SAEA,CACA,YACA,QACA,UACA,SACA,SACA,OACA,SACA,QACA,UACA,OACA,QACA,OACA,QACA,SACA,QACA,UAEA,CACA,YACA,QACA,OACA,SACA,UACA,SACA,UACA,UACA,UAEA,CACA,YACA,QACA,WAEA,CACA,YACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,WAEA,CACA,YACA,SACA,SACA,QACA,QACA,OACA,SACA,OACA,UAEA,CACA,YACA,SACA,QACA,UAEA,CACA,YACA,QACA,OACA,SACA,QACA,SAEA,CACA,YACA,OACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,QAEA,CACA,YACA,QACA,QACA,UACA,QACA,QACA,SACA,SACA,QACA,OACA,OACA,SAEA,CACA,YACA,QAEA,CACA,YACA,QACA,SACA,SACA,SACA,UACA,SACA,SACA,QACA,SACA,QACA,SACA,SACA,OACA,SACA,OACA,QACA,SACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,SACA,SACA,UACA,SACA,SACA,QACA,QACA,SAEA,CACA,YACA,SACA,QACA,QACA,QACA,QACA,OACA,SACA,QACA,QACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,QACA,QACA,UACA,UACA,SACA,UACA,SACA,UACA,QACA,SACA,SACA,SAEA,CACA,YACA,SACA,SACA,SACA,UACA,UACA,UACA,QAEA,CACA,YACA,OACA,MACA,QACA,SACA,OACA,QACA,OACA,QACA,QAEA,CACA,YACA,MACA,OACA,QACA,MACA,OACA,QACA,QACA,OACA,OAEA,CACA,YACA,MACA,OACA,QACA,OACA,OACA,MACA,QACA,MACA,QAEA,CACA,YACA,QACA,UACA,SACA,SACA,UAEA,CACA,YACA,OACA,SACA,QACA,UAEA,CACA,YACA,SAEA,CACA,YACA,OACA,SACA,SACA,QACA,OACA,QAEA,CACA,YACA,OACA,QACA,MACA,QACA,OACA,SACA,QACA,OACA,OACA,OACA,QACA,OACA,OACA,OACA,OACA,QACA,OACA,OACA,UAEA,CACA,YACA,OACA,OAEA,CACA,YACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,UAEA,CACA,YACA,SACA,SACA,SACA,SAEA,CACA,YACA,SACA,QACA,SACA,UACA,UACA,SACA,SACA,SACA,SAEA,CACA,YACA,SACA,SACA,QACA,UAEA,CACA,YACA,QACA,SACA,QACA,SACA,UAEA,CACA,YACA,QACA,UACA,QACA,SACA,QACA,SACA,SACA,QACA,SACA,OACA,QACA,QACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,QACA,SACA,QACA,QAEA,CACA,YACA,SAEA,CACA,YACA,OACA,OACA,QACA,QACA,SACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,QACA,OACA,OACA,OACA,QAEA,CACA,YACA,SACA,QACA,OACA,QACA,QACA,QACA,UAEA,CACA,YACA,UAEA,CACA,YACA,QACA,SACA,QACA,OACA,OACA,SACA,QACA,OACA,OACA,QACA,SACA,QACA,QACA,SACA,QACA,QAEA,CACA,YACA,SACA,SACA,QACA,QACA,QACA,QACA,UAEA,CACA,YACA,QACA,OACA,QACA,OACA,OACA,QACA,QACA,SACA,OACA,QACA,OACA,QACA,UAEA,CACA,YACA,OACA,OACA,OACA,QACA,OAEA,CACA,YACA,QACA,QACA,OACA,OACA,OACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,UAEA,CACA,YACA,UACA,SACA,UACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,OACA,QACA,OACA,QACA,SACA,OACA,QACA,OACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,UACA,SACA,QACA,SAEA,CACA,YACA,SACA,OACA,QACA,SACA,SACA,SACA,UACA,QACA,SACA,SACA,QACA,SACA,SAEA,CACA,YACA,SACA,QACA,OACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,OACA,QACA,OACA,OACA,OACA,QAEA,CACA,YACA,MACA,SACA,MACA,OACA,QACA,OACA,QAEA,CACA,YACA,QACA,SACA,UAEA,CACA,YACA,SACA,QACA,OACA,QACA,QACA,SACA,UAEA,CACA,YACA,QACA,OACA,SACA,SACA,OACA,SACA,SACA,SACA,MACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,UACA,SACA,SACA,SACA,QACA,QACA,OACA,QACA,QACA,OACA,OAEA,CACA,YACA,MACA,OACA,QACA,QACA,UACA,SAEA,CACA,YACA,OACA,QACA,OACA,QACA,MACA,OACA,OACA,QACA,QAEA,CACA,YACA,OACA,UACA,QACA,QACA,QAEA,CACA,YACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,QAEA,CACA,YACA,SACA,QACA,SACA,SACA,OACA,QACA,QACA,QACA,UAEA,CACA,YACA,OACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,UAEA,CACA,YACA,QACA,SACA,SACA,QACA,QACA,SACA,UAEA,CACA,YACA,QACA,SACA,SACA,QACA,SACA,UAEA,CACA,YACA,OACA,QACA,SACA,UAEA,CACA,YACA,OACA,SAEA,CACA,YACA,QACA,OACA,OACA,OACA,SAEA,CACA,YACA,OACA,OACA,QACA,QACA,QACA,SAEA,CACA,YACA,QACA,QAEA,CACA,YACA,QACA,SACA,UACA,UAEA,CACA,YACA,WAEA,CACA,YACA,QACA,QACA,QACA,OACA,QACA,OACA,SAEA,CACA,YACA,QACA,QAEA,CACA,YACA,UACA,SACA,QACA,QACA,SAEA,CACA,YACA,SACA,QACA,OACA,OACA,OACA,QACA,QACA,SACA,SACA,QACA,QACA,SACA,OACA,UACA,SAEA,CACA,YACA,OACA,OACA,SACA,MACA,QACA,OACA,SACA,QACA,SACA,UACA,SACA,SACA,OACA,SACA,SACA,QACA,SACA,UACA,QACA,SAEA,CACA,YACA,OACA,QACA,OACA,OACA,SAEA,CACA,YACA,WACA,WACA,WAEA,CACA,YACA,SACA,OACA,SACA,SACA,QACA,UACA,WAEA,CACA,YACA,YAEA,CACA,YACA,OACA,OAEA,CACA,YACA,OACA,QACA,OACA,QACA,QACA,QACA,OACA,OACA,QACA,OACA,OACA,QACA,SACA,QACA,UAEA,CACA,YACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,SACA,QAEA,CACA,YACA,SACA,QACA,SACA,UACA,QACA,SACA,QACA,SACA,WAEA,CACA,YACA,QACA,QACA,SACA,QACA,SACA,QACA,UACA,SACA,QACA,SACA,QACA,SACA,UAEA,CACA,YACA,QACA,QACA,UACA,SACA,OACA,QACA,MACA,OACA,QACA,QACA,QACA,SAEA,CACA,YACA,QACA,SACA,UACA,UACA,UACA,SACA,UACA,SACA,QACA,SACA,QACA,OACA,SAEA,CACA,YACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,QACA,SACA,SAEA,CACA,YACA,SACA,SACA,UAEA,CACA,YACA,QACA,QACA,QACA,OACA,QACA,SAEA,CACA,YACA,OACA,SACA,SACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,SACA,QACA,SAEA,CACA,YACA,WAEA,CACA,YACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,UACA,SACA,SACA,UAEA,CACA,YACA,QACA,QACA,OACA,OACA,QACA,SAEA,CACA,YACA,SACA,QACA,SACA,SACA,SACA,SACA,QACA,UAEA,CACA,YACA,OACA,SACA,QACA,SACA,OACA,SACA,OACA,SAEA,CACA,YACA,SACA,SACA,QACA,SACA,QAEA,CACA,YACA,QACA,UACA,UACA,SACA,UACA,UACA,SACA,UACA,SACA,UACA,UACA,SACA,QACA,UACA,UACA,QACA,SACA,QACA,SAEA,CACA,YACA,QACA,QACA,OACA,QACA,OACA,SACA,OACA,OACA,MACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,WAEA,CACA,YACA,OACA,SACA,SACA,QACA,QACA,OACA,SACA,QAEA,CACA,YACA,QACA,UACA,QACA,WAEA,CACA,YACA,QACA,SACA,QACA,WAEA,CACA,YACA,SACA,SACA,SACA,SACA,SACA,QAEA,CACA,YACA,WACA,SACA,UACA,SACA,UAEA,CACA,YACA,QACA,SACA,UACA,SACA,QACA,OACA,QACA,OACA,SACA,QACA,SACA,OACA,UAEA,CACA,YACA,SACA,SACA,QACA,SACA,QACA,OACA,OACA,QAEA,CACA,YACA,QAEA,CACA,YACA,OACA,QACA,OACA,QACA,QACA,QACA,QAEA,CACA,YACA,SACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,UACA,UACA,WAEA,CACA,YACA,SACA,UACA,UACA,SACA,SACA,OACA,SACA,QACA,QACA,QACA,QACA,QACA,UAEA,CACA,YACA,QACA,QACA,SACA,UAEA,CACA,YACA,QACA,SACA,OACA,SACA,QACA,QACA,QACA,SACA,WAEA,CACA,YACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,QAEA,CACA,SACA,WACA,UACA,QACA,QACA,MACA,YAEA,CACA,SACA,SAEA,CACA,SACA,MACA,SACA,SAEA,CACA,YACA,QACA,SACA,QACA,SACA,SACA,UACA,SACA,UACA,UAEA,CACA,YACA,SACA,SACA,QACA,OACA,QACA,SAEA,CACA,YACA,OACA,OAEA,CACA,YACA,SACA,QACA,UACA,QACA,QACA,UAEA,CACA,YACA,UACA,SACA,UACA,UAEA,CACA,YACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,QACA,SACA,QACA,OACA,SAEA,CACA,YACA,OACA,QAEA,CACA,YACA,OACA,UAEA,CACA,YACA,QACA,SAEA,CACA,YACA,OACA,SACA,SACA,SAEA,CACA,YACA,SACA,SACA,SACA,OACA,OACA,OACA,QAEA,CACA,YACA,OACA,QACA,QAEA,CACA,YACA,SACA,SACA,OACA,SAEA,CACA,YACA,OACA,SACA,WAEA,CACA,YACA,UACA,OACA,QACA,SACA,UACA,QACA,OACA,SACA,SACA,SACA,QACA,SACA,SACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,QACA,UACA,SACA,QACA,QACA,OACA,QACA,QACA,QACA,SACA,OACA,QACA,OACA,SACA,MACA,SACA,QACA,QACA,QACA,UACA,QACA,SACA,QACA,QACA,QACA,QAEA,CACA,YACA,OACA,QACA,SACA,QACA,UAEA,CACA,YACA,MACA,SACA,QACA,SACA,QACA,OACA,SACA,QACA,UAEA,CACA,YACA,SACA,UAEA,CACA,YACA,UACA,UACA,UACA,UAEA,CACA,WACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,SAEA,CACA,YACA,OACA,SACA,OACA,QACA,OACA,SACA,QACA,SAEA,CACA,YACA,QACA,OACA,QACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,WAEA,CACA,YACA,SACA,SACA,OACA,QACA,QACA,QACA,SAEA,CACA,YACA,QACA,OACA,OACA,MACA,MACA,QACA,MACA,QAEA,CACA,YACA,QACA,SACA,MACA,MACA,QACA,OAEA,CACA,YACA,QACA,MACA,MACA,OACA,QACA,QACA,OACA,MACA,MACA,OACA,QACA,QACA,SACA,SACA,SACA,MACA,OACA,SACA,SAEA,CACA,YACA,QAEA,CACA,YACA,OACA,OACA,MACA,SACA,OACA,OACA,QACA,UACA,QACA,SACA,UACA,QACA,QACA,SAEA,CACA,YACA,SACA,QACA,QACA,MACA,QACA,SAEA,CACA,YACA,QACA,OACA,MACA,SAEA,CACA,YACA,OACA,SAEA,CACA,YACA,SACA,OACA,QACA,QACA,OACA,SACA,SACA,OACA,SACA,QAEA,CACA,YACA,QACA,QACA,UACA,SACA,UACA,QACA,SACA,SACA,QACA,SACA,UACA,SACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SAEA,CACA,YACA,OACA,QACA,QACA,OACA,OAEA,CACA,YACA,SACA,SACA,SAEA,CACA,YACA,QACA,QACA,QACA,OACA,SACA,UACA,UACA,UACA,UACA,SACA,OACA,SACA,QACA,SACA,UACA,QACA,SACA,SACA,SACA,WACA,UACA,UACA,QACA,UACA,UACA,QACA,SACA,SACA,UACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,UACA,QACA,SACA,QACA,SACA,UACA,SACA,SACA,SACA,UACA,SACA,SACA,SACA,UACA,QACA,QACA,UACA,UACA,UACA,QACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,QACA,UACA,UACA,SACA,UACA,UACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,OACA,UACA,SACA,SACA,SACA,QACA,QACA,OACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,OACA,SACA,QACA,SACA,SACA,SACA,SACA,QACA,OACA,UACA,SACA,OACA,SACA,SACA,QACA,SACA,QACA,QACA,OACA,SACA,QACA,OACA,OACA,SACA,QACA,SACA,QACA,SACA,SACA,QAEA,CACA,YACA,SACA,QACA,SACA,UAEA,CACA,YACA,OACA,OACA,QACA,QACA,OACA,OACA,OACA,QACA,SACA,SACA,OACA,OACA,OACA,QAEA,CACA,YACA,SACA,MACA,QAEA,CACA,YACA,UACA,UACA,SACA,QACA,UAEA,CACA,YACA,QACA,OACA,QACA,SACA,SAEA,CACA,YACA,SACA,SACA,QACA,QACA,SACA,UAEA,CACA,YACA,SACA,UACA,QACA,SACA,SACA,OACA,QACA,UAEA,CACA,YACA,SACA,OACA,OACA,QACA,OACA,SACA,OACA,SAEA,CACA,YACA,QACA,QAEA,CACA,YACA,OACA,OACA,OACA,SACA,OACA,QACA,QACA,QAEA,CACA,YACA,OACA,OACA,MACA,OACA,MACA,QACA,OACA,MACA,MACA,OACA,OACA,MACA,MACA,QACA,OACA,QACA,QACA,QACA,SAEA,CACA,YACA,OACA,QACA,SACA,OACA,QACA,OACA,OACA,QACA,SACA,OACA,QACA,UACA,QACA,QACA,QACA,SACA,OACA,QACA,QACA,OACA,SACA,SAEA,CACA,YACA,QACA,QACA,WAEA,CACA,YACA,UAEA,CACA,YACA,SACA,SACA,SACA,SACA,MACA,SACA,QACA,SACA,SACA,QACA,OACA,OAEA,CACA,YACA,QACA,MACA,OACA,QACA,OACA,OACA,OACA,SAEA,CACA,YACA,OACA,SACA,SACA,QAEA,CACA,YACA,SACA,SACA,QACA,UACA,SACA,OACA,QACA,QACA,QACA,SACA,OACA,QACA,OACA,QACA,SAEA,CACA,YACA,SACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,SACA,OAEA,CACA,YACA,SACA,SAEA,CACA,YACA,UACA,UACA,UACA,WAEA,CACA,YACA,QACA,WAEA,CACA,YACA,QACA,QAEA,CACA,YACA,SACA,SACA,QACA,SACA,SACA,UAEA,CACA,YACA,QACA,SAEA,CACA,YACA,UACA,UACA,OACA,OACA,QACA,SAEA,CACA,YACA,SACA,OACA,QACA,UACA,SACA,QACA,QACA,OACA,QAEA,CACA,YACA,SACA,UACA,QACA,OACA,QACA,SACA,OACA,SAEA,CACA,YACA,QACA,OACA,SACA,SACA,SACA,SACA,UACA,SACA,SACA,QACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,SAEA,CACA,YACA,UACA,QACA,OACA,OACA,QACA,UAEA,CACA,YACA,UACA,SACA,QACA,OACA,SAEA,CACA,YACA,SACA,SACA,QACA,SACA,QACA,OACA,OACA,UAEA,CACA,YACA,SACA,UAEA,CACA,YACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,SACA,QACA,OACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,OACA,SACA,SACA,UAEA,CACA,YACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,SACA,QACA,UACA,UACA,SACA,SACA,SACA,SACA,UACA,SACA,QACA,UACA,QACA,OACA,SACA,OACA,UACA,QACA,QACA,SACA,SACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,SACA,QACA,OACA,QACA,SAEA,CACA,YACA,SACA,QACA,SACA,SACA,QACA,SACA,QACA,OACA,OACA,QACA,QACA,SAEA,CACA,YACA,QACA,SACA,QACA,QACA,QACA,OACA,SACA,QACA,QACA,QACA,QACA,OACA,UAEA,CACA,YACA,UACA,SACA,SACA,SACA,SACA,UACA,QACA,UACA,SACA,UACA,QACA,UACA,SACA,QACA,SACA,UACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,OACA,SAEA,CACA,YACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,UACA,SACA,QACA,QACA,SACA,QACA,SACA,SACA,UAEA,CACA,YACA,UACA,UACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,OACA,OACA,QACA,QAEA,CACA,YACA,QACA,UACA,QACA,SACA,UACA,QACA,UACA,SACA,UACA,SACA,SACA,SACA,QACA,WAEA,CACA,YACA,SACA,QACA,UACA,QACA,UACA,UACA,UACA,UACA,UACA,QACA,UACA,UACA,SACA,SACA,QACA,QACA,UACA,SACA,SACA,UACA,QACA,UACA,UACA,UACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,SACA,UACA,QACA,OACA,QACA,UACA,QACA,SACA,QACA,QACA,UAEA,CACA,YACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,OACA,SAEA,CACA,YACA,QACA,UACA,UACA,QACA,QACA,SACA,QACA,SAEA,CACA,YACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SAEA,CACA,YACA,SACA,SACA,SACA,QACA,SACA,QACA,UACA,WAEA,CACA,YACA,SACA,SACA,QACA,SACA,SACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,UACA,SACA,WAEA,CACA,YACA,SACA,OACA,OACA,OACA,SACA,SACA,SACA,OACA,QACA,QACA,SACA,UAEA,CACA,YACA,SACA,OACA,QACA,SAEA,CACA,YACA,QACA,SACA,SACA,SACA,QACA,QAEA,CACA,YACA,SAEA,CACA,YACA,QACA,WAEA,CACA,YACA,QACA,UACA,SACA,UAEA,CACA,YACA,UAEA,CACA,YACA,QACA,QACA,QACA,QACA,SAEA,CACA,YACA,OACA,QACA,SACA,SAEA,CACA,YACA,SACA,SACA,UACA,UACA,UACA,QACA,SACA,QACA,SACA,QACA,QACA,SACA,QACA,OACA,SACA,QACA,SACA,QACA,SAEA,CACA,YACA,UAEA,CACA,YACA,QACA,SACA,OACA,QACA,SACA,QAEA,CACA,YACA,QACA,WAEA,CACA,YACA,OACA,OACA,OACA,OACA,OACA,OAEA,CACA,YACA,MACA,OACA,OAEA,CACA,YACA,QACA,QACA,OAEA,CACA,YACA,UACA,QACA,SACA,SACA,QACA,SACA,OACA,QACA,OACA,QAEA,CACA,YACA,SACA,SACA,QACA,UACA,SACA,QACA,QACA,QACA,SAEA,CACA,YACA,SACA,SAEA,CACA,YACA,QACA,UACA,QACA,SACA,QACA,SACA,SACA,SACA,OACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,UACA,SACA,SACA,SACA,UACA,SACA,OACA,OACA,OACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,UACA,UAEA,CACA,YACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,OACA,OACA,QAEA,CACA,YACA,SACA,SAEA,CACA,YACA,QACA,UACA,SACA,SACA,SACA,SACA,SACA,UACA,UAEA,CACA,YACA,QAEA,CACA,YACA,OACA,QAEA,CACA,YACA,QACA,UACA,SACA,UACA,SACA,SACA,OACA,QACA,QACA,QACA,UAEA,CACA,YACA,UACA,QACA,UACA,UACA,SACA,UACA,SACA,QACA,UACA,UACA,SACA,SACA,WACA,UACA,SACA,OACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,UACA,SAEA,CACA,YACA,SACA,QACA,QACA,UACA,UACA,SACA,UACA,SACA,QACA,QACA,OACA,OACA,OACA,SACA,UAEA,CACA,YACA,UACA,UACA,UACA,QACA,QACA,QACA,QACA,QACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,UACA,UAEA,CACA,YACA,SACA,SACA,SACA,UACA,WAEA,CACA,YACA,QACA,OACA,QACA,SACA,SACA,SACA,QACA,QACA,OACA,OACA,QACA,OACA,QACA,SACA,SACA,UACA,WAEA,CACA,YACA,QACA,OACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,OACA,QACA,OACA,SACA,SACA,QACA,OACA,SACA,OACA,QACA,OACA,SACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,OACA,QACA,UACA,SACA,UACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,OACA,UAEA,CACA,YACA,QACA,SACA,QACA,QACA,SACA,SACA,UACA,SACA,SACA,SACA,UAEA,CACA,YACA,UACA,SACA,SACA,SACA,SACA,SACA,WAEA,CACA,YACA,SACA,QACA,WACA,QAEA,CACA,YACA,OACA,OACA,QACA,QACA,SACA,QACA,UAEA,CACA,YACA,QACA,SAEA,CACA,YACA,UACA,SACA,UAEA,CACA,YACA,SACA,SACA,SACA,OACA,SACA,SAEA,CACA,YACA,QACA,QACA,SACA,UACA,SACA,QACA,QAEA,CACA,YACA,QACA,QACA,QACA,SAEA,CACA,YACA,SACA,QACA,UAEA,CACA,YACA,QACA,SACA,UACA,SACA,SACA,WAEA,CACA,YACA,QACA,SACA,UAEA,CACA,YACA,SACA,QACA,QACA,UACA,UACA,UACA,SACA,QACA,OACA,SACA,QACA,UAEA,CACA,YACA,MACA,QACA,QACA,OACA,OACA,QAEA,CACA,YACA,QAEA,CACA,YACA,MACA,OACA,MACA,OACA,OACA,QACA,OACA,QACA,MACA,SACA,QACA,QAEA,CACA,YACA,QACA,SACA,SACA,QAEA,CACA,YACA,QACA,SACA,SAEA,CACA,YACA,SACA,QACA,SAEA,CACA,YACA,OACA,OACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,UACA,OACA,OACA,QACA,QACA,UAEA,CACA,YACA,OACA,SAEA,CACA,YACA,SACA,SACA,OACA,SACA,UACA,SACA,SACA,SACA,SACA,SACA,QACA,UAEA,CACA,YACA,QACA,QACA,OAEA,CACA,YACA,QACA,QACA,UACA,UAEA,CACA,YACA,OACA,SACA,SACA,SACA,UAEA,CACA,YACA,OACA,OACA,QACA,SAEA,CACA,YACA,UACA,SACA,UAEA,CACA,YACA,QACA,OACA,QACA,QACA,OACA,QACA,QAEA,CACA,YACA,SACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,OACA,QACA,OACA,SACA,SACA,OACA,QACA,QACA,SAEA,CACA,YACA,SACA,QACA,SAEA,CACA,YACA,WACA,WACA,WAEA,CACA,YACA,SACA,UACA,UACA,SACA,QACA,QACA,SACA,SACA,UAEA,CACA,YACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,UAEA,CACA,YACA,QACA,OACA,SACA,UAEA,CACA,YACA,SAEA,CACA,YACA,QACA,QACA,OACA,QACA,QACA,UAEA,CACA,YACA,QACA,SAEA,CACA,YACA,OACA,QACA,QACA,SACA,OACA,QAEA,CACA,YACA,SACA,QACA,SAEA,CACA,YACA,OACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,UACA,UACA,SACA,UACA,SACA,UAEA,CACA,YACA,OACA,QACA,OACA,QACA,QACA,QACA,MACA,OACA,OACA,QACA,QACA,QACA,MACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,OACA,SACA,OACA,SACA,SAEA,CACA,YACA,MACA,OACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,QACA,QACA,SACA,SACA,SAEA,CACA,YACA,QACA,OACA,QACA,SACA,QACA,QACA,QAEA,CACA,YACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,UACA,UACA,WACA,UACA,UACA,UACA,UACA,SACA,SACA,QACA,QACA,SACA,QACA,OACA,QACA,OACA,QACA,OACA,QACA,QACA,QACA,OACA,OACA,OACA,QACA,QACA,OACA,QACA,QACA,OACA,QACA,QACA,QACA,OACA,OACA,UAEA,CACA,YACA,UACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,QACA,OACA,QACA,QACA,QACA,OACA,OACA,OACA,QACA,QACA,QACA,OACA,QACA,SACA,UACA,SACA,QACA,SACA,SACA,QACA,SAEA,CACA,YACA,SACA,SACA,SACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,MACA,QACA,OACA,OACA,SACA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,OACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,OACA,SACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,OACA,QACA,MACA,QACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,UACA,OACA,QACA,SACA,SACA,SACA,OACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,MACA,QACA,QACA,OACA,SACA,SACA,SACA,SACA,SACA,UAEA,CACA,YACA,OACA,OACA,SACA,SACA,SACA,OACA,OACA,OACA,OACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,OACA,SACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,QAEA,CACA,YACA,MACA,QAEA,CACA,YACA,QACA,OACA,MACA,SACA,QACA,QACA,OACA,QACA,OACA,OACA,UACA,UACA,QAEA,CACA,YACA,SACA,UACA,SACA,SACA,SACA,UACA,UAEA,CACA,YACA,OACA,QACA,SACA,QACA,SAEA,CACA,YACA,QACA,OACA,SACA,OACA,SACA,QACA,QACA,SACA,UACA,UACA,QACA,SACA,OACA,QACA,SACA,OACA,QACA,UAEA,CACA,YACA,UACA,UACA,SACA,UACA,UACA,SACA,SACA,SACA,UACA,SACA,QACA,SACA,QACA,QACA,SACA,UACA,WAEA,CACA,YACA,OACA,QACA,UAEA,CACA,YACA,QACA,OACA,OACA,SACA,SAEA,CACA,YACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,OACA,QACA,SACA,SACA,OACA,SACA,QACA,OACA,QACA,QACA,SACA,QAEA,CACA,YACA,OACA,SACA,MACA,OACA,QACA,QACA,QACA,SAEA,CACA,YACA,QACA,SACA,QACA,QACA,QACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,QACA,QACA,MACA,SACA,SACA,QACA,SACA,UACA,UACA,UACA,UACA,QACA,OACA,UAEA,CACA,YACA,SAEA,CACA,YACA,QACA,SAEA,CACA,YACA,QACA,OACA,QACA,UAEA,CACA,YACA,QACA,OACA,MACA,OACA,QACA,OACA,OACA,OACA,SACA,QACA,QACA,SACA,SACA,SAEA,CACA,YACA,QACA,SAEA,CACA,YACA,SACA,MACA,SACA,QACA,SACA,QACA,SACA,OACA,QACA,QACA,SACA,SACA,SACA,QACA,QAEA,CACA,YACA,SACA,SACA,SACA,SACA,SACA,UACA,QACA,WAEA,CACA,YACA,QACA,OACA,OACA,QACA,QACA,OACA,QACA,UAEA,CACA,YACA,OACA,SACA,QACA,OACA,OACA,SACA,QACA,QAEA,CACA,YACA,SACA,OACA,OACA,QACA,OACA,OACA,QACA,UAEA,CACA,YACA,SACA,QACA,SACA,SAEA,CACA,YACA,OACA,SACA,SACA,QACA,SACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,OACA,SAEA,CACA,YACA,OACA,SACA,QACA,OACA,QAEA,CACA,YACA,SACA,QACA,OACA,QACA,QACA,QACA,SAEA,CACA,YACA,QACA,QACA,OACA,SACA,QACA,SACA,SACA,SACA,SACA,QACA,WAEA,CACA,YACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,SACA,SAEA,CACA,YACA,QACA,QACA,SACA,QAEA,CACA,YACA,SACA,UACA,SACA,SACA,QACA,QACA,SACA,WAEA,CACA,YACA,SACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,SAEA,CACA,YACA,QACA,SACA,QACA,SACA,SACA,WACA,SACA,UACA,UACA,SACA,QACA,QACA,UAEA,CACA,YACA,QACA,SACA,OACA,UACA,SACA,QACA,QACA,QACA,UACA,SACA,SACA,UACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEA,CACA,YACA,UACA,QACA,UACA,QACA,SACA,QACA,SACA,SACA,SAEA,CACA,YACA,SACA,SACA,QACA,SACA,SACA,MACA,OACA,OAEA,CACA,YACA,QACA,SACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,QAEA,CACA,YACA,QACA,QACA,QACA,SAEA,CACA,YACA,UACA,UAEA,CACA,YACA,SACA,SACA,QACA,SACA,QACA,UACA,UACA,UACA,SACA,UACA,QACA,UACA,QACA,SACA,SACA,UACA,WAEA,CACA,YACA,SACA,UACA,UACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,UACA,UAEA,CACA,YACA,UACA,SACA,QACA,SACA,QACA,SACA,UAEA,CACA,YACA,SACA,UACA,UACA,UACA,UACA,SACA,SACA,QACA,SACA,SACA,SACA,QACA,SACA,OACA,QACA,OACA,UAEA,CACA,YACA,SACA,UACA,SACA,SACA,QACA,QACA,SACA,QACA,SACA,QACA,UAEA,CACA,YACA,QACA,QACA,QACA,QACA,UACA,UACA,UACA,SACA,SACA,UACA,SACA,UACA,UACA,UACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,SAEA,CACA,YACA,SACA,OACA,SACA,QACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,QACA,SACA,UACA,UACA,UACA,QACA,QACA,QACA,QACA,SACA,OACA,QACA,OACA,QACA,SACA,OACA,SACA,SACA,SACA,OACA,SACA,SACA,SAEA,CACA,YACA,QACA,UAEA,CACA,YACA,QACA,SACA,UAEA,CACA,YACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,UACA,SACA,UACA,UACA,QACA,SACA,SACA,QACA,QACA,QACA,UACA,SACA,SACA,QACA,UACA,QACA,UACA,QACA,UACA,UAEA,CACA,YACA,OACA,OACA,SACA,UAEA,CACA,YACA,SACA,QACA,SACA,UACA,SACA,UAEA,CACA,YACA,QACA,QACA,OACA,OACA,QACA,SACA,SACA,SACA,UACA,QACA,SACA,SACA,QACA,QACA,SACA,QACA,SACA,OACA,QACA,QACA,OACA,QACA,SACA,QAEA,CACA,YACA,SACA,SACA,QACA,MACA,QACA,OACA,QACA,QACA,OACA,QACA,QACA,QACA,SACA,SACA,UAEA,CACA,YACA,SACA,QACA,SACA,SACA,SACA,SACA,OACA,SACA,UACA,UACA,SACA,QACA,SACA,SACA,OACA,SACA,OACA,SAEA,CACA,YACA,QACA,QACA,SACA,SACA,UACA,QACA,SACA,SACA,QACA,OACA,SACA,SACA,QACA,UACA,QACA,QACA,QACA,QACA,SACA,QACA,OACA,OACA,QACA,SACA,QACA,SAEA,CACA,YACA,UACA,SACA,SACA,SACA,OACA,OACA,OACA,OACA,SACA,QACA,UAEA,CACA,YACA,UACA,QACA,QACA,QACA,QACA,QACA,UACA,WAEA,CACA,YACA,SACA,OACA,QACA,UACA,UACA,QACA,OACA,SAEA,CACA,YACA,QACA,SACA,QACA,QACA,UACA,QACA,OACA,QACA,QACA,OACA,SACA,QACA,SAEA,CACA,YACA,SACA,SACA,SACA,QACA,UAEA,CACA,YACA,SACA,OACA,QACA,SACA,QACA,SACA,UACA,SACA,QACA,QACA,OACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,OACA,QACA,SACA,SACA,QACA,QACA,SACA,OACA,OACA,QAEA,CACA,YACA,QACA,SACA,SACA,QACA,MACA,QACA,QACA,SACA,SACA,UAEA,CACA,YACA,SACA,SACA,UACA,UACA,QACA,SACA,SACA,OACA,QACA,OACA,OACA,MACA,QACA,OACA,OACA,QACA,QACA,OACA,OACA,SACA,UAEA,CACA,YACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,UACA,UACA,QACA,UACA,QACA,SAEA,CACA,YACA,SACA,QACA,QACA,SACA,SACA,SACA,OACA,SACA,QACA,SACA,SACA,SACA,SAEA,CACA,YACA,QACA,QACA,QACA,SACA,QACA,SAEA,CACA,YACA,QACA,QAEA,CACA,YACA,SACA,SACA,SACA,UACA,QACA,QAEA,CACA,YACA,SACA,SACA,QACA,UACA,SACA,SACA,QAEA,CACA,YACA,QACA,QACA,SACA,QACA,SACA,QACA,MACA,SAEA,CACA,YACA,SAEA,CACA,YACA,QACA,UACA,SACA,QACA,UACA,SACA,UACA,UACA,UACA,SACA,QACA,QACA,UAEA,CACA,YACA,SACA,SACA,QACA,QACA,OACA,QACA,OACA,MACA,QACA,OACA,QACA,QACA,UAEA,CACA,YACA,UACA,QACA,SACA,OACA,QACA,QACA,QACA,OACA,QACA,OACA,OACA,QACA,QACA,SAEA,CACA,YACA,QACA,OACA,MACA,QACA,QACA,UAEA,CACA,YACA,QACA,SAEA,CACA,YACA,QACA,QACA,OACA,SACA,OACA,OACA,OACA,QAEA,CACA,YACA,SACA,OACA,UAEA,CACA,YACA,QACA,UACA,OACA,UAEA,CACA,YACA,QACA,OACA,OACA,SACA,SACA,QACA,SACA,QACA,UAEA,CACA,YACA,UACA,SACA,UACA,SACA,SACA,SACA,UACA,QACA,OACA,QACA,OACA,OACA,SACA,OACA,QACA,SACA,OACA,QACA,SACA,SACA,UAEA,CACA,YACA,OACA,SAEA,CACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,SACA,UACA,SACA,QACA,UACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,OACA,UACA,SACA,WAEA,CACA,SACA,SAEA,CACA,SACA,WACA,SACA,QACA,YAEA,CACA,SACA,MACA,OACA,SACA,QACA,UACA,SACA,QAEA,CACA,YACA,SACA,QACA,OACA,QACA,OACA,SACA,SAEA,CACA,YACA,UACA,QACA,SACA,OACA,QACA,UAEA,CACA,YACA,UACA,SACA,UACA,SACA,QACA,QACA,QACA,WAEA,CACA,YACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,QACA,UAEA,CACA,SACA,WACA,QACA,SACA,SACA,SACA,QACA,SACA,SACA,UACA,SACA,UACA,UACA,UACA,SACA,UACA,SACA,UACA,QACA,SACA,UACA,QACA,SACA,SACA,SACA,UACA,SACA,UACA,UACA,UACA,SACA,UACA,SACA,SACA,UACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,UACA,UACA,SACA,UACA,UACA,SACA,UACA,SACA,OACA,QACA,UACA,SACA,UACA,WACA,YACA,QACA,SACA,SACA,QACA,QACA,SACA,QACA,UACA,SACA,UACA,UACA,SACA,UACA,UACA,UACA,UACA,SACA,SACA,UACA,UAEA,CACA,YACA,UACA,UACA,UACA,SACA,SACA,UAEA,CACA,YACA,SACA,SACA,SACA,QACA,QACA,SACA,QACA,QACA,WAEA,CACA,YACA,OACA,QACA,OACA,OACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,OACA,SACA,QACA,QACA,OACA,SACA,SACA,OACA,SACA,SAEA,CACA,YACA,QACA,UAEA,CACA,YACA,QACA,SACA,SACA,UACA,SACA,QACA,UACA,UACA,UACA,SACA,SACA,QACA,QACA,SACA,SACA,OACA,SACA,QACA,SACA,QACA,SACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,OACA,QACA,QACA,QACA,UACA,QACA,QACA,OACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,UACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,UACA,SACA,QACA,SACA,SACA,UACA,UACA,QACA,QACA,QACA,OACA,QACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,OACA,SACA,UACA,SACA,SACA,QACA,OACA,SACA,SACA,QACA,QACA,QACA,OACA,SACA,QACA,OACA,QACA,OACA,OACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,SACA,UACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,QACA,SACA,QACA,SACA,QACA,QACA,SACA,QACA,SACA,OACA,SACA,OACA,SACA,SACA,UACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,QACA,SACA,QACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,OACA,SACA,OACA,SACA,QACA,SACA,QACA,SACA,OACA,SACA,aAEA,CACA,YACA,WACA,QACA,OACA,QACA,SACA,UAEA,CACA,YACA,SACA,SACA,SACA,UACA,SACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,SACA,UAEA,CACA,YACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,UAEA,CACA,YACA,SACA,SACA,SAEA,CACA,YACA,OACA,SAEA,CACA,YACA,QAEA,CACA,YACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,SACA,QACA,OACA,SACA,SACA,SACA,SACA,OACA,QACA,QACA,SACA,SACA,SACA,QACA,OACA,OACA,QAEA,CACA,YACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,SAEA,CACA,YACA,SAEA,CACA,YACA,UACA,UACA,UACA,UACA,QACA,SACA,QACA,OACA,SACA,QACA,SACA,SACA,QACA,WAEA,CACA,YACA,OACA,OACA,QACA,SACA,QACA,OACA,QACA,SACA,SACA,QACA,QACA,UACA,UACA,SACA,SACA,UACA,SACA,UACA,SACA,QACA,QACA,QACA,UACA,OACA,SACA,QACA,SACA,SACA,SACA,UACA,SAEA,CACA,YACA,QAEA,CACA,YACA,OACA,SACA,QACA,QACA,SACA,OACA,OACA,QACA,OACA,QACA,OACA,QACA,QACA,UAEA,CACA,YACA,QACA,SACA,QACA,SACA,SACA,UAEA,CACA,YACA,QAEA,CACA,YACA,SAEA,CACA,YACA,UACA,QACA,UACA,SACA,WAEA,CACA,YACA,UAEA,CACA,YACA,SACA,SACA,QACA,QACA,QAEA,CACA,YACA,SAEA,CACA,YACA,QACA,QACA,SACA,SACA,QAEA,CACA,YACA,SACA,QACA,OACA,OACA,QACA,QACA,SAEA,CACA,YACA,SACA,SACA,QACA,MACA,SACA,UAEA,CACA,YACA,QACA,SACA,SACA,SACA,MACA,SACA,SACA,SAEA,CACA,YACA,QACA,SACA,SACA,OACA,SACA,UAEA,CACA,YACA,OACA,SACA,SACA,QACA,SAEA,CACA,YACA,SACA,QACA,QACA,SACA,QACA,SAEA,CACA,YACA,QACA,QACA,SACA,QACA,QACA,OACA,QACA,OACA,QACA,QAEA,CACA,YACA,OACA,QACA,QACA,QACA,UACA,WAEA,CACA,YACA,MACA,OACA,OACA,QACA,OACA,QACA,SACA,QACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,UAEA,CACA,YACA,SACA,OACA,OACA,UAEA,CACA,YACA,SACA,UAEA,CACA,YACA,SACA,UAEA,CACA,YACA,OAEA,CACA,YACA,UACA,UACA,QACA,UACA,UACA,UACA,SACA,SACA,UACA,UACA,UACA,UACA,QACA,UACA,SACA,QACA,SACA,UAEA,CACA,YACA,SACA,SACA,SACA,OACA,OACA,OACA,MACA,UAEA,CACA,YACA,QACA,QAEA,CACA,YACA,OACA,OACA,OACA,QACA,QACA,SACA,OACA,QACA,QACA,QAEA,CACA,YACA,WAEA,CACA,YACA,SACA,SACA,OACA,QACA,SACA,UACA,UACA,QACA,QACA,SACA,QACA,SACA,QACA,UAEA,CACA,YACA,SACA,QACA,SACA,SACA,SACA,QACA,OACA,QAEA,CACA,YACA,QACA,QACA,SACA,OACA,QACA,QACA,OACA,QACA,SACA,QACA,QAEA,CACA,YACA,QACA,OACA,SACA,OACA,QACA,OACA,SACA,QACA,SACA,QACA,UACA,SACA,SAEA,CACA,YACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,OACA,QACA,SACA,SACA,SACA,SACA,SACA,UAEA,CACA,YACA,OACA,QACA,OACA,MACA,QACA,UACA,UACA,WAEA,CACA,YACA,OACA,OACA,SACA,SACA,OACA,OACA,SAEA,CACA,YACA,QACA,QACA,SACA,QACA,QACA,UACA,QACA,QACA,SACA,UACA,QACA,QACA,QACA,SAEA,CACA,YACA,SACA,QACA,SACA,SACA,UACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,SACA,SACA,OACA,QACA,SAEA,CACA,YACA,QACA,SACA,SACA,SACA,UACA,UACA,QACA,QAEA,CACA,YACA,UACA,UACA,SACA,QACA,QACA,QACA,SACA,UAEA,CACA,YACA,UACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,UAEA,CACA,YACA,SACA,SACA,SACA,UAEA,CACA,YACA,OACA,QACA,QAEA,CACA,YACA,SACA,UACA,SACA,UACA,QACA,SACA,OACA,SACA,UACA,UACA,SACA,OACA,SACA,OACA,QACA,QACA,SACA,QACA,SACA,UACA,WAEA,CACA,YACA,UACA,UACA,SACA,SACA,SACA,SACA,UAEA,CACA,WACA,SACA,OACA,OACA,QACA,MACA,OACA,QACA,MACA,OACA,SACA,OACA,OACA,QACA,QACA,UACA,SAEA,CACA,WACA,QACA,QACA,OACA,MACA,MACA,OACA,OACA,SAEA,CACA,WACA,QACA,QACA,MACA,SAEA,CACA,WACA,QACA,OACA,OACA,QACA,OACA,MACA,OACA,SAEA,CACA,WACA,QACA,QACA,MACA,MACA,OACA,SAEA,CACA,YACA,QACA,UACA,UACA,UACA,UACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,UACA,SACA,SACA,UACA,QACA,QACA,UACA,QACA,MACA,SACA,OACA,SACA,UACA,QACA,OACA,QACA,QACA,QACA,QACA,SACA,UACA,OACA,OACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,OACA,QACA,QACA,UACA,UACA,UACA,SACA,UACA,SACA,UACA,UACA,UACA,SACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,OACA,QACA,SACA,QACA,UACA,OACA,SACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,SACA,SACA,SACA,SACA,UACA,UACA,UACA,UACA,SACA,QACA,QACA,SAEA,CACA,YACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,QACA,SACA,SACA,OACA,SACA,SACA,QACA,SACA,OACA,QACA,QACA,QACA,OACA,OACA,QACA,QACA,QACA,OACA,SACA,SACA,OACA,QACA,SAEA,CACA,WACA,UACA,SACA,QACA,QACA,OACA,QACA,SACA,WAEA,CACA,WACA,SACA,SACA,SACA,QACA,QACA,SAEA,CACA,WACA,SACA,OACA,SACA,QACA,QACA,UACA,SACA,SACA,SACA,OACA,QAEA,CACA,YACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,QACA,SACA,UACA,UACA,UACA,QACA,QACA,QACA,QACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,SACA,UACA,SACA,UACA,QACA,UACA,UACA,UACA,UACA,OACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,QACA,OACA,QACA,UACA,QACA,UACA,SACA,SACA,SACA,UACA,QACA,QACA,OACA,SACA,UACA,SACA,SACA,OACA,SACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,OACA,SACA,OACA,SACA,SACA,SACA,SACA,SACA,QACA,OACA,QACA,OACA,QACA,OACA,QACA,QACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,OACA,SACA,QACA,QACA,QACA,SACA,SAEA,CACA,YACA,SACA,SACA,QACA,QACA,UACA,SACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,OACA,OACA,SACA,QACA,QACA,OACA,OACA,OACA,UACA,SACA,QACA,SACA,QACA,OACA,UAEA,CACA,YACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,OACA,UAEA,CACA,YACA,QACA,QACA,OACA,UAEA,CACA,YACA,QACA,OACA,QACA,QACA,OACA,UAEA,CACA,YACA,UACA,SACA,SACA,UACA,UACA,UACA,SACA,OACA,UACA,UACA,SACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,MACA,QACA,OACA,SAEA,CACA,YACA,OACA,SACA,MACA,SAEA,CACA,YACA,SACA,SACA,SACA,UACA,QACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,QACA,UACA,SACA,SACA,QACA,UACA,UACA,UACA,SACA,SACA,QACA,SACA,QACA,QACA,OACA,QACA,OACA,OACA,SACA,SACA,MACA,UAEA,CACA,YACA,SACA,UACA,SACA,SACA,UACA,UACA,SACA,OACA,UAGA7mE,UAAA,CACAgB,MAAA,0CACAL,UAAA,oBAIAknF,EAAAnvG,UAAAowG,QAAA,UACAjB,EAAAnvG,UAAAqwG,QAAA,UACAlB,EAAAnvG,UAAAswG,QAAA,UACAnB,EAAAnvG,UAAAuwG,QAAA,UACApB,EAAAnvG,UAAAwwG,QAAA,UACArB,EAAAnvG,UAAAywG,QAAA,UACAtB,EAAAnvG,UAAA0wG,QAAA,UACAvB,EAAAnvG,UAAA2wG,QAAA,UACAxB,EAAAnvG,UAAA4wG,QAAA,UACAzB,EAAAnvG,UAAA6wG,QAAA,UACA1B,EAAAnvG,UAAA8wG,QAAA,UACA3B,EAAAnvG,UAAA+wG,QAAA,UACA5B,EAAAnvG,UAAAgxG,QAAA,UACA7B,EAAAnvG,UAAAixG,QAAA,UACA9B,EAAAnvG,UAAAkxG,QAAA,UACA/B,EAAAnvG,UAAAmxG,QAAA,UACAhC,EAAAnvG,UAAAoxG,QAAA,UACAjC,EAAAnvG,UAAAqxG,QAAA,UACAlC,EAAAnvG,UAAAsxG,QAAA,UACAnC,EAAAnvG,UAAAuxG,QAAA,UACApC,EAAAnvG,UAAAwxG,QAAA,UACArC,EAAAnvG,UAAAyxG,QAAA,UACAtC,EAAAnvG,UAAA0xG,QAAA,UACAvC,EAAAnvG,UAAA2xG,QAAA,UACAxC,EAAAnvG,UAAA4xG,QAAA,UACAzC,EAAAnvG,UAAA6xG,QAAA,UACA1C,EAAAnvG,UAAA8xG,QAAA,UACA3C,EAAAnvG,UAAA+xG,QAAA,UACA5C,EAAAnvG,UAAAgyG,QAAA,UACA7C,EAAAnvG,UAAAiyG,QAAA,UACA9C,EAAAnvG,UAAAkyG,QAAA,UACA/C,EAAAnvG,UAAAmyG,QAAA,UACAhD,EAAAnvG,UAAAoyG,QAAA,UACAjD,EAAAnvG,UAAAqyG,QAAA,UACAlD,EAAAnvG,UAAAsyG,QAAA,UACAnD,EAAAnvG,UAAAuyG,QAAA,UACApD,EAAAnvG,UAAAwyG,QAAA,UACArD,EAAAnvG,UAAAyyG,QAAA,UACAtD,EAAAnvG,UAAA0yG,QAAA,UACAvD,EAAAnvG,UAAA2yG,QAAA,UACAxD,EAAAnvG,UAAA4yG,QAAA,UACAzD,EAAAnvG,UAAA6yG,QAAA,UACA1D,EAAAnvG,UAAA8yG,QAAA,UACA3D,EAAAnvG,UAAA+yG,QAAA,UACA5D,EAAAnvG,UAAAgzG,QAAA,UACA7D,EAAAnvG,UAAAizG,QAAA,UACA9D,EAAAnvG,UAAAkzG,QAAA,UACA/D,EAAAnvG,UAAAmzG,QAAA,UACAhE,EAAAnvG,UAAAozG,QAAA,UACAjE,EAAAnvG,UAAAqzG,QAAA,UACAlE,EAAAnvG,UAAAszG,QAAA,UACAnE,EAAAnvG,UAAAuzG,QAAA,UACApE,EAAAnvG,UAAAwzG,QAAA,UACArE,EAAAnvG,UAAAyzG,QAAA,UACAtE,EAAAnvG,UAAA0zG,QAAA,UACAvE,EAAAnvG,UAAA2zG,QAAA,UACAxE,EAAAnvG,UAAA4zG,QAAA,UACAzE,EAAAnvG,UAAA6zG,QAAA,UACA1E,EAAAnvG,UAAA8zG,QAAA,UACA3E,EAAAnvG,UAAA+zG,QAAA,UACA5E,EAAAnvG,UAAAg0G,QAAA,UACA7E,EAAAnvG,UAAAi0G,QAAA,UACA9E,EAAAnvG,UAAAk0G,QAAA,UACA/E,EAAAnvG,UAAAm0G,QAAA,UACAhF,EAAAnvG,UAAAo0G,QAAA,UACAjF,EAAAnvG,UAAAq0G,QAAA,UACAlF,EAAAnvG,UAAAs0G,QAAA,UACAnF,EAAAnvG,UAAAu0G,QAAA,UACApF,EAAAnvG,UAAAw0G,QAAA,UACArF,EAAAnvG,UAAAy0G,QAAA,UACAtF,EAAAnvG,UAAA00G,QAAA,UACAvF,EAAAnvG,UAAA20G,QAAA,UACAxF,EAAAnvG,UAAA40G,QAAA,UACAzF,EAAAnvG,UAAA60G,QAAA,UACA1F,EAAAnvG,UAAA80G,QAAA,UACA3F,EAAAnvG,UAAA+0G,QAAA,UACA5F,EAAAnvG,UAAAg1G,QAAA,UACA7F,EAAAnvG,UAAAi1G,QAAA,UACA9F,EAAAnvG,UAAAk1G,QAAA,UACA/F,EAAAnvG,UAAAm1G,QAAA,UACAhG,EAAAnvG,UAAAo1G,QAAA,UACAjG,EAAAnvG,UAAAq1G,QAAA,UACAlG,EAAAnvG,UAAAs1G,QAAA,UACAnG,EAAAnvG,UAAAu1G,QAAA,UACApG,EAAAnvG,UAAAw1G,QAAA,UACArG,EAAAnvG,UAAAy1G,QAAA,UACAtG,EAAAnvG,UAAA01G,QAAA,UACAvG,EAAAnvG,UAAA21G,QAAA,UACAxG,EAAAnvG,UAAA41G,QAAA,UACAzG,EAAAnvG,UAAA61G,QAAA,UACA1G,EAAAnvG,UAAA81G,QAAA,UACA3G,EAAAnvG,UAAA+1G,QAAA,UACA5G,EAAAnvG,UAAAg2G,QAAA,UACA7G,EAAAnvG,UAAAi2G,QAAA,UACA9G,EAAAnvG,UAAAk2G,QAAA,UACA/G,EAAAnvG,UAAAm2G,QAAA,UACAhH,EAAAnvG,UAAAo2G,QAAA,UACAjH,EAAAnvG,UAAAq2G,QAAA,UACAlH,EAAAnvG,UAAAs2G,QAAA,UACAnH,EAAAnvG,UAAAu2G,QAAA,UACApH,EAAAnvG,UAAAw2G,QAAA,UACArH,EAAAnvG,UAAAy2G,QAAA,UACAtH,EAAAnvG,UAAA02G,QAAA,UACAvH,EAAAnvG,UAAA22G,QAAA,UACAxH,EAAAnvG,UAAA42G,QAAA,UACAzH,EAAAnvG,UAAA62G,QAAA,UACA1H,EAAAnvG,UAAA82G,QAAA,UACA3H,EAAAnvG,UAAA+2G,QAAA,UACA5H,EAAAnvG,UAAAg3G,QAAA,UACA7H,EAAAnvG,UAAAi3G,QAAA,UACA9H,EAAAnvG,UAAAk3G,QAAA,UACA/H,EAAAnvG,UAAAm3G,QAAA,UACAhI,EAAAnvG,UAAAo3G,QAAA,UACAjI,EAAAnvG,UAAAq3G,QAAA,UACAlI,EAAAnvG,UAAAs3G,QAAA,UACAnI,EAAAnvG,UAAAu3G,QAAA,UACApI,EAAAnvG,UAAAw3G,QAAA,UACArI,EAAAnvG,UAAAy3G,QAAA,UACAtI,EAAAnvG,UAAA03G,QAAA,UACAvI,EAAAnvG,UAAA23G,QAAA,UACAxI,EAAAnvG,UAAA43G,QAAA,UACAzI,EAAAnvG,UAAA63G,QAAA,UACA1I,EAAAnvG,UAAA83G,QAAA,UACA3I,EAAAnvG,UAAA+3G,QAAA,UACA5I,EAAAnvG,UAAAg4G,QAAA,UACA7I,EAAAnvG,UAAAi4G,QAAA,UACA9I,EAAAnvG,UAAAk4G,QAAA,UACA/I,EAAAnvG,UAAAm4G,QAAA,UACAhJ,EAAAnvG,UAAAo4G,QAAA,UACAjJ,EAAAnvG,UAAAq4G,QAAA,UACAlJ,EAAAnvG,UAAAs4G,QAAA,UACAnJ,EAAAnvG,UAAAu4G,QAAA,UACApJ,EAAAnvG,UAAAw4G,QAAA,UACArJ,EAAAnvG,UAAAy4G,QAAA,UACAtJ,EAAAnvG,UAAA04G,QAAA,UACAvJ,EAAAnvG,UAAA24G,QAAA,UACAxJ,EAAAnvG,UAAA44G,QAAA,UACAzJ,EAAAnvG,UAAA64G,QAAA,UACA1J,EAAAnvG,UAAA84G,QAAA,UACA3J,EAAAnvG,UAAA+4G,QAAA,UACA5J,EAAAnvG,UAAAg5G,QAAA,UACA7J,EAAAnvG,UAAAi5G,QAAA,UACA9J,EAAAnvG,UAAAk5G,QAAA,UACA/J,EAAAnvG,UAAAm5G,QAAA,UACAhK,EAAAnvG,UAAAo5G,QAAA,UACAjK,EAAAnvG,UAAAq5G,QAAA,UACAlK,EAAAnvG,UAAAs5G,QAAA,UACAnK,EAAAnvG,UAAAu5G,QAAA,UACApK,EAAAnvG,UAAAw5G,QAAA,UACArK,EAAAnvG,UAAAy5G,QAAA,UACAtK,EAAAnvG,UAAA05G,QAAA,UACAvK,EAAAnvG,UAAA25G,QAAA,UACAxK,EAAAnvG,UAAA45G,QAAA,UACAzK,EAAAnvG,UAAA65G,QAAA,UACA1K,EAAAnvG,UAAA85G,QAAA,UACA3K,EAAAnvG,UAAA+5G,QAAA,UACA5K,EAAAnvG,UAAAg6G,QAAA,UACA7K,EAAAnvG,UAAAi6G,QAAA,UACA9K,EAAAnvG,UAAAk6G,QAAA,UACA/K,EAAAnvG,UAAAm6G,QAAA,UACAhL,EAAAnvG,UAAAo6G,QAAA,UACAjL,EAAAnvG,UAAAq6G,QAAA,UACAlL,EAAAnvG,UAAAs6G,QAAA,UACAnL,EAAAnvG,UAAAu6G,QAAA,UACApL,EAAAnvG,UAAAw6G,QAAA,UACArL,EAAAnvG,UAAAy6G,QAAA,UACAtL,EAAAnvG,UAAA06G,QAAA,UACAvL,EAAAnvG,UAAA26G,QAAA,UACAxL,EAAAnvG,UAAA46G,QAAA,UACAzL,EAAAnvG,UAAA66G,QAAA,UACA1L,EAAAnvG,UAAA86G,QAAA,UACA3L,EAAAnvG,UAAA+6G,QAAA,UACA5L,EAAAnvG,UAAAg7G,QAAA,UACA7L,EAAAnvG,UAAAi7G,QAAA,UACA9L,EAAAnvG,UAAAk7G,QAAA,UACA/L,EAAAnvG,UAAAm7G,QAAA,UACAhM,EAAAnvG,UAAAo7G,QAAA,UACAjM,EAAAnvG,UAAAq7G,QAAA,UACAlM,EAAAnvG,UAAAs7G,QAAA,UACAnM,EAAAnvG,UAAAu7G,QAAA,UACApM,EAAAnvG,UAAAw7G,QAAA,UACArM,EAAAnvG,UAAAy7G,QAAA,UACAtM,EAAAnvG,UAAA07G,QAAA,UACAvM,EAAAnvG,UAAA27G,QAAA,UACAxM,EAAAnvG,UAAA47G,QAAA,UACAzM,EAAAnvG,UAAA67G,QAAA,UACA1M,EAAAnvG,UAAA87G,QAAA,UACA3M,EAAAnvG,UAAA+7G,QAAA,UACA5M,EAAAnvG,UAAAg8G,QAAA,UACA7M,EAAAnvG,UAAAi8G,QAAA,UACA9M,EAAAnvG,UAAAk8G,QAAA,UACA/M,EAAAnvG,UAAAm8G,QAAA,UACAhN,EAAAnvG,UAAAo8G,QAAA,UACAjN,EAAAnvG,UAAAq8G,QAAA,UACAlN,EAAAnvG,UAAAs8G,QAAA,UACAnN,EAAAnvG,UAAAu8G,QAAA,UACApN,EAAAnvG,UAAAw8G,QAAA,UACArN,EAAAnvG,UAAAy8G,QAAA,UACAtN,EAAAnvG,UAAA08G,QAAA,UACAvN,EAAAnvG,UAAA28G,QAAA,UACAxN,EAAAnvG,UAAA48G,QAAA,UACAzN,EAAAnvG,UAAA68G,QAAA,UACA1N,EAAAnvG,UAAA88G,QAAA,UACA3N,EAAAnvG,UAAA+8G,QAAA,UACA5N,EAAAnvG,UAAAg9G,QAAA,UACA7N,EAAAnvG,UAAAi9G,QAAA,UACA9N,EAAAnvG,UAAAk9G,QAAA,UACA/N,EAAAnvG,UAAAm9G,QAAA,UACAhO,EAAAnvG,UAAAo9G,QAAA,UACAjO,EAAAnvG,UAAAq9G,QAAA,UACAlO,EAAAnvG,UAAAs9G,QAAA,UACAnO,EAAAnvG,UAAAu9G,QAAA,UACApO,EAAAnvG,UAAAw9G,QAAA,UACArO,EAAAnvG,UAAAy9G,QAAA,UACAtO,EAAAnvG,UAAA09G,QAAA,UACAvO,EAAAnvG,UAAA29G,QAAA,UACAxO,EAAAnvG,UAAA49G,QAAA,UACAzO,EAAAnvG,UAAA69G,QAAA,UACA1O,EAAAnvG,UAAA89G,QAAA,UACA3O,EAAAnvG,UAAA+9G,QAAA,UACA5O,EAAAnvG,UAAAg+G,QAAA,UACA7O,EAAAnvG,UAAAi+G,QAAA,UACA9O,EAAAnvG,UAAAk+G,QAAA,UACA/O,EAAAnvG,UAAAm+G,QAAA,UACAhP,EAAAnvG,UAAAo+G,QAAA,UACAjP,EAAAnvG,UAAAq+G,QAAA,UACAlP,EAAAnvG,UAAAs+G,QAAA,UACAnP,EAAAnvG,UAAAu+G,QAAA,UACApP,EAAAnvG,UAAAw+G,QAAA,UACArP,EAAAnvG,UAAAy+G,QAAA,UACAtP,EAAAnvG,UAAA0+G,QAAA,UACAvP,EAAAnvG,UAAA2+G,QAAA,UACAxP,EAAAnvG,UAAA4+G,QAAA,UACAzP,EAAAnvG,UAAA6+G,QAAA,UACA1P,EAAAnvG,UAAA8+G,QAAA,UACA3P,EAAAnvG,UAAA++G,QAAA,UACA5P,EAAAnvG,UAAAg/G,QAAA,UACA7P,EAAAnvG,UAAAi/G,QAAA,UACA9P,EAAAnvG,UAAAk/G,QAAA,CAA+Bx6G,KAAA,WAAA4iB,UAAA,CAA+BgB,MAAA,yCAAAL,UAAA,yBAAuFqgF,QAAA,CAAY6W,IAAA,CAAOz6G,KAAA,qBAAAqnE,WAAA,EAA2CrnE,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,cAAA38B,WAAA,CAA8DjtD,KAAA,YAAkB,CAAEG,KAAA,eAAArF,GAAA,KAAA8uF,KAAA,8QAAA38B,WAAA,CAAmUjtD,KAAA,WAAiB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,mBAAA38B,WAAA,CAAmEjtD,KAAA,YAAkB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,sBAAA38B,WAAA,CAAsEjtD,KAAA,aAAmB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,iBAAA38B,WAAA,CAAiEjtD,KAAA,eAAqB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,sBAAA38B,WAAA,CAAsEjtD,KAAA,aAAmB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,gBAAA38B,WAAA,CAAgEjtD,KAAA,gBAAsB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,gBAAA38B,WAAA,CAAgEjtD,KAAA,aAAmB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,UAAA38B,WAAA,CAA0DjtD,KAAA,yBAA+B,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,aAAA38B,WAAA,CAA6DjtD,KAAA,YAAkB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,uBAAA38B,WAAA,CAAuEjtD,KAAA,YAAkB,CAAEG,KAAA,eAAArF,GAAA,KAAA8uF,KAAA,qCAAA38B,WAAA,CAA0FjtD,KAAA,WAAiB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,yBAAA38B,WAAA,CAAyEjtD,KAAA,UAAgB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,sBAAA38B,WAAA,CAAsEjtD,KAAA,aAAmB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,sBAAA38B,WAAA,CAAsEjtD,KAAA,YAAkB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,4BAAA38B,WAAA,CAA4EjtD,KAAA,SAAe,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,oBAAA38B,WAAA,CAAoEjtD,KAAA,WAAiB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,iCAAA38B,WAAA,CAAiFjtD,KAAA,aAAmB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,oBAAA38B,WAAA,CAAoEjtD,KAAA,cAAoB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,YAAA38B,WAAA,CAA4DjtD,KAAA,UAAgB,CAAEG,KAAA,eAAArF,GAAA,KAAA8uF,KAAA,kDAAA38B,WAAA,CAAuGjtD,KAAA,aAAmB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,oCAAA38B,WAAA,CAAoFjtD,KAAA,kBAAwB,CAAEG,KAAA,eAAArF,GAAA,KAAA8uF,KAAA,+CAAA38B,WAAA,CAAoGjtD,KAAA,aAAmB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,yBAAA38B,WAAA,CAAyEjtD,KAAA,cAAoB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,wBAAA38B,WAAA,CAAwEjtD,KAAA,gBAAsB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,uCAAA38B,WAAA,CAAuFjtD,KAAA,aAAmB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,wBAAA38B,WAAA,CAAwEjtD,KAAA,YAAkB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,+BAAA38B,WAAA,CAA+EjtD,KAAA,aAAmB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,wBAAA38B,WAAA,CAAwEjtD,KAAA,WAAiB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,0BAAA38B,WAAA,CAA0EjtD,KAAA,kBAAwB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,oBAAA38B,WAAA,CAAoEjtD,KAAA,eAAqB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,wBAAA38B,WAAA,CAAwEjtD,KAAA,eAAqB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,kCAAA38B,WAAA,CAAkFjtD,KAAA,aAAmB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,wBAAA38B,WAAA,CAAwEjtD,KAAA,mBAAyB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,sBAAA38B,WAAA,CAAsEjtD,KAAA,iBAAuB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,8BAAA38B,WAAA,CAA8EjtD,KAAA,SAAe,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,+BAAA38B,WAAA,CAA+EjtD,KAAA,aAAmB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,yBAAA38B,WAAA,CAAyEjtD,KAAA,WAAiB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,oCAAA38B,WAAA,CAAoFjtD,KAAA,iBAAuB,CAAEG,KAAA,eAAArF,GAAA,KAAA8uF,KAAA,gCAAA38B,WAAA,CAAqFjtD,KAAA,iBAAuB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,iBAAA38B,WAAA,CAAiEjtD,KAAA,mBAAyB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,iCAAA38B,WAAA,CAAiFjtD,KAAA,iBAAuB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,uCAAA38B,WAAA,CAAuFjtD,KAAA,cAAoB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,2BAAA38B,WAAA,CAA2EjtD,KAAA,UAAgB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,yBAAA38B,WAAA,CAAyEjtD,KAAA,SAAe,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,uBAAA38B,WAAA,CAAuEjtD,KAAA,YAAkB,CAAEG,KAAA,eAAArF,GAAA,KAAA8uF,KAAA,gEAAA38B,WAAA,CAAqHjtD,KAAA,aAAmB,CAAEG,KAAA,eAAArF,GAAA,KAAA8uF,KAAA,mCAAA38B,WAAA,CAAwFjtD,KAAA,eAAqB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,6BAAA38B,WAAA,CAA6EjtD,KAAA,kBAAwB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,+BAAA38B,WAAA,CAA+EjtD,KAAA,cAAoB,CAAEG,KAAA,UAAArF,GAAA,KAAA8uF,KAAA,gCAAA38B,WAAA,CAAgFjtD,KAAA,eAAqB4pF,KAAA,kzuBAC5yKghB,EAAAnvG,UAAAo/G,QAAA,UACAjQ,EAAAnvG,UAAAq/G,QAAA,UACAlQ,EAAAnvG,UAAAs/G,QAAA,UACAnQ,EAAAnvG,UAAAu/G,QAAA,UACApQ,EAAAnvG,UAAAw/G,QAAA,UACArQ,EAAAnvG,UAAAy/G,QAAA,UACAtQ,EAAAnvG,UAAA0/G,QAAA,UACAvQ,EAAAnvG,UAAA2/G,QAAA,UACAxQ,EAAAnvG,UAAA4/G,QAAA,UACAzQ,EAAAnvG,UAAA6/G,QAAA,UACA1Q,EAAAnvG,UAAA8/G,QAAA,UACA3Q,EAAAnvG,UAAA+/G,QAAA,UACA5Q,EAAAnvG,UAAAggH,QAAA,UACA7Q,EAAAnvG,UAAAigH,QAAA,UACA9Q,EAAAnvG,UAAAkgH,QAAA,UACA/Q,EAAAnvG,UAAAmgH,QAAA,UAOAhR,EAAAnvG,UAAAytG,WAAA,SAAA2S,EAAAC,GACA,OAAAxhH,KAAAg7E,WAAA,CAAAwmC,EAAAD,KAIAjR,EAAAnvG,UAAAmsG,SAAA,SAAAmU,EAAAjhH,EAAA+0E,GACA,IAAA24B,EAOA,OALAA,EADA34B,EACAv1E,KAAA8G,IAAAmL,OAAA,oBAGAjS,KAAA8G,IAAAqF,OAAA,KAEA+hG,EAAAx/F,KAAA,KAAAlO,GAAA,IACAkO,KAAA,QAAA+yG,GAAA,KAGAnR,EAAAnvG,UAAAgwG,iBAAA,SAAAvmG,EAAAkiG,GACA,IAAAhmG,EAAA9G,KAAA8G,IAYA,QAAA46G,KARA5U,IAAA,IAAAA,EAAAnqE,OACA77B,EAAAsC,UAAA,qBACAsF,KAAA,uBACA,aAEA8f,aAAAxf,MAAA,OAAAhP,KAAA8sG,QAAA9+C,MAAAC,aAGArjD,EACA,GAAAA,EAAAhF,eAAA87G,GAAA,CACA,IAAA97F,EACA+7F,EAAA/2G,EAAA82G,GACA,IAAAA,EACA,SAeA,GAZA97F,EADA,kBAAA+7F,EACAA,EAEA,kBAAAA,EAAA/7F,MACA+7F,EAAA/7F,MAEA,kBAAA+7F,EAAAnU,UACAmU,EAAAnU,UAGAxtG,KAAA8sG,QAAA9+C,MAAA2zD,EAAAxzD,SAGAwzD,IAAAzgH,OAAAygH,GAAA,CACA3hH,KAAA8sG,QAAAliG,KAAA82G,GAAAjT,EAAAkT,EAAA3hH,KAAA8sG,QAAAliG,KAAA82G,IAAA,IACA1hH,KAAA8G,IAAAwB,OAAA,IAAAo5G,GAAAhzG,KAAA,YAAA+pB,KAAAC,UAAA14B,KAAA8sG,QAAAliG,KAAA82G,KAEA56G,EACAsC,UAAA,IAAAs4G,GACAlzF,aACAxf,MAAA,OAAA4W,KAKA0qF,EAAAnvG,UAAA6sG,YAAA,SAAAv/C,EAAAnsD,EAAAwqG,GACA,IAAAj/E,EAAA7tB,KACAyuD,EAAAroD,GAAA,kBACAqoD,EAAAroD,GAAA,uBACA,IAAA0zD,EAAA3J,EAAAgJ,MAAAtrC,EAAAi/E,QAAAr+C,SACA0B,EAAA7nD,OAAAulB,EAAA/mB,IAAA,MAAAqG,YAAA7E,OAAA,uBACA0G,MAAA,MAAA8qD,EAAA,YACAvoD,KAAA,WACA,IAAA3G,EAAA6tB,KAAA1P,MAAA0lC,EAAA//C,KAAA,cACA,IACA,OAAAo+F,EAAAzB,cAAA/oG,EAAAsI,GACW,MAAA0d,GACX,YAGAtZ,MAAA,OAAA8qD,EAAA,WAGA3J,EAAA7nD,OAAAulB,EAAA/mB,IAAA,MAAAqG,YAAA7E,OAAA,uBAAA0G,MAAA,oBAGAshG,EAAAnvG,UAAAovG,UAAA,SAAA7qG,EAAAk8G,GACA,IAAA/zF,EAAA7tB,KACA,qBAAAswG,EAAAnvG,UAAAuE,KACA4qG,EAAAnvG,UAAAuE,GAAA,SAAAkF,EAAAkiG,EAAA7mG,EAAA47G,GACA,IAAA3T,EACA,qBAAA2T,IACAA,GAAA,GAGA,oBAAA/U,IACA7mG,EAAA6mG,EACAA,OAAAh7E,GAGAg7E,EAAA2B,EAAA3B,GAAA,GAAwCj/E,EAAAi/E,QAAApnG,EAAA,YAGxCm8G,GAAA7hH,KAAA8sG,QAAApnG,EAAA,UACAwoG,EAAAluG,KAAA8sG,QAAApnG,EAAA,SACAonG,KAAA9sG,KAAA8sG,QAAApnG,EAAA,aAGAwoG,EAAAluG,KAAAstG,SAAA5nG,GACA1F,KAAA8sG,QAAApnG,EAAA,SAAAwoG,EACAluG,KAAA8sG,QAAApnG,EAAA,WAAAonG,GAEA8U,EAAAl7G,MAAA1G,KAAA,CAAAkuG,EAAAtjG,EAAAkiG,IACA7mG,GACAA,EAAAioG,MAQA/9C,EAASxxD,EAAQ,QACjBgsG,EAAehsG,EAAQ,QACvBI,EAAAC,QAAAsxG,EAcAj8F,OAAAytG,SACAztG,OAAAytG,OAAAC,GAAAC,SAAA,SAAAlV,EAAA7mG,GACA6mG,KAAA,GACAA,EAAAr+C,QAAAzuD,KAAA,GACA,IAAAiiH,EAAA,IAAA3R,EAAAxD,GAIA,MAHA,oBAAA7mG,GACAA,EAAAg8G,EAAAnV,GAEA9sG,QA/3YA,yBCAArB,EAAQ,QACRA,EAAQ,QACRI,EAAAC,QAAiBL,EAAQ,QAAqBmC,MAAA6nC,2BCF9C5pC,EAAAC,QAAiBL,EAAQ,8BCAzBA,EAAQ,QACRI,EAAAC,QAAiBL,EAAQ,QAAqBmC,MAAAjB","file":"js/chunk-10ce845a.fdeba9d9.js","sourcesContent":["var getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) if (isEnum.call(O, key = keys[i++])) {\n      result.push(isEntries ? [key, O[key]] : O[key]);\n    } return result;\n  };\n};\n","// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)\nvar $export = require('./_export');\n\n$export($export.S, 'Array', { isArray: require('./_is-array') });\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"height\":\"300px\"},attrs:{\"id\":\"worldMap\"}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import _Array$isArray from \"../../core-js/array/is-array\";\nexport default function _arrayWithoutHoles(arr) {\n  if (_Array$isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","import _Array$from from \"../../core-js/array/from\";\nimport _isIterable from \"../../core-js/is-iterable\";\nexport default function _iterableToArray(iter) {\n  if (_isIterable(Object(iter)) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return _Array$from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n","export var slice = Array.prototype.slice;\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_join from \"./join\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i(t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i(t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n","function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i(t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {set} from \"./schedule\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n  });\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\nimport transition_end from \"./end\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  end: transition_end\n};\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {customEvent, event, mouse, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport BrushEvent from \"./event\";\nimport noevent, {nopropagation} from \"./noevent\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (event.touches) { if (event.changedTouches.length < event.touches.length) return noevent(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(event.view);\n    }\n\n    nopropagation();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n","export var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;\n","export var slice = Array.prototype.slice;\n","import {range} from \"d3-array\";\nimport {max, tau} from \"./math\";\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nexport default function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport {cos, halfPi, sin} from \"./math\";\nimport {path} from \"d3-path\";\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nexport default function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var slice = array.slice;\n","import {max, range, tickStep} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {blurX, blurY} from \"./blur\";\nimport constant from \"./constant\";\nimport contours from \"./contours\";\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction defaultWeight() {\n  return 1;\n}\n\nexport default function() {\n  var x = defaultX,\n      y = defaultY,\n      weight = defaultWeight,\n      dx = 960,\n      dy = 500,\n      r = 20, // blur radius\n      k = 2, // log2(grid cell size)\n      o = r * 3, // grid offset, to pad for blur\n      n = (dx + o * 2) >> k, // grid width\n      m = (dy + o * 2) >> k, // grid height\n      threshold = constant(20);\n\n  function density(data) {\n    var values0 = new Float32Array(n * m),\n        values1 = new Float32Array(n * m);\n\n    data.forEach(function(d, i, data) {\n      var xi = (+x(d, i, data) + o) >> k,\n          yi = (+y(d, i, data) + o) >> k,\n          wi = +weight(d, i, data);\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        values0[xi + yi * n] += wi;\n      }\n    });\n\n    // TODO Optimize.\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n\n    var tz = threshold(values0);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var stop = max(values0);\n      tz = tickStep(0, stop, tz);\n      tz = range(0, Math.floor(stop / tz) * tz, tz);\n      tz.shift();\n    }\n\n    return contours()\n        .thresholds(tz)\n        .size([n, m])\n      (values0)\n        .map(transform);\n  }\n\n  function transform(geometry) {\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  }\n\n  // TODO Optimize.\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = (dx + o * 2) >> k;\n    m = (dy + o * 2) >> k;\n    return density;\n  }\n\n  density.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), density) : x;\n  };\n\n  density.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), density) : y;\n  };\n\n  density.weight = function(_) {\n    return arguments.length ? (weight = typeof _ === \"function\" ? _ : constant(+_), density) : weight;\n  };\n\n  density.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function(_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\n  };\n\n  density.bandwidth = function(_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\n  };\n\n  return density;\n}\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\n","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n","import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\nimport text from \"./text\";\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);\n","import text from \"./text\";\n\nfunction parser(type) {\n  return function(input, init)  {\n    return text(input, init).then(function(text) {\n      return (new DOMParser).parseFromString(text, type);\n    });\n  };\n}\n\nexport default parser(\"application/xml\");\n\nexport var html = parser(\"text/html\");\n\nexport var svg = parser(\"image/svg+xml\");\n","export default function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","import Quad from \"./quad\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add\";\nimport tree_cover from \"./cover\";\nimport tree_data from \"./data\";\nimport tree_extent from \"./extent\";\nimport tree_find from \"./find\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove\";\nimport tree_root from \"./root\";\nimport tree_size from \"./size\";\nimport tree_visit from \"./visit\";\nimport tree_visitAfter from \"./visitAfter\";\nimport tree_x, {defaultX} from \"./x\";\nimport tree_y, {defaultY} from \"./y\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","import {dispatch} from \"d3-dispatch\";\nimport {map} from \"d3-collection\";\nimport {timer} from \"d3-timer\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.each(function (force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","import adder from \"./adder\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nexport var areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import adder from \"./adder\";\nimport {areaStream, areaRingSum} from \"./area\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport {abs, degrees, epsilon, radians} from \"./math\";\nimport stream from \"./stream\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import compose from \"./compose\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport constant from \"./constant\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math\";\nimport {rotateRadians} from \"./rotation\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import noop from \"../noop\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import adder from \"./adder\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian\";\nimport {asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sin, tau} from \"./math\";\n\nvar sum = adder();\n\nexport default function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n","import clipBuffer from \"./buffer\";\nimport clipRejoin from \"./rejoin\";\nimport {epsilon, halfPi} from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import adder from \"./adder\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import adder from \"../adder\";\nimport {abs} from \"../math\";\nimport noop from \"../noop\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import {tau} from \"../math\";\nimport noop from \"../noop\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import adder from \"../adder\";\nimport {sqrt} from \"../math\";\nimport noop from \"../noop\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {cartesian} from \"../cartesian\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math\";\nimport {transformer} from \"../transform\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport clipRectangle from \"../clip/rectangle\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math\";\nimport {rotateRadians} from \"../rotation\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\nimport resample from \"./resample\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, sqrt} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {acos, sin} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import projection from \"./index\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {abs, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {equirectangularRaw} from \"./equirectangular\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import projection from \"./index\";\nimport {abs, epsilon} from \"../math\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","import {asin, cos, epsilon, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","import {atan, exp, halfPi, log, tan} from \"../math\";\nimport {mercatorProjection} from \"./mercator\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","export default function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","import node_count from \"./count\";\nimport node_each from \"./each\";\nimport node_eachBefore from \"./eachBefore\";\nimport node_eachAfter from \"./eachAfter\";\nimport node_sum from \"./sum\";\nimport node_sort from \"./sort\";\nimport node_path from \"./path\";\nimport node_ancestors from \"./ancestors\";\nimport node_descendants from \"./descendants\";\nimport node_leaves from \"./leaves\";\nimport node_links from \"./links\";\n\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n","export var slice = Array.prototype.slice;\n\nexport function shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","import {Node} from \"./hierarchy/index\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\nimport {phi, squarifyRatio} from \"./squarify\";\n\nexport default (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n","import cross from \"./cross\";\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nexport default function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n","export default function() {\n  return Math.random();\n}\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport normal from \"./normal\";\n\nexport default (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport irwinHall from \"./irwinHall\";\n\nexport default (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource);\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.interpolator(domain); break;\n    default: this.interpolator(interpolator).domain(domain); break;\n  }\n  return this;\n}\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(domain) {\n  var a = domain[0], b = domain[domain.length - 1], t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), clamp === identity || (clamp = clamper(domain)), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? clamper(domain) : identity, scale) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous(transform, untransform) {\n  return transformer()(transform, untransform);\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy, identity} from \"./continuous\";\nimport {initRange} from \"./init\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(identity, identity);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationSecond} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","export var slice = Array.prototype.slice;\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default function() {}\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  return node.__zoom || identity;\n}\n","export default function(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n}\n","// TODO if quantized, use simpler Int32 hashing?\n\nvar buffer = new ArrayBuffer(16),\n    floats = new Float64Array(buffer),\n    uints = new Uint32Array(buffer);\n\nexport default function(point) {\n  floats[0] = point[0];\n  floats[1] = point[1];\n  var hash = uints[0] ^ uints[1];\n  hash = hash << 5 ^ hash >> 7 ^ uints[2] ^ uints[3];\n  return hash & 0x7fffffff;\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    quarterPi = pi / 4,\n    radians = pi / 180,\n    abs = Math.abs,\n    atan2 = Math.atan2,\n    cos = Math.cos,\n    sin = Math.sin;\n\nfunction halfArea(ring, closed) {\n  var i = 0,\n      n = ring.length,\n      sum = 0,\n      point = ring[closed ? i++ : n - 1],\n      lambda0, lambda1 = point[0] * radians,\n      phi1 = (point[1] * radians) / 2 + quarterPi,\n      cosPhi0, cosPhi1 = cos(phi1),\n      sinPhi0, sinPhi1 = sin(phi1);\n\n  for (; i < n; ++i) {\n    point = ring[i];\n    lambda0 = lambda1, lambda1 = point[0] * radians;\n    phi1 = (point[1] * radians) / 2 + quarterPi;\n    cosPhi0 = cosPhi1, cosPhi1 = cos(phi1);\n    sinPhi0 = sinPhi1, sinPhi1 = sin(phi1);\n\n    // Spherical excess E for a spherical triangle with vertices: south pole,\n    // previous point, current point.  Uses a formula derived from Cagnoli’s\n    // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n    // See https://github.com/d3/d3-geo/blob/master/README.md#geoArea\n    var dLambda = lambda1 - lambda0,\n        sdLambda = dLambda >= 0 ? 1 : -1,\n        adLambda = sdLambda * dLambda,\n        k = sinPhi0 * sinPhi1,\n        u = cosPhi0 * cosPhi1 + k * cos(adLambda),\n        v = k * sdLambda * sin(adLambda);\n    sum += atan2(v, u);\n  }\n\n  return sum;\n}\n\nexport function sphericalRingArea(ring, interior) {\n  var sum = halfArea(ring, true);\n  if (interior) sum *= -1;\n  return (sum < 0 ? tau + sum : sum) * 2;\n}\n\nexport function sphericalTriangleArea(t) {\n  return abs(halfArea(t, false)) * 2;\n}\n","<template>\n  <div id=\"worldMap\" style=\"height: 300px;\"></div>\n</template>\n<script>\n  import 'd3';\n  import * as d3 from 'd3';\n  import 'topojson';\n  import DataMap from 'datamaps'\n  import { throttle } from \"src/util/throttle\";\n\n  export default {\n    data() {\n      return {\n        color1: '#AAAAAA',\n        color2: '#444444',\n        highlightFillColor: '#66615B',\n        highlightBorderColor: '#f1f1f1',\n        mapData: {\n          'AUS': 760,\n          'BRA': 550,\n          'CAN': 120,\n          'DEU': 1300,\n          'FRA': 540,\n          'GBR': 690,\n          'GEO': 200,\n          'IND': 200,\n          'ROU': 600,\n          'RUS': 300,\n          'USA': 2920\n        }\n      }\n    },\n    methods: {\n      generateColors(length) {\n        return d3.scaleLinear()\n          .domain([0, length])\n          .range([this.color1, this.color2]);\n      },\n      generateMapColors() {\n        let mapDataValues = Object.values(this.mapData);\n        let maxVal = Math.max(...mapDataValues);\n        let colors = this.generateColors(maxVal);\n        let mapData = {};\n        let fills = {\n          defaultFill: \"#e4e4e4\",\n        };\n        for (let key in this.mapData) {\n          let val = this.mapData[key];\n          fills[key] = colors(val);\n          mapData[key] = {\n            fillKey: key,\n            value: val\n          };\n        }\n        return {\n          mapData,\n          fills\n        }\n      },\n      initVectorMap() {\n        let { fills, mapData } = this.generateMapColors();\n        let worldMap = new DataMap({\n          scope: 'world',\n          element: document.getElementById(\"worldMap\"),\n          fills,\n          data: mapData,\n          responsive: true,\n          geographyConfig: {\n            borderWidth: 0.5,\n            borderOpacity: 0.8,\n            highlightFillColor: this.highlightFillColor,\n            highlightBorderColor: this.highlightBorderColor,\n            highlightBorderWidth: 0.5,\n            highlightBorderOpacity: 0.8\n          },\n        });\n        let resizeFunc = worldMap.resize.bind(worldMap);\n        window.addEventListener('resize', () => {\n          throttle(resizeFunc, 40)\n        }, false);\n      }\n    },\n    async mounted() {\n      this.initVectorMap()\n    }\n  }\n</script>\n<style>\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WorldMap.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WorldMap.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./WorldMap.vue?vue&type=template&id=119d760b&\"\nimport script from \"./WorldMap.vue?vue&type=script&lang=js&\"\nexport * from \"./WorldMap.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.is-iterable');\n","module.exports = require(\"core-js/library/fn/array/from\");","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').isIterable = function (it) {\n  var O = Object(it);\n  return O[ITERATOR] !== undefined\n    || '@@iterator' in O\n    // eslint-disable-next-line no-prototype-builtins\n    || Iterators.hasOwnProperty(classof(O));\n};\n","require('../../modules/es7.object.values');\nmodule.exports = require('../../modules/_core').Object.values;\n","module.exports = require(\"core-js/library/fn/array/is-array\");","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.topojson = global.topojson || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction noop() {}\n\nfunction transformAbsolute(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    point[0] = (x0 += point[0]) * kx + dx;\n    point[1] = (y0 += point[1]) * ky + dy;\n  };\n}\n\nfunction transformRelative(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    var x1 = Math.round((point[0] - dx) / kx),\n        y1 = Math.round((point[1] - dy) / ky);\n    point[0] = x1 - x0;\n    point[1] = y1 - y0;\n    x0 = x1;\n    y0 = y1;\n  };\n}\n\nfunction reverse(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n\nfunction bisect(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n}\n\nfunction feature(topology, o) {\n  return o.type === \"GeometryCollection\" ? {\n    type: \"FeatureCollection\",\n    features: o.geometries.map(function(o) { return feature$1(topology, o); })\n  } : feature$1(topology, o);\n}\n\nfunction feature$1(topology, o) {\n  var f = {\n    type: \"Feature\",\n    id: o.id,\n    properties: o.properties || {},\n    geometry: object(topology, o)\n  };\n  if (o.id == null) delete f.id;\n  return f;\n}\n\nfunction object(topology, o) {\n  var absolute = transformAbsolute(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n      points.push(p = a[k].slice());\n      absolute(p, k);\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    p = p.slice();\n    absolute(p, 0);\n    return p;\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0].slice());\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0].slice());\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var t = o.type;\n    return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n        : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n        : null;\n  }\n\n  var geometryType = {\n    Point: function(o) { return point(o.coordinates); },\n    MultiPoint: function(o) { return o.coordinates.map(point); },\n    LineString: function(o) { return line(o.arcs); },\n    MultiLineString: function(o) { return o.arcs.map(line); },\n    Polygon: function(o) { return polygon(o.arcs); },\n    MultiPolygon: function(o) { return o.arcs.map(polygon); }\n  };\n\n  return geometry(o);\n}\n\nfunction stitchArcs(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n}\n\nfunction mesh(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\n\nfunction meshArcs(topology, o, filter) {\n  var arcs = [];\n\n  function arc(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function line(arcs) {\n    arcs.forEach(arc);\n  }\n\n  function polygon(arcs) {\n    arcs.forEach(line);\n  }\n\n  function geometry(o) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n    else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n  }\n\n  if (arguments.length > 1) {\n    var geomsByArc = [],\n        geom;\n\n    var geometryType = {\n      LineString: line,\n      MultiLineString: polygon,\n      Polygon: polygon,\n      MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n    };\n\n    geometry(o);\n\n    geomsByArc.forEach(arguments.length < 3\n        ? function(geoms) { arcs.push(geoms[0].i); }\n        : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n  } else {\n    for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n  }\n\n  return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n}\n\nfunction cartesianTriangleArea(triangle) {\n  var a = triangle[0], b = triangle[1], c = triangle[2];\n  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n}\n\nfunction ring(ring) {\n  var i = -1,\n      n = ring.length,\n      a,\n      b = ring[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = ring[i];\n    area += a[0] * b[1] - a[1] * b[0];\n  }\n\n  return area / 2;\n}\n\nfunction merge(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\n\nfunction mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      components = [];\n\n  objects.forEach(function(o) {\n    if (o.type === \"Polygon\") register(o.arcs);\n    else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n  });\n\n  function register(polygon) {\n    polygon.forEach(function(ring$$) {\n      ring$$.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring$$) {\n    return Math.abs(ring(object(topology, {type: \"Polygon\", arcs: [ring$$]}).coordinates[0]));\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var component = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      components.push(component);\n      while (polygon = neighbors.pop()) {\n        component.push(polygon);\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: components.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitchArcs(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n\nfunction neighbors(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}\n\nfunction compareArea(a, b) {\n  return a[1][2] - b[1][2];\n}\n\nfunction minAreaHeap() {\n  var heap = {},\n      array = [],\n      size = 0;\n\n  heap.push = function(object) {\n    up(array[object._ = size] = object, size++);\n    return size;\n  };\n\n  heap.pop = function() {\n    if (size <= 0) return;\n    var removed = array[0], object;\n    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n    return removed;\n  };\n\n  heap.remove = function(removed) {\n    var i = removed._, object;\n    if (array[i] !== removed) return; // invalid request\n    if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n    return i;\n  };\n\n  function up(object, i) {\n    while (i > 0) {\n      var j = ((i + 1) >> 1) - 1,\n          parent = array[j];\n      if (compareArea(object, parent) >= 0) break;\n      array[parent._ = i] = parent;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  function down(object, i) {\n    while (true) {\n      var r = (i + 1) << 1,\n          l = r - 1,\n          j = i,\n          child = array[j];\n      if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n      if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n      if (j === i) break;\n      array[child._ = i] = child;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  return heap;\n}\n\nfunction presimplify(topology, triangleArea) {\n  var absolute = transformAbsolute(topology.transform),\n      relative = transformRelative(topology.transform),\n      heap = minAreaHeap();\n\n  if (!triangleArea) triangleArea = cartesianTriangleArea;\n\n  topology.arcs.forEach(function(arc) {\n    var triangles = [],\n        maxArea = 0,\n        triangle,\n        i,\n        n,\n        p;\n\n    // To store each point’s effective area, we create a new array rather than\n    // extending the passed-in point to workaround a Chrome/V8 bug (getting\n    // stuck in smi mode). For midpoints, the initial effective area of\n    // Infinity will be computed in the next step.\n    for (i = 0, n = arc.length; i < n; ++i) {\n      p = arc[i];\n      absolute(arc[i] = [p[0], p[1], Infinity], i);\n    }\n\n    for (i = 1, n = arc.length - 1; i < n; ++i) {\n      triangle = arc.slice(i - 1, i + 2);\n      triangle[1][2] = triangleArea(triangle);\n      triangles.push(triangle);\n      heap.push(triangle);\n    }\n\n    for (i = 0, n = triangles.length; i < n; ++i) {\n      triangle = triangles[i];\n      triangle.previous = triangles[i - 1];\n      triangle.next = triangles[i + 1];\n    }\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the area of the current point is less than that of the previous point\n      // to be eliminated, use the latter's area instead. This ensures that the\n      // current point cannot be eliminated without eliminating previously-\n      // eliminated points.\n      if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n      else maxArea = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    arc.forEach(relative);\n  });\n\n  function update(triangle) {\n    heap.remove(triangle);\n    triangle[1][2] = triangleArea(triangle);\n    heap.push(triangle);\n  }\n\n  return topology;\n}\n\nvar version = \"1.6.27\";\n\nexports.version = version;\nexports.mesh = mesh;\nexports.meshArcs = meshArcs;\nexports.merge = merge;\nexports.mergeArcs = mergeArcs;\nexports.feature = feature;\nexports.neighbors = neighbors;\nexports.presimplify = presimplify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));","module.exports = require(\"core-js/library/fn/is-iterable\");","(function() {\n  var svg;\n\n  // Save off default references\n  var d3 = window.d3, topojson = window.topojson;\n\n  var defaultOptions = {\n    scope: 'world',\n    responsive: false,\n    aspectRatio: 0.5625,\n    setProjection: setProjection,\n    projection: 'equirectangular',\n    dataType: 'json',\n    data: {},\n    done: function() {},\n    fills: {\n      defaultFill: '#ABDDA4'\n    },\n    filters: {},\n    geographyConfig: {\n        dataUrl: null,\n        hideAntarctica: true,\n        hideHawaiiAndAlaska : false,\n        borderWidth: 1,\n        borderOpacity: 1,\n        borderColor: '#FDFDFD',\n        popupTemplate: function(geography, data) {\n          return '<div class=\"hoverinfo\"><strong>' + geography.properties.name + '</strong></div>';\n        },\n        popupOnHover: true,\n        highlightOnHover: true,\n        highlightFillColor: '#FC8D59',\n        highlightBorderColor: 'rgba(250, 15, 160, 0.2)',\n        highlightBorderWidth: 2,\n        highlightBorderOpacity: 1\n    },\n    projectionConfig: {\n      rotation: [97, 0]\n    },\n    bubblesConfig: {\n        borderWidth: 2,\n        borderOpacity: 1,\n        borderColor: '#FFFFFF',\n        popupOnHover: true,\n        radius: null,\n        popupTemplate: function(geography, data) {\n          return '<div class=\"hoverinfo\"><strong>' + data.name + '</strong></div>';\n        },\n        fillOpacity: 0.75,\n        animate: true,\n        highlightOnHover: true,\n        highlightFillColor: '#FC8D59',\n        highlightBorderColor: 'rgba(250, 15, 160, 0.2)',\n        highlightBorderWidth: 2,\n        highlightBorderOpacity: 1,\n        highlightFillOpacity: 0.85,\n        exitDelay: 100,\n        key: JSON.stringify\n    },\n    arcConfig: {\n      strokeColor: '#DD1C77',\n      strokeWidth: 1,\n      arcSharpness: 1,\n      animationSpeed: 600,\n      popupOnHover: false,\n      popupTemplate: function(geography, data) {\n        // Case with latitude and longitude\n        if ( ( data.origin && data.destination ) && data.origin.latitude && data.origin.longitude && data.destination.latitude && data.destination.longitude ) {\n          return '<div class=\"hoverinfo\"><strong>Arc</strong><br>Origin: ' + JSON.stringify(data.origin) + '<br>Destination: ' + JSON.stringify(data.destination) + '</div>';\n        }\n        // Case with only country name\n        else if ( data.origin && data.destination ) {\n          return '<div class=\"hoverinfo\"><strong>Arc</strong><br>' + data.origin + ' -> ' + data.destination + '</div>';\n        }\n        // Missing information\n        else {\n          return '';\n        }\n      }\n    }\n  };\n\n  /*\n    Getter for value. If not declared on datumValue, look up the chain into optionsValue\n  */\n  function val( datumValue, optionsValue, context ) {\n    if ( typeof context === 'undefined' ) {\n      context = optionsValue;\n      optionsValues = undefined;\n    }\n    var value = typeof datumValue !== 'undefined' ? datumValue : optionsValue;\n\n    if (typeof value === 'undefined') {\n      return  null;\n    }\n\n    if ( typeof value === 'function' ) {\n      var fnContext = [context];\n      if ( context.geography ) {\n        fnContext = [context.geography, context.data];\n      }\n      return value.apply(null, fnContext);\n    }\n    else {\n      return value;\n    }\n  }\n\n  function addContainer( element, height, width ) {\n    this.svg = d3.select( element ).append('svg')\n      .attr('width', width || element.offsetWidth)\n      .attr('data-width', width || element.offsetWidth)\n      .attr('class', 'datamap')\n      .attr('height', height || element.offsetHeight)\n      .style('overflow', 'hidden'); // IE10+ doesn't respect height/width when map is zoomed in\n\n    if (this.options.responsive) {\n      d3.select(this.options.element).style({'position': 'relative', 'padding-bottom': (this.options.aspectRatio*100) + '%'});\n      d3.select(this.options.element).select('svg').style({'position': 'absolute', 'width': '100%', 'height': '100%'});\n      d3.select(this.options.element).select('svg').select('g').selectAll('path').style('vector-effect', 'non-scaling-stroke');\n\n    }\n\n    return this.svg;\n  }\n\n  // setProjection takes the svg element and options\n  function setProjection( element, options ) {\n    var width = options.width || element.offsetWidth;\n    var height = options.height || element.offsetHeight;\n    var projection, path;\n    var svg = this.svg;\n\n    if ( options && typeof options.scope === 'undefined') {\n      options.scope = 'world';\n    }\n\n    if ( options.scope === 'usa' ) {\n      projection = d3.geo.albersUsa()\n        .scale(width)\n        .translate([width / 2, height / 2]);\n    }\n    else if ( options.scope === 'world' ) {\n      projection = d3.geo[options.projection]()\n        .scale((width + 1) / 2 / Math.PI)\n        .translate([width / 2, height / (options.projection === \"mercator\" ? 1.45 : 1.8)]);\n    }\n\n    if ( options.projection === 'orthographic' ) {\n\n      svg.append(\"defs\").append(\"path\")\n        .datum({type: \"Sphere\"})\n        .attr(\"id\", \"sphere\")\n        .attr(\"d\", path);\n\n      svg.append(\"use\")\n          .attr(\"class\", \"stroke\")\n          .attr(\"xlink:href\", \"#sphere\");\n\n      svg.append(\"use\")\n          .attr(\"class\", \"fill\")\n          .attr(\"xlink:href\", \"#sphere\");\n      projection.scale(250).clipAngle(90).rotate(options.projectionConfig.rotation)\n    }\n\n    path = d3.geo.path()\n      .projection( projection );\n\n    return {path: path, projection: projection};\n  }\n\n  function addStyleBlock() {\n    if ( d3.select('.datamaps-style-block').empty() ) {\n      d3.select('head').append('style').attr('class', 'datamaps-style-block')\n      .html('.datamap path.datamaps-graticule { fill: none; stroke: #777; stroke-width: 0.5px; stroke-opacity: .5; pointer-events: none; } .datamap .labels {pointer-events: none;} .datamap path:not(.datamaps-arc), .datamap circle, .datamap line {stroke: #FFFFFF; vector-effect: non-scaling-stroke; stroke-width: 1px;} .datamaps-legend dt, .datamaps-legend dd { float: left; margin: 0 3px 0 0;} .datamaps-legend dd {width: 20px; margin-right: 6px; border-radius: 3px;} .datamaps-legend {padding-bottom: 20px; z-index: 1001; position: absolute; left: 4px; font-size: 12px; font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;} .datamaps-hoverover {display: none; font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif; } .hoverinfo {padding: 4px; border-radius: 1px; background-color: #FFF; box-shadow: 1px 1px 5px #CCC; font-size: 12px; border: 1px solid #CCC; } .hoverinfo hr {border:1px dotted #CCC; }');\n    }\n  }\n\n  function drawSubunits( data ) {\n    var fillData = this.options.fills,\n        colorCodeData = this.options.data || {},\n        geoConfig = this.options.geographyConfig;\n\n    var subunits = this.svg.select('g.datamaps-subunits');\n    if ( subunits.empty() ) {\n      subunits = this.addLayer('datamaps-subunits', null, true);\n    }\n\n    var geoData = topojson.feature( data, data.objects[ this.options.scope ] ).features;\n    if ( geoConfig.hideAntarctica ) {\n      geoData = geoData.filter(function(feature) {\n        return feature.id !== \"ATA\";\n      });\n    }\n\n    if ( geoConfig.hideHawaiiAndAlaska ) {\n      geoData = geoData.filter(function(feature) {\n        return feature.id !== \"HI\" && feature.id !== 'AK';\n      });\n    }\n\n    var geo = subunits.selectAll('path.datamaps-subunit').data( geoData );\n\n    geo.enter()\n      .append('path')\n      .attr('d', this.path)\n      .attr('class', function(d) {\n        return 'datamaps-subunit ' + d.id;\n      })\n      .attr('data-info', function(d) {\n        return JSON.stringify( colorCodeData[d.id]);\n      })\n      .style('fill', function(d) {\n        // If fillKey - use that\n        // Otherwise check 'fill'\n        // Otherwise check 'defaultFill'\n        var fillColor;\n\n        var datum = colorCodeData[d.id];\n        if ( datum && datum.fillKey ) {\n          fillColor = fillData[ val(datum.fillKey, {data: colorCodeData[d.id], geography: d}) ];\n        }\n\n        if ( typeof fillColor === 'undefined' ) {\n          fillColor = val(datum && datum.fillColor, fillData.defaultFill, {data: colorCodeData[d.id], geography: d});\n        }\n\n        return fillColor;\n      })\n      .style('stroke-width', geoConfig.borderWidth)\n      .style('stroke-opacity', geoConfig.borderOpacity)\n      .style('stroke', geoConfig.borderColor);\n  }\n\n  function handleGeographyConfig () {\n    var hoverover;\n    var svg = this.svg;\n    var self = this;\n    var options = this.options.geographyConfig;\n\n    if ( options.highlightOnHover || options.popupOnHover ) {\n      svg.selectAll('.datamaps-subunit')\n        .on('mouseover', function(d) {\n          var $this = d3.select(this);\n          var datum = self.options.data[d.id] || {};\n          if ( options.highlightOnHover ) {\n            var previousAttributes = {\n              'fill':  $this.style('fill'),\n              'stroke': $this.style('stroke'),\n              'stroke-width': $this.style('stroke-width'),\n              'fill-opacity': $this.style('fill-opacity')\n            };\n\n            $this\n              .style('fill', val(datum.highlightFillColor, options.highlightFillColor, datum))\n              .style('stroke', val(datum.highlightBorderColor, options.highlightBorderColor, datum))\n              .style('stroke-width', val(datum.highlightBorderWidth, options.highlightBorderWidth, datum))\n              .style('stroke-opacity', val(datum.highlightBorderOpacity, options.highlightBorderOpacity, datum))\n              .style('fill-opacity', val(datum.highlightFillOpacity, options.highlightFillOpacity, datum))\n              .attr('data-previousAttributes', JSON.stringify(previousAttributes));\n\n            // As per discussion on https://github.com/markmarkoh/datamaps/issues/19\n            if ( ! /((MSIE)|(Trident))/.test(navigator.userAgent) ) {\n             moveToFront.call(this);\n            }\n          }\n\n          if ( options.popupOnHover ) {\n            self.updatePopup($this, d, options, svg);\n          }\n        })\n        .on('mouseout', function() {\n          var $this = d3.select(this);\n\n          if (options.highlightOnHover) {\n            // Reapply previous attributes\n            var previousAttributes = JSON.parse( $this.attr('data-previousAttributes') );\n            for ( var attr in previousAttributes ) {\n              $this.style(attr, previousAttributes[attr]);\n            }\n          }\n          $this.on('mousemove', null);\n          d3.selectAll('.datamaps-hoverover').style('display', 'none');\n        });\n    }\n\n    function moveToFront() {\n      this.parentNode.appendChild(this);\n    }\n  }\n\n  // Plugin to add a simple map legend\n  function addLegend(layer, data, options) {\n    data = data || {};\n    if ( !this.options.fills ) {\n      return;\n    }\n\n    var html = '<dl>';\n    var label = '';\n    if ( data.legendTitle ) {\n      html = '<h2>' + data.legendTitle + '</h2>' + html;\n    }\n    for ( var fillKey in this.options.fills ) {\n\n      if ( fillKey === 'defaultFill') {\n        if (! data.defaultFillName ) {\n          continue;\n        }\n        label = data.defaultFillName;\n      } else {\n        if (data.labels && data.labels[fillKey]) {\n          label = data.labels[fillKey];\n        } else {\n          label= fillKey + ': ';\n        }\n      }\n      html += '<dt>' + label + '</dt>';\n      html += '<dd style=\"background-color:' +  this.options.fills[fillKey] + '\">&nbsp;</dd>';\n    }\n    html += '</dl>';\n\n    var hoverover = d3.select( this.options.element ).append('div')\n      .attr('class', 'datamaps-legend')\n      .html(html);\n  }\n\n    function addGraticule ( layer, options ) {\n      var graticule = d3.geo.graticule();\n      this.svg.insert(\"path\", '.datamaps-subunits')\n        .datum(graticule)\n        .attr(\"class\", \"datamaps-graticule\")\n        .attr(\"d\", this.path);\n  }\n\n  function handleArcs (layer, data, options) {\n    var self = this,\n        svg = this.svg;\n\n    if ( !data || (data && !data.slice) ) {\n      throw \"Datamaps Error - arcs must be an array\";\n    }\n\n    // For some reason arc options were put in an `options` object instead of the parent arc\n    // I don't like this, so to match bubbles and other plugins I'm moving it\n    // This is to keep backwards compatability\n    for ( var i = 0; i < data.length; i++ ) {\n      data[i] = defaults(data[i], data[i].options);\n      delete data[i].options;\n    }\n\n    if ( typeof options === \"undefined\" ) {\n      options = defaultOptions.arcConfig;\n    }\n\n    var arcs = layer.selectAll('path.datamaps-arc').data( data, JSON.stringify );\n\n    var path = d3.geo.path()\n        .projection(self.projection);\n\n    arcs\n      .enter()\n        .append('svg:path')\n        .attr('class', 'datamaps-arc')\n        .style('stroke-linecap', 'round')\n        .style('stroke', function(datum) {\n          return val(datum.strokeColor, options.strokeColor, datum);\n        })\n        .style('fill', 'none')\n        .style('stroke-width', function(datum) {\n            return val(datum.strokeWidth, options.strokeWidth, datum);\n        })\n        .attr('d', function(datum) {\n\n            var originXY, destXY;\n\n            if (typeof datum.origin === \"string\") {\n              switch (datum.origin) {\n                   case \"CAN\":\n                       originXY = self.latLngToXY(56.624472, -114.665293);\n                       break;\n                   case \"CHL\":\n                       originXY = self.latLngToXY(-33.448890, -70.669265);\n                       break;\n                   case \"IDN\":\n                       originXY = self.latLngToXY(-6.208763, 106.845599);\n                       break;\n                   case \"JPN\":\n                       originXY = self.latLngToXY(35.689487, 139.691706);\n                       break;\n                   case \"MYS\":\n                       originXY = self.latLngToXY(3.139003, 101.686855);\n                       break;\n                   case \"NOR\":\n                       originXY = self.latLngToXY(59.913869, 10.752245);\n                       break;\n                   case \"USA\":\n                       originXY = self.latLngToXY(41.140276, -100.760145);\n                       break;\n                   case \"VNM\":\n                       originXY = self.latLngToXY(21.027764, 105.834160);\n                       break;\n                   default:\n                       originXY = self.path.centroid(svg.select('path.' + datum.origin).data()[0]);\n               }\n            } else {\n              originXY = self.latLngToXY(val(datum.origin.latitude, datum), val(datum.origin.longitude, datum))\n            }\n\n            if (typeof datum.destination === 'string') {\n              switch (datum.destination) {\n                     case \"CAN\":\n                        destXY = self.latLngToXY(56.624472, -114.665293);\n                        break;\n                    case \"CHL\":\n                        destXY = self.latLngToXY(-33.448890, -70.669265);\n                        break;\n                    case \"IDN\":\n                        destXY = self.latLngToXY(-6.208763, 106.845599);\n                        break;\n                    case \"JPN\":\n                        destXY = self.latLngToXY(35.689487, 139.691706);\n                        break;\n                    case \"MYS\":\n                        destXY = self.latLngToXY(3.139003, 101.686855);\n                        break;\n                    case \"NOR\":\n                        destXY = self.latLngToXY(59.913869, 10.752245);\n                        break;\n                    case \"USA\":\n                        destXY = self.latLngToXY(41.140276, -100.760145);\n                        break;\n                    case \"VNM\":\n                        destXY = self.latLngToXY(21.027764, 105.834160);\n                        break;\n                    default:\n                        destXY = self.path.centroid(svg.select('path.' + datum.destination).data()[0]);\n              }\n            } else {\n              destXY = self.latLngToXY(val(datum.destination.latitude, datum), val(datum.destination.longitude, datum));\n            }\n            var midXY = [ (originXY[0] + destXY[0]) / 2, (originXY[1] + destXY[1]) / 2];\n            if (options.greatArc) {\n                  // TODO: Move this to inside `if` clause when setting attr `d`\n              var greatArc = d3.geo.greatArc()\n                  .source(function(d) { return [val(d.origin.longitude, d), val(d.origin.latitude, d)]; })\n                  .target(function(d) { return [val(d.destination.longitude, d), val(d.destination.latitude, d)]; });\n\n              return path(greatArc(datum))\n            }\n            var sharpness = val(datum.arcSharpness, options.arcSharpness, datum);\n            return \"M\" + originXY[0] + ',' + originXY[1] + \"S\" + (midXY[0] + (50 * sharpness)) + \",\" + (midXY[1] - (75 * sharpness)) + \",\" + destXY[0] + \",\" + destXY[1];\n        })\n        .attr('data-info', function(datum) {\n          return JSON.stringify(datum);\n        })\n        .on('mouseover', function ( datum ) {\n          var $this = d3.select(this);\n\n          if (options.popupOnHover) {\n            self.updatePopup($this, datum, options, svg);\n          }\n        })\n        .on('mouseout', function ( datum ) {\n          var $this = d3.select(this);\n\n          d3.selectAll('.datamaps-hoverover').style('display', 'none');\n        })\n        .transition()\n          .delay(100)\n          .style('fill', function(datum) {\n            /*\n              Thank you Jake Archibald, this is awesome.\n              Source: http://jakearchibald.com/2013/animated-line-drawing-svg/\n            */\n            var length = this.getTotalLength();\n            this.style.transition = this.style.WebkitTransition = 'none';\n            this.style.strokeDasharray = length + ' ' + length;\n            this.style.strokeDashoffset = length;\n            this.getBoundingClientRect();\n            this.style.transition = this.style.WebkitTransition = 'stroke-dashoffset ' + val(datum.animationSpeed, options.animationSpeed, datum) + 'ms ease-out';\n            this.style.strokeDashoffset = '0';\n            return 'none';\n          })\n\n    arcs.exit()\n      .transition()\n      .style('opacity', 0)\n      .remove();\n  }\n\n  function handleLabels ( layer, options ) {\n    var self = this;\n    options = options || {};\n    var labelStartCoodinates = this.projection([-67.707617, 42.722131]);\n    this.svg.selectAll(\".datamaps-subunit\")\n      .attr(\"data-foo\", function(d) {\n        var center = self.path.centroid(d);\n        var xOffset = 7.5, yOffset = 5;\n\n        if ( [\"FL\", \"KY\", \"MI\"].indexOf(d.id) > -1 ) xOffset = -2.5;\n        if ( d.id === \"NY\" ) xOffset = -1;\n        if ( d.id === \"MI\" ) yOffset = 18;\n        if ( d.id === \"LA\" ) xOffset = 13;\n\n        var x,y;\n\n        x = center[0] - xOffset;\n        y = center[1] + yOffset;\n\n        var smallStateIndex = [\"VT\", \"NH\", \"MA\", \"RI\", \"CT\", \"NJ\", \"DE\", \"MD\", \"DC\"].indexOf(d.id);\n        if ( smallStateIndex > -1) {\n          var yStart = labelStartCoodinates[1];\n          x = labelStartCoodinates[0];\n          y = yStart + (smallStateIndex * (2+ (options.fontSize || 12)));\n          layer.append(\"line\")\n            .attr(\"x1\", x - 3)\n            .attr(\"y1\", y - 5)\n            .attr(\"x2\", center[0])\n            .attr(\"y2\", center[1])\n            .style(\"stroke\", options.labelColor || \"#000\")\n            .style(\"stroke-width\", options.lineWidth || 1)\n        }\n\n          layer.append(\"text\")\n              .attr(\"x\", x)\n              .attr(\"y\", y)\n              .style(\"font-size\", (options.fontSize || 10) + 'px')\n              .style(\"font-family\", options.fontFamily || \"Verdana\")\n              .style(\"fill\", options.labelColor || \"#000\")\n              .text(function() {\n                  if (options.customLabelText && options.customLabelText[d.id]) {\n                      return options.customLabelText[d.id]\n                  } else {\n                      return d.id\n                  }\n              });\n\n        return \"bar\";\n      });\n  }\n\n\n  function handleBubbles (layer, data, options ) {\n    var self = this,\n        fillData = this.options.fills,\n        filterData = this.options.filters,\n        svg = this.svg;\n\n    if ( !data || (data && !data.slice) ) {\n      throw \"Datamaps Error - bubbles must be an array\";\n    }\n\n    var bubbles = layer.selectAll('circle.datamaps-bubble').data( data, options.key );\n\n    bubbles\n      .enter()\n        .append('svg:circle')\n        .attr('class', 'datamaps-bubble')\n        .attr('cx', function ( datum ) {\n          var latLng;\n          if ( datumHasCoords(datum) ) {\n            latLng = self.latLngToXY(datum.latitude, datum.longitude);\n          }\n          else if ( datum.centered ) {\n            if ( datum.centered === 'USA' ) {\n              latLng = self.projection([-98.58333, 39.83333])\n            } else {\n              latLng = self.path.centroid(svg.select('path.' + datum.centered).data()[0]);\n            }\n          }\n          if ( latLng ) return latLng[0];\n        })\n        .attr('cy', function ( datum ) {\n          var latLng;\n          if ( datumHasCoords(datum) ) {\n            latLng = self.latLngToXY(datum.latitude, datum.longitude);\n          }\n          else if ( datum.centered ) {\n            if ( datum.centered === 'USA' ) {\n              latLng = self.projection([-98.58333, 39.83333])\n            } else {\n              latLng = self.path.centroid(svg.select('path.' + datum.centered).data()[0]);\n            }\n          }\n          if ( latLng ) return latLng[1];\n        })\n        .attr('r', function(datum) {\n          // If animation enabled start with radius 0, otherwise use full size.\n          return options.animate ? 0 : val(datum.radius, options.radius, datum);\n        })\n        .attr('data-info', function(datum) {\n          return JSON.stringify(datum);\n        })\n        .attr('filter', function (datum) {\n          var filterKey = filterData[ val(datum.filterKey, options.filterKey, datum) ];\n\n          if (filterKey) {\n            return filterKey;\n          }\n        })\n        .style('stroke', function ( datum ) {\n          return val(datum.borderColor, options.borderColor, datum);\n        })\n        .style('stroke-width', function ( datum ) {\n          return val(datum.borderWidth, options.borderWidth, datum);\n        })\n        .style('stroke-opacity', function ( datum ) {\n          return val(datum.borderOpacity, options.borderOpacity, datum);\n        })\n        .style('fill-opacity', function ( datum ) {\n          return val(datum.fillOpacity, options.fillOpacity, datum);\n        })\n        .style('fill', function ( datum ) {\n          var fillColor = fillData[ val(datum.fillKey, options.fillKey, datum) ];\n          return fillColor || fillData.defaultFill;\n        })\n        .on('mouseover', function ( datum ) {\n          var $this = d3.select(this);\n\n          if (options.highlightOnHover) {\n            // Save all previous attributes for mouseout\n            var previousAttributes = {\n              'fill':  $this.style('fill'),\n              'stroke': $this.style('stroke'),\n              'stroke-width': $this.style('stroke-width'),\n              'fill-opacity': $this.style('fill-opacity')\n            };\n\n            $this\n              .style('fill', val(datum.highlightFillColor, options.highlightFillColor, datum))\n              .style('stroke', val(datum.highlightBorderColor, options.highlightBorderColor, datum))\n              .style('stroke-width', val(datum.highlightBorderWidth, options.highlightBorderWidth, datum))\n              .style('stroke-opacity', val(datum.highlightBorderOpacity, options.highlightBorderOpacity, datum))\n              .style('fill-opacity', val(datum.highlightFillOpacity, options.highlightFillOpacity, datum))\n              .attr('data-previousAttributes', JSON.stringify(previousAttributes));\n          }\n\n          if (options.popupOnHover) {\n            self.updatePopup($this, datum, options, svg);\n          }\n        })\n        .on('mouseout', function ( datum ) {\n          var $this = d3.select(this);\n\n          if (options.highlightOnHover) {\n            // Reapply previous attributes\n            var previousAttributes = JSON.parse( $this.attr('data-previousAttributes') );\n            for ( var attr in previousAttributes ) {\n              $this.style(attr, previousAttributes[attr]);\n            }\n          }\n\n          d3.selectAll('.datamaps-hoverover').style('display', 'none');\n        })\n\n    bubbles.transition()\n      .duration(400)\n      .attr('r', function ( datum ) {\n        return val(datum.radius, options.radius, datum);\n      })\n    .transition()\n      .duration(0)\n      .attr('data-info', function(d) {\n        return JSON.stringify(d);\n      });\n\n    bubbles.exit()\n      .transition()\n        .delay(options.exitDelay)\n        .attr(\"r\", 0)\n        .remove();\n\n    function datumHasCoords (datum) {\n      return typeof datum !== 'undefined' && typeof datum.latitude !== 'undefined' && typeof datum.longitude !== 'undefined';\n    }\n  }\n\n  function defaults(obj) {\n    Array.prototype.slice.call(arguments, 1).forEach(function(source) {\n      if (source) {\n        for (var prop in source) {\n          // Deep copy if property not set\n          if (obj[prop] == null) {\n            if (typeof source[prop] == 'function') {\n              obj[prop] = source[prop];\n            }\n            else {\n              obj[prop] = JSON.parse(JSON.stringify(source[prop]));\n            }\n          }\n        }\n      }\n    });\n    return obj;\n  }\n  /**************************************\n             Public Functions\n  ***************************************/\n\n  function Datamap( options ) {\n\n    if ( typeof d3 === 'undefined' || typeof topojson === 'undefined' ) {\n      throw new Error('Include d3.js (v3.0.3 or greater) and topojson on this page before creating a new map');\n   }\n    // Set options for global use\n    this.options = defaults(options, defaultOptions);\n    this.options.geographyConfig = defaults(options.geographyConfig, defaultOptions.geographyConfig);\n    this.options.projectionConfig = defaults(options.projectionConfig, defaultOptions.projectionConfig);\n    this.options.bubblesConfig = defaults(options.bubblesConfig, defaultOptions.bubblesConfig);\n    this.options.arcConfig = defaults(options.arcConfig, defaultOptions.arcConfig);\n\n    // Add the SVG container\n    if ( d3.select( this.options.element ).select('svg').length > 0 ) {\n      addContainer.call(this, this.options.element, this.options.height, this.options.width );\n    }\n\n    // Add core plugins to this instance\n    this.addPlugin('bubbles', handleBubbles);\n    this.addPlugin('legend', addLegend);\n    this.addPlugin('arc', handleArcs);\n    this.addPlugin('labels', handleLabels);\n    this.addPlugin('graticule', addGraticule);\n\n    // Append style block with basic hoverover styles\n    if ( ! this.options.disableDefaultStyles ) {\n      addStyleBlock();\n    }\n\n    return this.draw();\n  }\n\n  // Resize map\n  Datamap.prototype.resize = function () {\n\n    var self = this;\n    var options = self.options;\n\n    if (options.responsive) {\n      var newsize = options.element.clientWidth,\n          oldsize = d3.select( options.element).select('svg').attr('data-width');\n\n      d3.select(options.element).select('svg').selectAll('g').attr('transform', 'scale(' + (newsize / oldsize) + ')');\n    }\n  }\n\n  // Actually draw the features(states & countries)\n  Datamap.prototype.draw = function() {\n    // Save off in a closure\n    var self = this;\n    var options = self.options;\n\n    // Set projections and paths based on scope\n    var pathAndProjection = options.setProjection.apply(this, [options.element, options] );\n\n    this.path = pathAndProjection.path;\n    this.projection = pathAndProjection.projection;\n\n    // If custom URL for topojson data, retrieve it and render\n    if ( options.geographyConfig.dataUrl ) {\n      d3.json( options.geographyConfig.dataUrl, function(error, results) {\n        if ( error ) throw new Error(error);\n        self.customTopo = results;\n        draw( results );\n      });\n    }\n    else {\n      draw( this[options.scope + 'Topo'] || options.geographyConfig.dataJson);\n    }\n\n    return this;\n\n      function draw (data) {\n        // If fetching remote data, draw the map first then call `updateChoropleth`\n        if ( self.options.dataUrl ) {\n          // Allow for csv or json data types\n          d3[self.options.dataType](self.options.dataUrl, function(data) {\n            // In the case of csv, transform data to object\n            if ( self.options.dataType === 'csv' && (data && data.slice) ) {\n              var tmpData = {};\n              for(var i = 0; i < data.length; i++) {\n                tmpData[data[i].id] = data[i];\n              }\n              data = tmpData;\n            }\n            Datamaps.prototype.updateChoropleth.call(self, data);\n          });\n        }\n        drawSubunits.call(self, data);\n        handleGeographyConfig.call(self);\n\n        if ( self.options.geographyConfig.popupOnHover || self.options.bubblesConfig.popupOnHover) {\n          hoverover = d3.select( self.options.element ).append('div')\n            .attr('class', 'datamaps-hoverover')\n            .style('z-index', 10001)\n            .style('position', 'absolute');\n        }\n\n        // Fire off finished callback\n        self.options.done(self);\n      }\n  };\n  /**************************************\n                TopoJSON\n  ***************************************/\n  Datamap.prototype.worldTopo = {\n    \"type\": \"Topology\",\n    \"objects\": {\n        \"world\": {\n            \"type\": \"GeometryCollection\",\n            \"geometries\": [{\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Afghanistan\"\n                },\n                \"id\": \"AFG\",\n                \"arcs\": [\n                    [0, 1, 2, 3, 4, 5]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Angola\"\n                },\n                \"id\": \"AGO\",\n                \"arcs\": [\n                    [\n                        [6, 7, 8, 9]\n                    ],\n                    [\n                        [10, 11, 12]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Albania\"\n                },\n                \"id\": \"ALB\",\n                \"arcs\": [\n                    [13, 14, 15, 16, 17]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"United Arab Emirates\"\n                },\n                \"id\": \"ARE\",\n                \"arcs\": [\n                    [18, 19, 20, 21, 22]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Argentina\"\n                },\n                \"id\": \"ARG\",\n                \"arcs\": [\n                    [\n                        [23, 24]\n                    ],\n                    [\n                        [25, 26, 27, 28, 29, 30]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Armenia\"\n                },\n                \"id\": \"ARM\",\n                \"arcs\": [\n                    [31, 32, 33, 34, 35]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Antarctica\"\n                },\n                \"id\": \"ATA\",\n                \"arcs\": [\n                    [\n                        [36]\n                    ],\n                    [\n                        [37]\n                    ],\n                    [\n                        [38]\n                    ],\n                    [\n                        [39]\n                    ],\n                    [\n                        [40]\n                    ],\n                    [\n                        [41]\n                    ],\n                    [\n                        [42]\n                    ],\n                    [\n                        [43]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"French Southern and Antarctic Lands\"\n                },\n                \"id\": \"ATF\",\n                \"arcs\": [\n                    [44]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Australia\"\n                },\n                \"id\": \"AUS\",\n                \"arcs\": [\n                    [\n                        [45]\n                    ],\n                    [\n                        [46]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Austria\"\n                },\n                \"id\": \"AUT\",\n                \"arcs\": [\n                    [47, 48, 49, 50, 51, 52, 53]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Azerbaijan\"\n                },\n                \"id\": \"AZE\",\n                \"arcs\": [\n                    [\n                        [54, -35]\n                    ],\n                    [\n                        [55, 56, -33, 57, 58]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Burundi\"\n                },\n                \"id\": \"BDI\",\n                \"arcs\": [\n                    [59, 60, 61]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Belgium\"\n                },\n                \"id\": \"BEL\",\n                \"arcs\": [\n                    [62, 63, 64, 65, 66]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Benin\"\n                },\n                \"id\": \"BEN\",\n                \"arcs\": [\n                    [67, 68, 69, 70, 71]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Burkina Faso\"\n                },\n                \"id\": \"BFA\",\n                \"arcs\": [\n                    [72, 73, 74, -70, 75, 76]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Bangladesh\"\n                },\n                \"id\": \"BGD\",\n                \"arcs\": [\n                    [77, 78, 79]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Bulgaria\"\n                },\n                \"id\": \"BGR\",\n                \"arcs\": [\n                    [80, 81, 82, 83, 84, 85]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"The Bahamas\"\n                },\n                \"id\": \"BHS\",\n                \"arcs\": [\n                    [\n                        [86]\n                    ],\n                    [\n                        [87]\n                    ],\n                    [\n                        [88]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Bosnia and Herzegovina\"\n                },\n                \"id\": \"BIH\",\n                \"arcs\": [\n                    [89, 90, 91]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Belarus\"\n                },\n                \"id\": \"BLR\",\n                \"arcs\": [\n                    [92, 93, 94, 95, 96]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Belize\"\n                },\n                \"id\": \"BLZ\",\n                \"arcs\": [\n                    [97, 98, 99]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Bolivia\"\n                },\n                \"id\": \"BOL\",\n                \"arcs\": [\n                    [100, 101, 102, 103, -31]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Brazil\"\n                },\n                \"id\": \"BRA\",\n                \"arcs\": [\n                    [-27, 104, -103, 105, 106, 107, 108, 109, 110, 111, 112]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Brunei\"\n                },\n                \"id\": \"BRN\",\n                \"arcs\": [\n                    [113, 114]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Bhutan\"\n                },\n                \"id\": \"BTN\",\n                \"arcs\": [\n                    [115, 116]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Botswana\"\n                },\n                \"id\": \"BWA\",\n                \"arcs\": [\n                    [117, 118, 119, 120]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Central African Republic\"\n                },\n                \"id\": \"CAF\",\n                \"arcs\": [\n                    [121, 122, 123, 124, 125, 126, 127]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Canada\"\n                },\n                \"id\": \"CAN\",\n                \"arcs\": [\n                    [\n                        [128]\n                    ],\n                    [\n                        [129]\n                    ],\n                    [\n                        [130]\n                    ],\n                    [\n                        [131]\n                    ],\n                    [\n                        [132]\n                    ],\n                    [\n                        [133]\n                    ],\n                    [\n                        [134]\n                    ],\n                    [\n                        [135]\n                    ],\n                    [\n                        [136]\n                    ],\n                    [\n                        [137]\n                    ],\n                    [\n                        [138, 139, 140, 141]\n                    ],\n                    [\n                        [142]\n                    ],\n                    [\n                        [143]\n                    ],\n                    [\n                        [144]\n                    ],\n                    [\n                        [145]\n                    ],\n                    [\n                        [146]\n                    ],\n                    [\n                        [147]\n                    ],\n                    [\n                        [148]\n                    ],\n                    [\n                        [149]\n                    ],\n                    [\n                        [150]\n                    ],\n                    [\n                        [151]\n                    ],\n                    [\n                        [152]\n                    ],\n                    [\n                        [153]\n                    ],\n                    [\n                        [154]\n                    ],\n                    [\n                        [155]\n                    ],\n                    [\n                        [156]\n                    ],\n                    [\n                        [157]\n                    ],\n                    [\n                        [158]\n                    ],\n                    [\n                        [159]\n                    ],\n                    [\n                        [160]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Switzerland\"\n                },\n                \"id\": \"CHE\",\n                \"arcs\": [\n                    [-51, 161, 162, 163]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Chile\"\n                },\n                \"id\": \"CHL\",\n                \"arcs\": [\n                    [\n                        [-24, 164]\n                    ],\n                    [\n                        [-30, 165, 166, -101]\n                    ]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"China\"\n                },\n                \"id\": \"CHN\",\n                \"arcs\": [\n                    [\n                        [167]\n                    ],\n                    [\n                        [168, 169, 170, 171, 172, 173, -117, 174, 175, 176, 177, -4, 178, 179, 180, 181, 182, 183]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Ivory Coast\"\n                },\n                \"id\": \"CIV\",\n                \"arcs\": [\n                    [184, 185, 186, 187, -73, 188]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Cameroon\"\n                },\n                \"id\": \"CMR\",\n                \"arcs\": [\n                    [189, 190, 191, 192, 193, 194, -128, 195]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Democratic Republic of the Congo\"\n                },\n                \"id\": \"COD\",\n                \"arcs\": [\n                    [196, 197, -60, 198, 199, -10, 200, -13, 201, -126, 202]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Republic of the Congo\"\n                },\n                \"id\": \"COG\",\n                \"arcs\": [\n                    [-12, 203, 204, -196, -127, -202]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Colombia\"\n                },\n                \"id\": \"COL\",\n                \"arcs\": [\n                    [205, 206, 207, 208, 209, -107, 210]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Costa Rica\"\n                },\n                \"id\": \"CRI\",\n                \"arcs\": [\n                    [211, 212, 213, 214]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Cuba\"\n                },\n                \"id\": \"CUB\",\n                \"arcs\": [\n                    [215]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Northern Cyprus\"\n                },\n                \"id\": \"-99\",\n                \"arcs\": [\n                    [216, 217]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Cyprus\"\n                },\n                \"id\": \"CYP\",\n                \"arcs\": [\n                    [218, -218]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Czech Republic\"\n                },\n                \"id\": \"CZE\",\n                \"arcs\": [\n                    [-53, 219, 220, 221]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Germany\"\n                },\n                \"id\": \"DEU\",\n                \"arcs\": [\n                    [222, 223, -220, -52, -164, 224, 225, -64, 226, 227, 228]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Djibouti\"\n                },\n                \"id\": \"DJI\",\n                \"arcs\": [\n                    [229, 230, 231, 232]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Denmark\"\n                },\n                \"id\": \"DNK\",\n                \"arcs\": [\n                    [\n                        [233]\n                    ],\n                    [\n                        [-229, 234]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Dominican Republic\"\n                },\n                \"id\": \"DOM\",\n                \"arcs\": [\n                    [235, 236]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Algeria\"\n                },\n                \"id\": \"DZA\",\n                \"arcs\": [\n                    [237, 238, 239, 240, 241, 242, 243, 244]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Ecuador\"\n                },\n                \"id\": \"ECU\",\n                \"arcs\": [\n                    [245, -206, 246]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Egypt\"\n                },\n                \"id\": \"EGY\",\n                \"arcs\": [\n                    [247, 248, 249, 250, 251]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Eritrea\"\n                },\n                \"id\": \"ERI\",\n                \"arcs\": [\n                    [252, 253, 254, -233]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Spain\"\n                },\n                \"id\": \"ESP\",\n                \"arcs\": [\n                    [255, 256, 257, 258]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Estonia\"\n                },\n                \"id\": \"EST\",\n                \"arcs\": [\n                    [259, 260, 261]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Ethiopia\"\n                },\n                \"id\": \"ETH\",\n                \"arcs\": [\n                    [-232, 262, 263, 264, 265, 266, 267, -253]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Finland\"\n                },\n                \"id\": \"FIN\",\n                \"arcs\": [\n                    [268, 269, 270, 271]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Fiji\"\n                },\n                \"id\": \"FJI\",\n                \"arcs\": [\n                    [\n                        [272]\n                    ],\n                    [\n                        [273, 274]\n                    ],\n                    [\n                        [275, -275]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Falkland Islands\"\n                },\n                \"id\": \"FLK\",\n                \"arcs\": [\n                    [276]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"France\"\n                },\n                \"id\": \"FRA\",\n                \"arcs\": [\n                    [\n                        [277]\n                    ],\n                    [\n                        [278, -225, -163, 279, 280, -257, 281, -66]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"French Guiana\"\n                },\n                \"id\": \"GUF\",\n                \"arcs\": [\n                    [282, 283, 284, 285, -111]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Gabon\"\n                },\n                \"id\": \"GAB\",\n                \"arcs\": [\n                    [286, 287, -190, -205]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"United Kingdom\"\n                },\n                \"id\": \"GBR\",\n                \"arcs\": [\n                    [\n                        [288, 289]\n                    ],\n                    [\n                        [290]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Georgia\"\n                },\n                \"id\": \"GEO\",\n                \"arcs\": [\n                    [291, 292, -58, -32, 293]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Ghana\"\n                },\n                \"id\": \"GHA\",\n                \"arcs\": [\n                    [294, -189, -77, 295]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Guinea\"\n                },\n                \"id\": \"GIN\",\n                \"arcs\": [\n                    [296, 297, 298, 299, 300, 301, -187]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Gambia\"\n                },\n                \"id\": \"GMB\",\n                \"arcs\": [\n                    [302, 303]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Guinea Bissau\"\n                },\n                \"id\": \"GNB\",\n                \"arcs\": [\n                    [304, 305, -300]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Equatorial Guinea\"\n                },\n                \"id\": \"GNQ\",\n                \"arcs\": [\n                    [306, -191, -288]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Greece\"\n                },\n                \"id\": \"GRC\",\n                \"arcs\": [\n                    [\n                        [307]\n                    ],\n                    [\n                        [308, -15, 309, -84, 310]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Greenland\"\n                },\n                \"id\": \"GRL\",\n                \"arcs\": [\n                    [311]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Guatemala\"\n                },\n                \"id\": \"GTM\",\n                \"arcs\": [\n                    [312, 313, -100, 314, 315, 316]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Guyana\"\n                },\n                \"id\": \"GUY\",\n                \"arcs\": [\n                    [317, 318, -109, 319]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Honduras\"\n                },\n                \"id\": \"HND\",\n                \"arcs\": [\n                    [320, 321, -316, 322, 323]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Croatia\"\n                },\n                \"id\": \"HRV\",\n                \"arcs\": [\n                    [324, -92, 325, 326, 327, 328]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Haiti\"\n                },\n                \"id\": \"HTI\",\n                \"arcs\": [\n                    [-237, 329]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Hungary\"\n                },\n                \"id\": \"HUN\",\n                \"arcs\": [\n                    [-48, 330, 331, 332, 333, -329, 334]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Indonesia\"\n                },\n                \"id\": \"IDN\",\n                \"arcs\": [\n                    [\n                        [335]\n                    ],\n                    [\n                        [336, 337]\n                    ],\n                    [\n                        [338]\n                    ],\n                    [\n                        [339]\n                    ],\n                    [\n                        [340]\n                    ],\n                    [\n                        [341]\n                    ],\n                    [\n                        [342]\n                    ],\n                    [\n                        [343]\n                    ],\n                    [\n                        [344, 345]\n                    ],\n                    [\n                        [346]\n                    ],\n                    [\n                        [347]\n                    ],\n                    [\n                        [348, 349]\n                    ],\n                    [\n                        [350]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"India\"\n                },\n                \"id\": \"IND\",\n                \"arcs\": [\n                    [-177, 351, -175, -116, -174, 352, -80, 353, 354]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Ireland\"\n                },\n                \"id\": \"IRL\",\n                \"arcs\": [\n                    [355, -289]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Iran\"\n                },\n                \"id\": \"IRN\",\n                \"arcs\": [\n                    [356, -6, 357, 358, 359, 360, -55, -34, -57, 361]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Iraq\"\n                },\n                \"id\": \"IRQ\",\n                \"arcs\": [\n                    [362, 363, 364, 365, 366, 367, -360]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Iceland\"\n                },\n                \"id\": \"ISL\",\n                \"arcs\": [\n                    [368]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Israel\"\n                },\n                \"id\": \"ISR\",\n                \"arcs\": [\n                    [369, 370, 371, -252, 372, 373, 374]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Italy\"\n                },\n                \"id\": \"ITA\",\n                \"arcs\": [\n                    [\n                        [375]\n                    ],\n                    [\n                        [376]\n                    ],\n                    [\n                        [377, 378, -280, -162, -50]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Jamaica\"\n                },\n                \"id\": \"JAM\",\n                \"arcs\": [\n                    [379]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Jordan\"\n                },\n                \"id\": \"JOR\",\n                \"arcs\": [\n                    [-370, 380, -366, 381, 382, -372, 383]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Japan\"\n                },\n                \"id\": \"JPN\",\n                \"arcs\": [\n                    [\n                        [384]\n                    ],\n                    [\n                        [385]\n                    ],\n                    [\n                        [386]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Kazakhstan\"\n                },\n                \"id\": \"KAZ\",\n                \"arcs\": [\n                    [387, 388, 389, 390, -181, 391]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Kenya\"\n                },\n                \"id\": \"KEN\",\n                \"arcs\": [\n                    [392, 393, 394, 395, -265, 396]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Kyrgyzstan\"\n                },\n                \"id\": \"KGZ\",\n                \"arcs\": [\n                    [-392, -180, 397, 398]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Cambodia\"\n                },\n                \"id\": \"KHM\",\n                \"arcs\": [\n                    [399, 400, 401, 402]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"South Korea\"\n                },\n                \"id\": \"KOR\",\n                \"arcs\": [\n                    [403, 404]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Kosovo\"\n                },\n                \"id\": \"-99\",\n                \"arcs\": [\n                    [-18, 405, 406, 407]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Kuwait\"\n                },\n                \"id\": \"KWT\",\n                \"arcs\": [\n                    [408, 409, -364]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Laos\"\n                },\n                \"id\": \"LAO\",\n                \"arcs\": [\n                    [410, 411, -172, 412, -401]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Lebanon\"\n                },\n                \"id\": \"LBN\",\n                \"arcs\": [\n                    [-374, 413, 414]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Liberia\"\n                },\n                \"id\": \"LBR\",\n                \"arcs\": [\n                    [415, 416, -297, -186]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Libya\"\n                },\n                \"id\": \"LBY\",\n                \"arcs\": [\n                    [417, -245, 418, 419, -250, 420, 421]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Sri Lanka\"\n                },\n                \"id\": \"LKA\",\n                \"arcs\": [\n                    [422]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Lesotho\"\n                },\n                \"id\": \"LSO\",\n                \"arcs\": [\n                    [423]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Lithuania\"\n                },\n                \"id\": \"LTU\",\n                \"arcs\": [\n                    [424, 425, 426, -93, 427]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Luxembourg\"\n                },\n                \"id\": \"LUX\",\n                \"arcs\": [\n                    [-226, -279, -65]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Latvia\"\n                },\n                \"id\": \"LVA\",\n                \"arcs\": [\n                    [428, -262, 429, -94, -427]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Morocco\"\n                },\n                \"id\": \"MAR\",\n                \"arcs\": [\n                    [-242, 430, 431]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Moldova\"\n                },\n                \"id\": \"MDA\",\n                \"arcs\": [\n                    [432, 433]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Madagascar\"\n                },\n                \"id\": \"MDG\",\n                \"arcs\": [\n                    [434]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Mexico\"\n                },\n                \"id\": \"MEX\",\n                \"arcs\": [\n                    [435, -98, -314, 436, 437]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Macedonia\"\n                },\n                \"id\": \"MKD\",\n                \"arcs\": [\n                    [-408, 438, -85, -310, -14]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Mali\"\n                },\n                \"id\": \"MLI\",\n                \"arcs\": [\n                    [439, -239, 440, -74, -188, -302, 441]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Myanmar\"\n                },\n                \"id\": \"MMR\",\n                \"arcs\": [\n                    [442, -78, -353, -173, -412, 443]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Montenegro\"\n                },\n                \"id\": \"MNE\",\n                \"arcs\": [\n                    [444, -326, -91, 445, -406, -17]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Mongolia\"\n                },\n                \"id\": \"MNG\",\n                \"arcs\": [\n                    [446, -183]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Mozambique\"\n                },\n                \"id\": \"MOZ\",\n                \"arcs\": [\n                    [447, 448, 449, 450, 451, 452, 453, 454]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Mauritania\"\n                },\n                \"id\": \"MRT\",\n                \"arcs\": [\n                    [455, 456, 457, -240, -440]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Malawi\"\n                },\n                \"id\": \"MWI\",\n                \"arcs\": [\n                    [-455, 458, 459]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Malaysia\"\n                },\n                \"id\": \"MYS\",\n                \"arcs\": [\n                    [\n                        [460, 461]\n                    ],\n                    [\n                        [-349, 462, -115, 463]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Namibia\"\n                },\n                \"id\": \"NAM\",\n                \"arcs\": [\n                    [464, -8, 465, -119, 466]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"New Caledonia\"\n                },\n                \"id\": \"NCL\",\n                \"arcs\": [\n                    [467]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Niger\"\n                },\n                \"id\": \"NER\",\n                \"arcs\": [\n                    [-75, -441, -238, -418, 468, -194, 469, -71]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Nigeria\"\n                },\n                \"id\": \"NGA\",\n                \"arcs\": [\n                    [470, -72, -470, -193]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Nicaragua\"\n                },\n                \"id\": \"NIC\",\n                \"arcs\": [\n                    [471, -324, 472, -213]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Netherlands\"\n                },\n                \"id\": \"NLD\",\n                \"arcs\": [\n                    [-227, -63, 473]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Norway\"\n                },\n                \"id\": \"NOR\",\n                \"arcs\": [\n                    [\n                        [474, -272, 475, 476]\n                    ],\n                    [\n                        [477]\n                    ],\n                    [\n                        [478]\n                    ],\n                    [\n                        [479]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Nepal\"\n                },\n                \"id\": \"NPL\",\n                \"arcs\": [\n                    [-352, -176]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"New Zealand\"\n                },\n                \"id\": \"NZL\",\n                \"arcs\": [\n                    [\n                        [480]\n                    ],\n                    [\n                        [481]\n                    ]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Oman\"\n                },\n                \"id\": \"OMN\",\n                \"arcs\": [\n                    [\n                        [482, 483, -22, 484]\n                    ],\n                    [\n                        [-20, 485]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Pakistan\"\n                },\n                \"id\": \"PAK\",\n                \"arcs\": [\n                    [-178, -355, 486, -358, -5]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Panama\"\n                },\n                \"id\": \"PAN\",\n                \"arcs\": [\n                    [487, -215, 488, -208]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Peru\"\n                },\n                \"id\": \"PER\",\n                \"arcs\": [\n                    [-167, 489, -247, -211, -106, -102]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Philippines\"\n                },\n                \"id\": \"PHL\",\n                \"arcs\": [\n                    [\n                        [490]\n                    ],\n                    [\n                        [491]\n                    ],\n                    [\n                        [492]\n                    ],\n                    [\n                        [493]\n                    ],\n                    [\n                        [494]\n                    ],\n                    [\n                        [495]\n                    ],\n                    [\n                        [496]\n                    ]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Papua New Guinea\"\n                },\n                \"id\": \"PNG\",\n                \"arcs\": [\n                    [\n                        [497]\n                    ],\n                    [\n                        [498]\n                    ],\n                    [\n                        [-345, 499]\n                    ],\n                    [\n                        [500]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Poland\"\n                },\n                \"id\": \"POL\",\n                \"arcs\": [\n                    [-224, 501, 502, -428, -97, 503, 504, -221]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Puerto Rico\"\n                },\n                \"id\": \"PRI\",\n                \"arcs\": [\n                    [505]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"North Korea\"\n                },\n                \"id\": \"PRK\",\n                \"arcs\": [\n                    [506, 507, -405, 508, -169]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Portugal\"\n                },\n                \"id\": \"PRT\",\n                \"arcs\": [\n                    [-259, 509]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Paraguay\"\n                },\n                \"id\": \"PRY\",\n                \"arcs\": [\n                    [-104, -105, -26]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Qatar\"\n                },\n                \"id\": \"QAT\",\n                \"arcs\": [\n                    [510, 511]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Romania\"\n                },\n                \"id\": \"ROU\",\n                \"arcs\": [\n                    [512, -434, 513, 514, -81, 515, -333]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Russia\"\n                },\n                \"id\": \"RUS\",\n                \"arcs\": [\n                    [\n                        [516]\n                    ],\n                    [\n                        [-503, 517, -425]\n                    ],\n                    [\n                        [518, 519]\n                    ],\n                    [\n                        [520]\n                    ],\n                    [\n                        [521]\n                    ],\n                    [\n                        [522]\n                    ],\n                    [\n                        [523]\n                    ],\n                    [\n                        [524]\n                    ],\n                    [\n                        [525]\n                    ],\n                    [\n                        [526, -507, -184, -447, -182, -391, 527, -59, -293, 528, 529, -95, -430, -261, 530, -269, -475, 531, -520]\n                    ],\n                    [\n                        [532]\n                    ],\n                    [\n                        [533]\n                    ],\n                    [\n                        [534]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Rwanda\"\n                },\n                \"id\": \"RWA\",\n                \"arcs\": [\n                    [535, -61, -198, 536]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Western Sahara\"\n                },\n                \"id\": \"ESH\",\n                \"arcs\": [\n                    [-241, -458, 537, -431]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Saudi Arabia\"\n                },\n                \"id\": \"SAU\",\n                \"arcs\": [\n                    [538, -382, -365, -410, 539, -512, 540, -23, -484, 541]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Sudan\"\n                },\n                \"id\": \"SDN\",\n                \"arcs\": [\n                    [542, 543, -123, 544, -421, -249, 545, -254, -268, 546]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"South Sudan\"\n                },\n                \"id\": \"SSD\",\n                \"arcs\": [\n                    [547, -266, -396, 548, -203, -125, 549, -543]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Senegal\"\n                },\n                \"id\": \"SEN\",\n                \"arcs\": [\n                    [550, -456, -442, -301, -306, 551, -304]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Solomon Islands\"\n                },\n                \"id\": \"SLB\",\n                \"arcs\": [\n                    [\n                        [552]\n                    ],\n                    [\n                        [553]\n                    ],\n                    [\n                        [554]\n                    ],\n                    [\n                        [555]\n                    ],\n                    [\n                        [556]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Sierra Leone\"\n                },\n                \"id\": \"SLE\",\n                \"arcs\": [\n                    [557, -298, -417]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"El Salvador\"\n                },\n                \"id\": \"SLV\",\n                \"arcs\": [\n                    [558, -317, -322]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Somaliland\"\n                },\n                \"id\": \"-99\",\n                \"arcs\": [\n                    [-263, -231, 559, 560]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Somalia\"\n                },\n                \"id\": \"SOM\",\n                \"arcs\": [\n                    [-397, -264, -561, 561]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Republic of Serbia\"\n                },\n                \"id\": \"SRB\",\n                \"arcs\": [\n                    [-86, -439, -407, -446, -90, -325, -334, -516]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Suriname\"\n                },\n                \"id\": \"SUR\",\n                \"arcs\": [\n                    [562, -285, 563, -283, -110, -319]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Slovakia\"\n                },\n                \"id\": \"SVK\",\n                \"arcs\": [\n                    [-505, 564, -331, -54, -222]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Slovenia\"\n                },\n                \"id\": \"SVN\",\n                \"arcs\": [\n                    [-49, -335, -328, 565, -378]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Sweden\"\n                },\n                \"id\": \"SWE\",\n                \"arcs\": [\n                    [-476, -271, 566]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Swaziland\"\n                },\n                \"id\": \"SWZ\",\n                \"arcs\": [\n                    [567, -451]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Syria\"\n                },\n                \"id\": \"SYR\",\n                \"arcs\": [\n                    [-381, -375, -415, 568, 569, -367]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Chad\"\n                },\n                \"id\": \"TCD\",\n                \"arcs\": [\n                    [-469, -422, -545, -122, -195]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Togo\"\n                },\n                \"id\": \"TGO\",\n                \"arcs\": [\n                    [570, -296, -76, -69]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Thailand\"\n                },\n                \"id\": \"THA\",\n                \"arcs\": [\n                    [571, -462, 572, -444, -411, -400]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Tajikistan\"\n                },\n                \"id\": \"TJK\",\n                \"arcs\": [\n                    [-398, -179, -3, 573]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Turkmenistan\"\n                },\n                \"id\": \"TKM\",\n                \"arcs\": [\n                    [-357, 574, -389, 575, -1]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"East Timor\"\n                },\n                \"id\": \"TLS\",\n                \"arcs\": [\n                    [576, -337]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Trinidad and Tobago\"\n                },\n                \"id\": \"TTO\",\n                \"arcs\": [\n                    [577]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Tunisia\"\n                },\n                \"id\": \"TUN\",\n                \"arcs\": [\n                    [-244, 578, -419]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Turkey\"\n                },\n                \"id\": \"TUR\",\n                \"arcs\": [\n                    [\n                        [-294, -36, -361, -368, -570, 579]\n                    ],\n                    [\n                        [-311, -83, 580]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Taiwan\"\n                },\n                \"id\": \"TWN\",\n                \"arcs\": [\n                    [581]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"United Republic of Tanzania\"\n                },\n                \"id\": \"TZA\",\n                \"arcs\": [\n                    [-394, 582, -448, -460, 583, -199, -62, -536, 584]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Uganda\"\n                },\n                \"id\": \"UGA\",\n                \"arcs\": [\n                    [-537, -197, -549, -395, -585]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Ukraine\"\n                },\n                \"id\": \"UKR\",\n                \"arcs\": [\n                    [-530, 585, -514, -433, -513, -332, -565, -504, -96]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Uruguay\"\n                },\n                \"id\": \"URY\",\n                \"arcs\": [\n                    [-113, 586, -28]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"United States of America\"\n                },\n                \"id\": \"USA\",\n                \"arcs\": [\n                    [\n                        [587]\n                    ],\n                    [\n                        [588]\n                    ],\n                    [\n                        [589]\n                    ],\n                    [\n                        [590]\n                    ],\n                    [\n                        [591]\n                    ],\n                    [\n                        [592, -438, 593, -139]\n                    ],\n                    [\n                        [594]\n                    ],\n                    [\n                        [595]\n                    ],\n                    [\n                        [596]\n                    ],\n                    [\n                        [-141, 597]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Uzbekistan\"\n                },\n                \"id\": \"UZB\",\n                \"arcs\": [\n                    [-576, -388, -399, -574, -2]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Venezuela\"\n                },\n                \"id\": \"VEN\",\n                \"arcs\": [\n                    [598, -320, -108, -210]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Vietnam\"\n                },\n                \"id\": \"VNM\",\n                \"arcs\": [\n                    [599, -402, -413, -171]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Vanuatu\"\n                },\n                \"id\": \"VUT\",\n                \"arcs\": [\n                    [\n                        [600]\n                    ],\n                    [\n                        [601]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"West Bank\"\n                },\n                \"id\": \"PSE\",\n                \"arcs\": [\n                    [-384, -371]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Yemen\"\n                },\n                \"id\": \"YEM\",\n                \"arcs\": [\n                    [602, -542, -483]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"South Africa\"\n                },\n                \"id\": \"ZAF\",\n                \"arcs\": [\n                    [-467, -118, 603, -452, -568, -450, 604],\n                    [-424]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Zambia\"\n                },\n                \"id\": \"ZMB\",\n                \"arcs\": [\n                    [-459, -454, 605, -120, -466, -7, -200, -584]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Zimbabwe\"\n                },\n                \"id\": \"ZWE\",\n                \"arcs\": [\n                    [-604, -121, -606, -453]\n                ]\n            }]\n        }\n    },\n    \"arcs\": [\n        [\n            [6700, 7164],\n            [28, -23],\n            [21, 8],\n            [6, 27],\n            [22, 9],\n            [15, 18],\n            [6, 47],\n            [23, 11],\n            [5, 21],\n            [13, -15],\n            [8, -2]\n        ],\n        [\n            [6847, 7265],\n            [16, -1],\n            [20, -12]\n        ],\n        [\n            [6883, 7252],\n            [9, -7],\n            [20, 19],\n            [9, -12],\n            [9, 27],\n            [17, -1],\n            [4, 9],\n            [3, 24],\n            [12, 20],\n            [15, -13],\n            [-3, -18],\n            [9, -3],\n            [-3, -50],\n            [11, -19],\n            [10, 12],\n            [12, 6],\n            [17, 27],\n            [19, -5],\n            [29, 0]\n        ],\n        [\n            [7082, 7268],\n            [5, -17]\n        ],\n        [\n            [7087, 7251],\n            [-16, -6],\n            [-14, -11],\n            [-32, -7],\n            [-30, -13],\n            [-16, -25],\n            [6, -25],\n            [4, -30],\n            [-14, -25],\n            [1, -22],\n            [-8, -22],\n            [-26, 2],\n            [11, -39],\n            [-18, -15],\n            [-12, -35],\n            [2, -36],\n            [-11, -16],\n            [-10, 5],\n            [-22, -8],\n            [-3, -16],\n            [-20, 0],\n            [-16, -34],\n            [-1, -50],\n            [-36, -24],\n            [-19, 5],\n            [-6, -13],\n            [-16, 7],\n            [-28, -8],\n            [-47, 30]\n        ],\n        [\n            [6690, 6820],\n            [25, 53],\n            [-2, 38],\n            [-21, 10],\n            [-2, 38],\n            [-9, 47],\n            [12, 32],\n            [-12, 9],\n            [7, 43],\n            [12, 74]\n        ],\n        [\n            [5664, 4412],\n            [3, -18],\n            [-4, -29],\n            [5, -28],\n            [-4, -22],\n            [3, -20],\n            [-58, 1],\n            [-2, -188],\n            [19, -49],\n            [18, -37]\n        ],\n        [\n            [5644, 4022],\n            [-51, -24],\n            [-67, 9],\n            [-19, 28],\n            [-113, -3],\n            [-4, -4],\n            [-17, 27],\n            [-18, 2],\n            [-16, -10],\n            [-14, -12]\n        ],\n        [\n            [5325, 4035],\n            [-2, 38],\n            [4, 51],\n            [9, 55],\n            [2, 25],\n            [9, 53],\n            [6, 24],\n            [16, 39],\n            [9, 26],\n            [3, 44],\n            [-1, 34],\n            [-9, 21],\n            [-7, 36],\n            [-7, 35],\n            [2, 12],\n            [8, 24],\n            [-8, 57],\n            [-6, 39],\n            [-14, 38],\n            [3, 11]\n        ],\n        [\n            [5342, 4697],\n            [11, 8],\n            [8, -1],\n            [10, 7],\n            [82, -1],\n            [7, -44],\n            [8, -35],\n            [6, -19],\n            [11, -31],\n            [18, 5],\n            [9, 8],\n            [16, -8],\n            [4, 14],\n            [7, 35],\n            [17, 2],\n            [2, 10],\n            [14, 1],\n            [-3, -22],\n            [34, 1],\n            [1, -37],\n            [5, -23],\n            [-4, -36],\n            [2, -36],\n            [9, -22],\n            [-1, -70],\n            [7, 5],\n            [12, -1],\n            [17, 8],\n            [13, -3]\n        ],\n        [\n            [5338, 4715],\n            [-8, 45]\n        ],\n        [\n            [5330, 4760],\n            [12, 25],\n            [8, 10],\n            [10, -20]\n        ],\n        [\n            [5360, 4775],\n            [-10, -12],\n            [-4, -16],\n            [-1, -25],\n            [-7, -7]\n        ],\n        [\n            [5571, 7530],\n            [-3, -20],\n            [4, -25],\n            [11, -15]\n        ],\n        [\n            [5583, 7470],\n            [0, -15],\n            [-9, -9],\n            [-2, -19],\n            [-13, -29]\n        ],\n        [\n            [5559, 7398],\n            [-5, 5],\n            [0, 13],\n            [-15, 19],\n            [-3, 29],\n            [2, 40],\n            [4, 18],\n            [-4, 10]\n        ],\n        [\n            [5538, 7532],\n            [-2, 18],\n            [12, 29],\n            [1, -11],\n            [8, 6]\n        ],\n        [\n            [5557, 7574],\n            [6, -16],\n            [7, -6],\n            [1, -22]\n        ],\n        [\n            [6432, 6490],\n            [5, 3],\n            [1, -16],\n            [22, 9],\n            [23, -2],\n            [17, -1],\n            [19, 39],\n            [20, 38],\n            [18, 37]\n        ],\n        [\n            [6557, 6597],\n            [5, -20]\n        ],\n        [\n            [6562, 6577],\n            [4, -47]\n        ],\n        [\n            [6566, 6530],\n            [-14, 0],\n            [-3, -39],\n            [5, -8],\n            [-12, -12],\n            [0, -24],\n            [-8, -24],\n            [-1, -24]\n        ],\n        [\n            [6533, 6399],\n            [-6, -12],\n            [-83, 29],\n            [-11, 60],\n            [-1, 14]\n        ],\n        [\n            [3140, 1814],\n            [-17, 2],\n            [-30, 0],\n            [0, 132]\n        ],\n        [\n            [3093, 1948],\n            [11, -27],\n            [14, -45],\n            [36, -35],\n            [39, -15],\n            [-13, -30],\n            [-26, -2],\n            [-14, 20]\n        ],\n        [\n            [3258, 3743],\n            [51, -96],\n            [23, -9],\n            [34, -44],\n            [29, -23],\n            [4, -26],\n            [-28, -90],\n            [28, -16],\n            [32, -9],\n            [22, 10],\n            [25, 45],\n            [4, 52]\n        ],\n        [\n            [3482, 3537],\n            [14, 11],\n            [14, -34],\n            [-1, -47],\n            [-23, -33],\n            [-19, -24],\n            [-31, -57],\n            [-37, -81]\n        ],\n        [\n            [3399, 3272],\n            [-7, -47],\n            [-7, -61],\n            [0, -58],\n            [-6, -14],\n            [-2, -38]\n        ],\n        [\n            [3377, 3054],\n            [-2, -31],\n            [35, -50],\n            [-4, -41],\n            [18, -26],\n            [-2, -29],\n            [-26, -75],\n            [-42, -32],\n            [-55, -12],\n            [-31, 6],\n            [6, -36],\n            [-6, -44],\n            [5, -30],\n            [-16, -20],\n            [-29, -8],\n            [-26, 21],\n            [-11, -15],\n            [4, -59],\n            [18, -18],\n            [16, 19],\n            [8, -31],\n            [-26, -18],\n            [-22, -37],\n            [-4, -59],\n            [-7, -32],\n            [-26, 0],\n            [-22, -31],\n            [-8, -44],\n            [28, -43],\n            [26, -12],\n            [-9, -53],\n            [-33, -33],\n            [-18, -70],\n            [-25, -23],\n            [-12, -28],\n            [9, -61],\n            [19, -34],\n            [-12, 3]\n        ],\n        [\n            [3095, 1968],\n            [-26, 9],\n            [-67, 8],\n            [-11, 34],\n            [0, 45],\n            [-18, -4],\n            [-10, 21],\n            [-3, 63],\n            [22, 26],\n            [9, 37],\n            [-4, 30],\n            [15, 51],\n            [10, 78],\n            [-3, 35],\n            [12, 11],\n            [-3, 22],\n            [-13, 12],\n            [10, 25],\n            [-13, 22],\n            [-6, 68],\n            [11, 12],\n            [-5, 72],\n            [7, 61],\n            [7, 52],\n            [17, 22],\n            [-9, 58],\n            [0, 54],\n            [21, 38],\n            [-1, 50],\n            [16, 57],\n            [0, 55],\n            [-7, 11],\n            [-13, 102],\n            [17, 60],\n            [-2, 58],\n            [10, 53],\n            [18, 56],\n            [20, 36],\n            [-9, 24],\n            [6, 19],\n            [-1, 98],\n            [30, 29],\n            [10, 62],\n            [-3, 14]\n        ],\n        [\n            [3136, 3714],\n            [23, 54],\n            [36, -15],\n            [16, -42],\n            [11, 47],\n            [32, -2],\n            [4, -13]\n        ],\n        [\n            [6210, 7485],\n            [39, 9]\n        ],\n        [\n            [6249, 7494],\n            [5, -15],\n            [11, -10],\n            [-6, -15],\n            [15, -21],\n            [-8, -18],\n            [12, -16],\n            [13, -10],\n            [0, -41]\n        ],\n        [\n            [6291, 7348],\n            [-10, -2]\n        ],\n        [\n            [6281, 7346],\n            [-11, 34],\n            [0, 10],\n            [-12, -1],\n            [-9, 16],\n            [-5, -1]\n        ],\n        [\n            [6244, 7404],\n            [-11, 17],\n            [-21, 15],\n            [3, 28],\n            [-5, 21]\n        ],\n        [\n            [3345, 329],\n            [-8, -30],\n            [-8, -27],\n            [-59, 8],\n            [-62, -3],\n            [-34, 20],\n            [0, 2],\n            [-16, 17],\n            [63, -2],\n            [60, -6],\n            [20, 24],\n            [15, 21],\n            [29, -24]\n        ],\n        [\n            [577, 361],\n            [-53, -8],\n            [-36, 21],\n            [-17, 21],\n            [-1, 3],\n            [-18, 16],\n            [17, 22],\n            [52, -9],\n            [28, -18],\n            [21, -21],\n            [7, -27]\n        ],\n        [\n            [3745, 447],\n            [35, -26],\n            [12, -36],\n            [3, -25],\n            [1, -30],\n            [-43, -19],\n            [-45, -15],\n            [-52, -14],\n            [-59, -11],\n            [-65, 3],\n            [-37, 20],\n            [5, 24],\n            [59, 16],\n            [24, 20],\n            [18, 26],\n            [12, 22],\n            [17, 20],\n            [18, 25],\n            [14, 0],\n            [41, 12],\n            [42, -12]\n        ],\n        [\n            [1633, 715],\n            [36, -9],\n            [33, 10],\n            [-16, -20],\n            [-26, -15],\n            [-39, 4],\n            [-27, 21],\n            [6, 20],\n            [33, -11]\n        ],\n        [\n            [1512, 716],\n            [43, -23],\n            [-17, 3],\n            [-36, 5],\n            [-38, 17],\n            [20, 12],\n            [28, -14]\n        ],\n        [\n            [2250, 808],\n            [31, -8],\n            [30, 7],\n            [17, -34],\n            [-22, 5],\n            [-34, -2],\n            [-34, 2],\n            [-38, -4],\n            [-28, 12],\n            [-15, 24],\n            [18, 11],\n            [35, -8],\n            [40, -5]\n        ],\n        [\n            [3098, 866],\n            [4, -27],\n            [-5, -23],\n            [-8, -22],\n            [-33, -8],\n            [-31, -12],\n            [-36, 1],\n            [14, 24],\n            [-33, -9],\n            [-31, -8],\n            [-21, 18],\n            [-2, 24],\n            [30, 23],\n            [20, 7],\n            [32, -2],\n            [8, 30],\n            [1, 22],\n            [0, 47],\n            [16, 28],\n            [25, 9],\n            [15, -22],\n            [6, -22],\n            [12, -26],\n            [10, -26],\n            [7, -26]\n        ],\n        [\n            [3371, 1268],\n            [-11, -13],\n            [-21, 9],\n            [-23, -6],\n            [-19, -14],\n            [-20, -15],\n            [-14, -17],\n            [-4, -23],\n            [2, -22],\n            [13, -20],\n            [-19, -14],\n            [-26, -4],\n            [-15, -20],\n            [-17, -19],\n            [-17, -25],\n            [-4, -22],\n            [9, -24],\n            [15, -19],\n            [23, -14],\n            [21, -18],\n            [12, -23],\n            [6, -22],\n            [8, -24],\n            [13, -19],\n            [8, -22],\n            [4, -55],\n            [8, -22],\n            [2, -23],\n            [9, -23],\n            [-4, -31],\n            [-15, -24],\n            [-17, -20],\n            [-37, -8],\n            [-12, -21],\n            [-17, -20],\n            [-42, -22],\n            [-37, -9],\n            [-35, -13],\n            [-37, -13],\n            [-22, -24],\n            [-45, -2],\n            [-49, 2],\n            [-44, -4],\n            [-47, 0],\n            [9, -24],\n            [42, -10],\n            [31, -16],\n            [18, -21],\n            [-31, -19],\n            [-48, 6],\n            [-40, -15],\n            [-2, -24],\n            [-1, -23],\n            [33, -20],\n            [6, -22],\n            [35, -22],\n            [59, -9],\n            [50, -16],\n            [40, -19],\n            [50, -18],\n            [70, -10],\n            [68, -16],\n            [47, -17],\n            [52, -20],\n            [27, -28],\n            [13, -22],\n            [34, 21],\n            [46, 17],\n            [48, 19],\n            [58, 15],\n            [49, 16],\n            [69, 1],\n            [68, -8],\n            [56, -14],\n            [18, 26],\n            [39, 17],\n            [70, 1],\n            [55, 13],\n            [52, 13],\n            [58, 8],\n            [62, 10],\n            [43, 15],\n            [-20, 21],\n            [-12, 21],\n            [0, 22],\n            [-54, -2],\n            [-57, -10],\n            [-54, 0],\n            [-8, 22],\n            [4, 44],\n            [12, 13],\n            [40, 14],\n            [47, 14],\n            [34, 17],\n            [33, 18],\n            [25, 23],\n            [38, 10],\n            [38, 8],\n            [19, 5],\n            [43, 2],\n            [41, 8],\n            [34, 12],\n            [34, 14],\n            [30, 14],\n            [39, 18],\n            [24, 20],\n            [26, 17],\n            [9, 24],\n            [-30, 13],\n            [10, 25],\n            [18, 18],\n            [29, 12],\n            [31, 14],\n            [28, 18],\n            [22, 23],\n            [13, 28],\n            [21, 16],\n            [33, -3],\n            [13, -20],\n            [34, -2],\n            [1, 22],\n            [14, 23],\n            [30, -6],\n            [7, -22],\n            [33, -3],\n            [36, 10],\n            [35, 7],\n            [31, -3],\n            [12, -25],\n            [31, 20],\n            [28, 10],\n            [31, 9],\n            [31, 8],\n            [29, 14],\n            [31, 9],\n            [24, 13],\n            [17, 20],\n            [20, -15],\n            [29, 8],\n            [20, -27],\n            [16, -21],\n            [32, 11],\n            [12, 24],\n            [28, 16],\n            [37, -4],\n            [11, -22],\n            [22, 22],\n            [30, 7],\n            [33, 3],\n            [29, -2],\n            [31, -7],\n            [30, -3],\n            [13, -20],\n            [18, -17],\n            [31, 10],\n            [32, 3],\n            [32, 0],\n            [31, 1],\n            [28, 8],\n            [29, 7],\n            [25, 16],\n            [26, 11],\n            [28, 5],\n            [21, 17],\n            [15, 32],\n            [16, 20],\n            [29, -10],\n            [11, -21],\n            [24, -13],\n            [29, 4],\n            [19, -21],\n            [21, -15],\n            [28, 14],\n            [10, 26],\n            [25, 10],\n            [29, 20],\n            [27, 8],\n            [33, 11],\n            [22, 13],\n            [22, 14],\n            [22, 13],\n            [26, -7],\n            [25, 21],\n            [18, 16],\n            [26, -1],\n            [23, 14],\n            [6, 21],\n            [23, 16],\n            [23, 11],\n            [28, 10],\n            [25, 4],\n            [25, -3],\n            [26, -6],\n            [22, -16],\n            [3, -26],\n            [24, -19],\n            [17, -17],\n            [33, -7],\n            [19, -16],\n            [23, -16],\n            [26, -3],\n            [23, 11],\n            [24, 24],\n            [26, -12],\n            [27, -7],\n            [26, -7],\n            [27, -5],\n            [28, 0],\n            [23, -61],\n            [-1, -15],\n            [-4, -27],\n            [-26, -15],\n            [-22, -22],\n            [4, -23],\n            [31, 1],\n            [-4, -23],\n            [-14, -22],\n            [-13, -24],\n            [21, -19],\n            [32, -6],\n            [32, 11],\n            [15, 23],\n            [10, 22],\n            [15, 18],\n            [17, 18],\n            [7, 21],\n            [15, 29],\n            [18, 5],\n            [31, 3],\n            [28, 7],\n            [28, 9],\n            [14, 23],\n            [8, 22],\n            [19, 22],\n            [27, 15],\n            [23, 12],\n            [16, 19],\n            [15, 11],\n            [21, 9],\n            [27, -6],\n            [25, 6],\n            [28, 7],\n            [30, -4],\n            [20, 17],\n            [14, 39],\n            [11, -16],\n            [13, -28],\n            [23, -12],\n            [27, -4],\n            [26, 7],\n            [29, -5],\n            [26, -1],\n            [17, 6],\n            [24, -4],\n            [21, -12],\n            [25, 8],\n            [30, 0],\n            [25, 8],\n            [29, -8],\n            [19, 19],\n            [14, 20],\n            [19, 16],\n            [35, 44],\n            [18, -8],\n            [21, -16],\n            [18, -21],\n            [36, -36],\n            [27, -1],\n            [25, 0],\n            [30, 7],\n            [30, 8],\n            [23, 16],\n            [19, 18],\n            [31, 2],\n            [21, 13],\n            [22, -12],\n            [14, -18],\n            [19, -19],\n            [31, 2],\n            [19, -15],\n            [33, -15],\n            [35, -5],\n            [29, 4],\n            [21, 19],\n            [19, 18],\n            [25, 5],\n            [25, -8],\n            [29, -6],\n            [26, 9],\n            [25, 0],\n            [24, -6],\n            [26, -5],\n            [25, 10],\n            [30, 9],\n            [28, 3],\n            [32, 0],\n            [25, 5],\n            [25, 5],\n            [8, 29],\n            [1, 24],\n            [17, -16],\n            [5, -27],\n            [10, -24],\n            [11, -20],\n            [23, -10],\n            [32, 4],\n            [36, 1],\n            [25, 3],\n            [37, 0],\n            [26, 1],\n            [36, -2],\n            [31, -5],\n            [20, -18],\n            [-5, -22],\n            [18, -18],\n            [30, -13],\n            [31, -15],\n            [35, -11],\n            [38, -9],\n            [28, -9],\n            [32, -2],\n            [18, 20],\n            [24, -16],\n            [21, -19],\n            [25, -13],\n            [34, -6],\n            [32, -7],\n            [13, -23],\n            [32, -14],\n            [21, -21],\n            [31, -9],\n            [32, 1],\n            [30, -4],\n            [33, 1],\n            [34, -4],\n            [31, -8],\n            [28, -14],\n            [29, -12],\n            [20, -17],\n            [-3, -23],\n            [-15, -21],\n            [-13, -27],\n            [-9, -21],\n            [-14, -24],\n            [-36, -9],\n            [-16, -21],\n            [-36, -13],\n            [-13, -23],\n            [-19, -22],\n            [-20, -18],\n            [-11, -25],\n            [-7, -22],\n            [-3, -26],\n            [0, -22],\n            [16, -23],\n            [6, -22],\n            [13, -21],\n            [52, -8],\n            [11, -26],\n            [-50, -9],\n            [-43, -13],\n            [-52, -2],\n            [-24, -34],\n            [-5, -27],\n            [-12, -22],\n            [-14, -22],\n            [37, -20],\n            [14, -24],\n            [24, -22],\n            [33, -20],\n            [39, -19],\n            [42, -18],\n            [64, -19],\n            [14, -29],\n            [80, -12],\n            [5, -5],\n            [21, -17],\n            [77, 15],\n            [63, -19],\n            [48, -14],\n            [-9997, -1],\n            [24, 35],\n            [50, -19],\n            [3, 2],\n            [30, 19],\n            [4, 0],\n            [3, -1],\n            [40, -25],\n            [35, 25],\n            [7, 3],\n            [81, 11],\n            [27, -14],\n            [13, -7],\n            [41, -20],\n            [79, -15],\n            [63, -18],\n            [107, -14],\n            [80, 16],\n            [118, -11],\n            [67, -19],\n            [73, 17],\n            [78, 17],\n            [6, 27],\n            [-110, 3],\n            [-89, 14],\n            [-24, 23],\n            [-74, 12],\n            [5, 27],\n            [10, 24],\n            [10, 22],\n            [-5, 25],\n            [-46, 16],\n            [-22, 21],\n            [-43, 18],\n            [68, -3],\n            [64, 9],\n            [40, -20],\n            [50, 18],\n            [45, 22],\n            [23, 19],\n            [-10, 25],\n            [-36, 16],\n            [-41, 17],\n            [-57, 4],\n            [-50, 8],\n            [-54, 6],\n            [-18, 22],\n            [-36, 18],\n            [-21, 21],\n            [-9, 67],\n            [14, -6],\n            [25, -18],\n            [45, 6],\n            [44, 8],\n            [23, -26],\n            [44, 6],\n            [37, 13],\n            [35, 16],\n            [32, 20],\n            [41, 5],\n            [-1, 22],\n            [-9, 22],\n            [8, 21],\n            [36, 11],\n            [16, -20],\n            [42, 12],\n            [32, 15],\n            [40, 1],\n            [38, 6],\n            [37, 13],\n            [30, 13],\n            [34, 13],\n            [22, -4],\n            [19, -4],\n            [41, 8],\n            [37, -10],\n            [38, 1],\n            [37, 8],\n            [37, -6],\n            [41, -6],\n            [39, 3],\n            [40, -2],\n            [42, -1],\n            [38, 3],\n            [28, 17],\n            [34, 9],\n            [35, -13],\n            [33, 11],\n            [30, 21],\n            [18, -19],\n            [9, -21],\n            [18, -19],\n            [29, 17],\n            [33, -22],\n            [38, -7],\n            [32, -16],\n            [39, 3],\n            [36, 11],\n            [41, -3],\n            [38, -8],\n            [38, -10],\n            [15, 25],\n            [-18, 20],\n            [-14, 21],\n            [-36, 5],\n            [-15, 22],\n            [-6, 22],\n            [-10, 43],\n            [21, -8],\n            [36, -3],\n            [36, 3],\n            [33, -9],\n            [28, -17],\n            [12, -21],\n            [38, -4],\n            [36, 9],\n            [38, 11],\n            [34, 7],\n            [28, -14],\n            [37, 5],\n            [24, 45],\n            [23, -27],\n            [32, -10],\n            [34, 6],\n            [23, -23],\n            [37, -3],\n            [33, -7],\n            [34, -12],\n            [21, 22],\n            [11, 20],\n            [28, -23],\n            [38, 6],\n            [28, -13],\n            [19, -19],\n            [37, 5],\n            [29, 13],\n            [29, 15],\n            [33, 8],\n            [39, 7],\n            [36, 8],\n            [27, 13],\n            [16, 19],\n            [7, 25],\n            [-3, 24],\n            [-9, 24],\n            [-10, 23],\n            [-9, 23],\n            [-7, 21],\n            [-1, 23],\n            [2, 23],\n            [13, 22],\n            [11, 24],\n            [5, 23],\n            [-6, 26],\n            [-3, 23],\n            [14, 27],\n            [15, 17],\n            [18, 22],\n            [19, 19],\n            [22, 17],\n            [11, 25],\n            [15, 17],\n            [18, 15],\n            [26, 3],\n            [18, 19],\n            [19, 11],\n            [23, 7],\n            [20, 15],\n            [16, 19],\n            [22, 7],\n            [16, -15],\n            [-10, -20],\n            [-29, -17]\n        ],\n        [\n            [6914, 2185],\n            [18, -19],\n            [26, -7],\n            [1, -11],\n            [-7, -27],\n            [-43, -4],\n            [-1, 31],\n            [4, 25],\n            [2, 12]\n        ],\n        [\n            [9038, 2648],\n            [27, -21],\n            [15, 8],\n            [22, 12],\n            [16, -4],\n            [2, -70],\n            [-9, -21],\n            [-3, -47],\n            [-10, 16],\n            [-19, -41],\n            [-6, 3],\n            [-17, 2],\n            [-17, 50],\n            [-4, 39],\n            [-16, 52],\n            [1, 27],\n            [18, -5]\n        ],\n        [\n            [8987, 4244],\n            [10, -46],\n            [18, 22],\n            [9, -25],\n            [13, -23],\n            [-3, -26],\n            [6, -51],\n            [5, -29],\n            [7, -7],\n            [7, -51],\n            [-3, -30],\n            [9, -40],\n            [31, -31],\n            [19, -28],\n            [19, -26],\n            [-4, -14],\n            [16, -37],\n            [11, -64],\n            [11, 13],\n            [11, -26],\n            [7, 9],\n            [5, -63],\n            [19, -36],\n            [13, -22],\n            [22, -48],\n            [8, -48],\n            [1, -33],\n            [-2, -37],\n            [13, -50],\n            [-2, -52],\n            [-5, -28],\n            [-7, -52],\n            [1, -34],\n            [-6, -43],\n            [-12, -53],\n            [-21, -29],\n            [-10, -46],\n            [-9, -29],\n            [-8, -51],\n            [-11, -30],\n            [-7, -44],\n            [-4, -41],\n            [2, -18],\n            [-16, -21],\n            [-31, -2],\n            [-26, -24],\n            [-13, -23],\n            [-17, -26],\n            [-23, 27],\n            [-17, 10],\n            [5, 31],\n            [-15, -11],\n            [-25, -43],\n            [-24, 16],\n            [-15, 9],\n            [-16, 4],\n            [-27, 17],\n            [-18, 37],\n            [-5, 45],\n            [-7, 30],\n            [-13, 24],\n            [-27, 7],\n            [9, 28],\n            [-7, 44],\n            [-13, -41],\n            [-25, -11],\n            [14, 33],\n            [5, 34],\n            [10, 29],\n            [-2, 44],\n            [-22, -50],\n            [-18, -21],\n            [-10, -47],\n            [-22, 25],\n            [1, 31],\n            [-18, 43],\n            [-14, 22],\n            [5, 14],\n            [-36, 35],\n            [-19, 2],\n            [-27, 29],\n            [-50, -6],\n            [-36, -21],\n            [-31, -20],\n            [-27, 4],\n            [-29, -30],\n            [-24, -14],\n            [-6, -31],\n            [-10, -24],\n            [-23, -1],\n            [-18, -5],\n            [-24, 10],\n            [-20, -6],\n            [-19, -3],\n            [-17, -31],\n            [-8, 2],\n            [-14, -16],\n            [-13, -19],\n            [-21, 2],\n            [-18, 0],\n            [-30, 38],\n            [-15, 11],\n            [1, 34],\n            [14, 8],\n            [4, 14],\n            [-1, 21],\n            [4, 41],\n            [-3, 35],\n            [-15, 60],\n            [-4, 33],\n            [1, 34],\n            [-11, 38],\n            [-1, 18],\n            [-12, 23],\n            [-4, 47],\n            [-16, 46],\n            [-4, 26],\n            [13, -26],\n            [-10, 55],\n            [14, -17],\n            [8, -23],\n            [0, 30],\n            [-14, 47],\n            [-3, 18],\n            [-6, 18],\n            [3, 34],\n            [6, 15],\n            [4, 29],\n            [-3, 35],\n            [11, 42],\n            [2, -45],\n            [12, 41],\n            [22, 20],\n            [14, 25],\n            [21, 22],\n            [13, 4],\n            [7, -7],\n            [22, 22],\n            [17, 6],\n            [4, 13],\n            [8, 6],\n            [15, -2],\n            [29, 18],\n            [15, 26],\n            [7, 31],\n            [17, 30],\n            [1, 24],\n            [1, 32],\n            [19, 50],\n            [12, -51],\n            [12, 12],\n            [-10, 28],\n            [9, 29],\n            [12, -13],\n            [3, 45],\n            [15, 29],\n            [7, 23],\n            [14, 10],\n            [0, 17],\n            [13, -7],\n            [0, 15],\n            [12, 8],\n            [14, 8],\n            [20, -27],\n            [16, -35],\n            [17, 0],\n            [18, -6],\n            [-6, 33],\n            [13, 47],\n            [13, 15],\n            [-5, 15],\n            [12, 34],\n            [17, 21],\n            [14, -7],\n            [24, 11],\n            [-1, 30],\n            [-20, 19],\n            [15, 9],\n            [18, -15],\n            [15, -24],\n            [23, -15],\n            [8, 6],\n            [17, -18],\n            [17, 17],\n            [10, -5],\n            [7, 11],\n            [12, -29],\n            [-7, -32],\n            [-11, -24],\n            [-9, -2],\n            [3, -23],\n            [-8, -30],\n            [-10, -29],\n            [2, -17],\n            [22, -32],\n            [21, -19],\n            [15, -20],\n            [20, -35],\n            [8, 0],\n            [14, -15],\n            [4, -19],\n            [27, -20],\n            [18, 20],\n            [6, 32],\n            [5, 26],\n            [4, 33],\n            [8, 47],\n            [-4, 28],\n            [2, 17],\n            [-3, 34],\n            [4, 45],\n            [5, 12],\n            [-4, 20],\n            [7, 31],\n            [5, 32],\n            [1, 17],\n            [10, 22],\n            [8, -29],\n            [2, -37],\n            [7, -7],\n            [1, -25],\n            [10, -30],\n            [2, -33],\n            [-1, -22]\n        ],\n        [\n            [5471, 7900],\n            [-2, -24],\n            [-16, 0],\n            [6, -13],\n            [-9, -38]\n        ],\n        [\n            [5450, 7825],\n            [-6, -10],\n            [-24, -1],\n            [-14, -13],\n            [-23, 4]\n        ],\n        [\n            [5383, 7805],\n            [-40, 15],\n            [-6, 21],\n            [-27, -10],\n            [-4, -12],\n            [-16, 9]\n        ],\n        [\n            [5290, 7828],\n            [-15, 1],\n            [-12, 11],\n            [4, 15],\n            [-1, 10]\n        ],\n        [\n            [5266, 7865],\n            [8, 3],\n            [14, -16],\n            [4, 16],\n            [25, -3],\n            [20, 11],\n            [13, -2],\n            [9, -12],\n            [2, 10],\n            [-4, 38],\n            [10, 8],\n            [10, 27]\n        ],\n        [\n            [5377, 7945],\n            [21, -19],\n            [15, 24],\n            [10, 5],\n            [22, -18],\n            [13, 3],\n            [13, -12]\n        ],\n        [\n            [5471, 7928],\n            [-3, -7],\n            [3, -21]\n        ],\n        [\n            [6281, 7346],\n            [-19, 8],\n            [-14, 27],\n            [-4, 23]\n        ],\n        [\n            [6349, 7527],\n            [15, -31],\n            [14, -42],\n            [13, -2],\n            [8, -16],\n            [-23, -5],\n            [-5, -46],\n            [-4, -21],\n            [-11, -13],\n            [1, -30]\n        ],\n        [\n            [6357, 7321],\n            [-7, -3],\n            [-17, 31],\n            [10, 30],\n            [-9, 17],\n            [-10, -4],\n            [-33, -44]\n        ],\n        [\n            [6249, 7494],\n            [6, 10],\n            [21, -17],\n            [15, -4],\n            [4, 7],\n            [-14, 32],\n            [7, 9]\n        ],\n        [\n            [6288, 7531],\n            [8, -2],\n            [19, -36],\n            [13, -4],\n            [4, 15],\n            [17, 23]\n        ],\n        [\n            [5814, 4792],\n            [-1, 71],\n            [-7, 27]\n        ],\n        [\n            [5806, 4890],\n            [17, -5],\n            [8, 34],\n            [15, -4]\n        ],\n        [\n            [5846, 4915],\n            [1, -23],\n            [6, -14],\n            [1, -19],\n            [-7, -12],\n            [-11, -31],\n            [-10, -22],\n            [-12, -2]\n        ],\n        [\n            [5092, 8091],\n            [20, -5],\n            [26, 12],\n            [17, -25],\n            [16, -14]\n        ],\n        [\n            [5171, 8059],\n            [-4, -40]\n        ],\n        [\n            [5167, 8019],\n            [-7, -2],\n            [-3, -33]\n        ],\n        [\n            [5157, 7984],\n            [-24, 26],\n            [-14, -4],\n            [-20, 28],\n            [-13, 23],\n            [-13, 1],\n            [-4, 21]\n        ],\n        [\n            [5069, 8079],\n            [23, 12]\n        ],\n        [\n            [5074, 5427],\n            [-23, -7]\n        ],\n        [\n            [5051, 5420],\n            [-7, 41],\n            [2, 136],\n            [-6, 12],\n            [-1, 29],\n            [-10, 21],\n            [-8, 17],\n            [3, 31]\n        ],\n        [\n            [5024, 5707],\n            [10, 7],\n            [6, 26],\n            [13, 5],\n            [6, 18]\n        ],\n        [\n            [5059, 5763],\n            [10, 17],\n            [10, 0],\n            [21, -34]\n        ],\n        [\n            [5100, 5746],\n            [-1, -19],\n            [6, -35],\n            [-6, -24],\n            [3, -16],\n            [-13, -37],\n            [-9, -18],\n            [-5, -37],\n            [1, -38],\n            [-2, -95]\n        ],\n        [\n            [4921, 5627],\n            [-19, 15],\n            [-13, -2],\n            [-10, -15],\n            [-12, 13],\n            [-5, 19],\n            [-13, 13]\n        ],\n        [\n            [4849, 5670],\n            [-1, 34],\n            [7, 26],\n            [-1, 20],\n            [23, 48],\n            [4, 41],\n            [7, 14],\n            [14, -8],\n            [11, 12],\n            [4, 16],\n            [22, 26],\n            [5, 19],\n            [26, 24],\n            [15, 9],\n            [7, -12],\n            [18, 0]\n        ],\n        [\n            [5010, 5939],\n            [-2, -28],\n            [3, -27],\n            [16, -39],\n            [1, -28],\n            [32, -14],\n            [-1, -40]\n        ],\n        [\n            [5024, 5707],\n            [-24, 1]\n        ],\n        [\n            [5000, 5708],\n            [-13, 5],\n            [-9, -9],\n            [-12, 4],\n            [-48, -3],\n            [-1, -33],\n            [4, -45]\n        ],\n        [\n            [7573, 6360],\n            [0, -43],\n            [-10, 9],\n            [2, -47]\n        ],\n        [\n            [7565, 6279],\n            [-8, 30],\n            [-1, 31],\n            [-6, 28],\n            [-11, 34],\n            [-26, 3],\n            [3, -25],\n            [-9, -32],\n            [-12, 12],\n            [-4, -11],\n            [-8, 6],\n            [-11, 5]\n        ],\n        [\n            [7472, 6360],\n            [-4, 49],\n            [-10, 45],\n            [5, 35],\n            [-17, 16],\n            [6, 22],\n            [18, 22],\n            [-20, 31],\n            [9, 40],\n            [22, -26],\n            [14, -3],\n            [2, -41],\n            [26, -8],\n            [26, 1],\n            [16, -10],\n            [-13, -50],\n            [-12, -3],\n            [-9, -34],\n            [16, -31],\n            [4, 38],\n            [8, 0],\n            [14, -93]\n        ],\n        [\n            [5629, 7671],\n            [8, -25],\n            [11, 5],\n            [21, -9],\n            [41, -4],\n            [13, 16],\n            [33, 13],\n            [20, -21],\n            [17, -6]\n        ],\n        [\n            [5793, 7640],\n            [-15, -25],\n            [-10, -42],\n            [9, -34]\n        ],\n        [\n            [5777, 7539],\n            [-24, 8],\n            [-28, -18]\n        ],\n        [\n            [5725, 7529],\n            [0, -30],\n            [-26, -5],\n            [-19, 20],\n            [-22, -16],\n            [-21, 2]\n        ],\n        [\n            [5637, 7500],\n            [-2, 39],\n            [-14, 19]\n        ],\n        [\n            [5621, 7558],\n            [5, 8],\n            [-3, 7],\n            [4, 19],\n            [11, 18],\n            [-14, 26],\n            [-2, 21],\n            [7, 14]\n        ],\n        [\n            [2846, 6461],\n            [-7, -3],\n            [-7, 34],\n            [-10, 17],\n            [6, 38],\n            [8, -3],\n            [10, -49],\n            [0, -34]\n        ],\n        [\n            [2838, 6628],\n            [-30, -10],\n            [-2, 22],\n            [13, 5],\n            [18, -2],\n            [1, -15]\n        ],\n        [\n            [2861, 6628],\n            [-5, -42],\n            [-5, 8],\n            [0, 31],\n            [-12, 23],\n            [0, 7],\n            [22, -27]\n        ],\n        [\n            [5527, 7708],\n            [10, 0],\n            [-7, -26],\n            [14, -23],\n            [-4, -28],\n            [-7, -2]\n        ],\n        [\n            [5533, 7629],\n            [-5, -6],\n            [-9, -13],\n            [-4, -33]\n        ],\n        [\n            [5515, 7577],\n            [-25, 23],\n            [-10, 24],\n            [-11, 13],\n            [-12, 22],\n            [-6, 19],\n            [-14, 27],\n            [6, 25],\n            [10, -14],\n            [6, 12],\n            [13, 2],\n            [24, -10],\n            [19, 1],\n            [12, -13]\n        ],\n        [\n            [5652, 8242],\n            [27, 0],\n            [30, 22],\n            [6, 34],\n            [23, 19],\n            [-3, 26]\n        ],\n        [\n            [5735, 8343],\n            [17, 10],\n            [30, 23]\n        ],\n        [\n            [5782, 8376],\n            [29, -15],\n            [4, -15],\n            [15, 7],\n            [27, -14],\n            [3, -27],\n            [-6, -16],\n            [17, -39],\n            [12, -11],\n            [-2, -11],\n            [19, -10],\n            [8, -16],\n            [-11, -13],\n            [-23, 2],\n            [-5, -5],\n            [7, -20],\n            [6, -37]\n        ],\n        [\n            [5882, 8136],\n            [-23, -4],\n            [-9, -13],\n            [-2, -30],\n            [-11, 6],\n            [-25, -3],\n            [-7, 14],\n            [-11, -10],\n            [-10, 8],\n            [-22, 1],\n            [-31, 15],\n            [-28, 4],\n            [-22, -1],\n            [-15, -16],\n            [-13, -2]\n        ],\n        [\n            [5653, 8105],\n            [-1, 26],\n            [-8, 27],\n            [17, 12],\n            [0, 24],\n            [-8, 22],\n            [-1, 26]\n        ],\n        [\n            [2524, 6110],\n            [-1, 8],\n            [4, 3],\n            [5, -7],\n            [10, 36],\n            [5, 0]\n        ],\n        [\n            [2547, 6150],\n            [0, -8],\n            [5, -1],\n            [0, -16],\n            [-5, -25],\n            [3, -9],\n            [-3, -21],\n            [2, -6],\n            [-4, -30],\n            [-5, -16],\n            [-5, -1],\n            [-6, -21]\n        ],\n        [\n            [2529, 5996],\n            [-8, 0],\n            [2, 67],\n            [1, 47]\n        ],\n        [\n            [3136, 3714],\n            [-20, -8],\n            [-11, 82],\n            [-15, 66],\n            [9, 57],\n            [-15, 25],\n            [-4, 43],\n            [-13, 40]\n        ],\n        [\n            [3067, 4019],\n            [17, 64],\n            [-12, 49],\n            [7, 20],\n            [-5, 22],\n            [10, 30],\n            [1, 50],\n            [1, 41],\n            [6, 20],\n            [-24, 96]\n        ],\n        [\n            [3068, 4411],\n            [21, -5],\n            [14, 1],\n            [6, 18],\n            [25, 24],\n            [14, 22],\n            [37, 10],\n            [-3, -44],\n            [3, -23],\n            [-2, -40],\n            [30, -53],\n            [31, -9],\n            [11, -23],\n            [19, -11],\n            [11, -17],\n            [18, 0],\n            [16, -17],\n            [1, -34],\n            [6, -18],\n            [0, -25],\n            [-8, -1],\n            [11, -69],\n            [53, -2],\n            [-4, -35],\n            [3, -23],\n            [15, -16],\n            [6, -37],\n            [-4, -47],\n            [-8, -26],\n            [3, -33],\n            [-9, -12]\n        ],\n        [\n            [3384, 3866],\n            [-1, 18],\n            [-25, 30],\n            [-26, 1],\n            [-49, -17],\n            [-13, -52],\n            [-1, -32],\n            [-11, -71]\n        ],\n        [\n            [3482, 3537],\n            [6, 34],\n            [3, 35],\n            [1, 32],\n            [-10, 11],\n            [-11, -9],\n            [-10, 2],\n            [-4, 23],\n            [-2, 54],\n            [-5, 18],\n            [-19, 16],\n            [-11, -12],\n            [-30, 11],\n            [2, 81],\n            [-8, 33]\n        ],\n        [\n            [3068, 4411],\n            [-15, -11],\n            [-13, 7],\n            [2, 90],\n            [-23, -35],\n            [-24, 2],\n            [-11, 31],\n            [-18, 4],\n            [5, 25],\n            [-15, 36],\n            [-11, 53],\n            [7, 11],\n            [0, 25],\n            [17, 17],\n            [-3, 32],\n            [7, 20],\n            [2, 28],\n            [32, 40],\n            [22, 11],\n            [4, 9],\n            [25, -2]\n        ],\n        [\n            [3058, 4804],\n            [13, 162],\n            [0, 25],\n            [-4, 34],\n            [-12, 22],\n            [0, 42],\n            [15, 10],\n            [6, -6],\n            [1, 23],\n            [-16, 6],\n            [-1, 37],\n            [54, -2],\n            [10, 21],\n            [7, -19],\n            [6, -35],\n            [5, 8]\n        ],\n        [\n            [3142, 5132],\n            [15, -32],\n            [22, 4],\n            [5, 18],\n            [21, 14],\n            [11, 10],\n            [4, 25],\n            [19, 17],\n            [-1, 12],\n            [-24, 5],\n            [-3, 37],\n            [1, 40],\n            [-13, 15],\n            [5, 6],\n            [21, -8],\n            [22, -15],\n            [8, 14],\n            [20, 9],\n            [31, 23],\n            [10, 22],\n            [-3, 17]\n        ],\n        [\n            [3313, 5365],\n            [14, 2],\n            [7, -13],\n            [-4, -26],\n            [9, -9],\n            [7, -28],\n            [-8, -20],\n            [-4, -51],\n            [7, -30],\n            [2, -27],\n            [17, -28],\n            [14, -3],\n            [3, 12],\n            [8, 3],\n            [13, 10],\n            [9, 16],\n            [15, -5],\n            [7, 2]\n        ],\n        [\n            [3429, 5170],\n            [15, -5],\n            [3, 12],\n            [-5, 12],\n            [3, 17],\n            [11, -5],\n            [13, 6],\n            [16, -13]\n        ],\n        [\n            [3485, 5194],\n            [12, -12],\n            [9, 16],\n            [6, -3],\n            [4, -16],\n            [13, 4],\n            [11, 22],\n            [8, 44],\n            [17, 54]\n        ],\n        [\n            [3565, 5303],\n            [9, 3],\n            [7, -33],\n            [16, -103],\n            [14, -10],\n            [1, -41],\n            [-21, -48],\n            [9, -18],\n            [49, -9],\n            [1, -60],\n            [21, 39],\n            [35, -21],\n            [46, -36],\n            [14, -35],\n            [-5, -32],\n            [33, 18],\n            [54, -32],\n            [41, 3],\n            [41, -49],\n            [36, -66],\n            [21, -17],\n            [24, -3],\n            [10, -18],\n            [9, -76],\n            [5, -35],\n            [-11, -98],\n            [-14, -39],\n            [-39, -82],\n            [-18, -67],\n            [-21, -51],\n            [-7, -1],\n            [-7, -43],\n            [2, -111],\n            [-8, -91],\n            [-3, -39],\n            [-9, -23],\n            [-5, -79],\n            [-28, -77],\n            [-5, -61],\n            [-22, -26],\n            [-7, -35],\n            [-30, 0],\n            [-44, -23],\n            [-19, -26],\n            [-31, -18],\n            [-33, -47],\n            [-23, -58],\n            [-5, -44],\n            [5, -33],\n            [-5, -60],\n            [-6, -28],\n            [-20, -33],\n            [-31, -104],\n            [-24, -47],\n            [-19, -27],\n            [-13, -57],\n            [-18, -33]\n        ],\n        [\n            [3517, 3063],\n            [-8, 33],\n            [13, 28],\n            [-16, 40],\n            [-22, 33],\n            [-29, 38],\n            [-10, -2],\n            [-28, 46],\n            [-18, -7]\n        ],\n        [\n            [8172, 5325],\n            [11, 22],\n            [23, 32]\n        ],\n        [\n            [8206, 5379],\n            [-1, -29],\n            [-2, -37],\n            [-13, 1],\n            [-6, -20],\n            [-12, 31]\n        ],\n        [\n            [7546, 6698],\n            [12, -19],\n            [-2, -36],\n            [-23, -2],\n            [-23, 4],\n            [-18, -9],\n            [-25, 22],\n            [-1, 12]\n        ],\n        [\n            [7466, 6670],\n            [19, 44],\n            [15, 15],\n            [20, -14],\n            [14, -1],\n            [12, -16]\n        ],\n        [\n            [5817, 3752],\n            [-39, -43],\n            [-25, -44],\n            [-10, -40],\n            [-8, -22],\n            [-15, -4],\n            [-5, -29],\n            [-3, -18],\n            [-17, -14],\n            [-23, 3],\n            [-13, 17],\n            [-12, 7],\n            [-14, -14],\n            [-6, -28],\n            [-14, -18],\n            [-13, -26],\n            [-20, -6],\n            [-6, 20],\n            [2, 36],\n            [-16, 56],\n            [-8, 9]\n        ],\n        [\n            [5552, 3594],\n            [0, 173],\n            [27, 2],\n            [1, 210],\n            [21, 2],\n            [43, 21],\n            [10, -24],\n            [18, 23],\n            [9, 0],\n            [15, 13]\n        ],\n        [\n            [5696, 4014],\n            [5, -4]\n        ],\n        [\n            [5701, 4010],\n            [11, -48],\n            [5, -10],\n            [9, -34],\n            [32, -65],\n            [12, -7],\n            [0, -20],\n            [8, -38],\n            [21, -9],\n            [18, -27]\n        ],\n        [\n            [5424, 5496],\n            [23, 4],\n            [5, 16],\n            [5, -2],\n            [7, -13],\n            [34, 23],\n            [12, 23],\n            [15, 20],\n            [-3, 21],\n            [8, 6],\n            [27, -4],\n            [26, 27],\n            [20, 65],\n            [14, 24],\n            [18, 10]\n        ],\n        [\n            [5635, 5716],\n            [3, -26],\n            [16, -36],\n            [0, -25],\n            [-5, -24],\n            [2, -18],\n            [10, -18]\n        ],\n        [\n            [5661, 5569],\n            [21, -25]\n        ],\n        [\n            [5682, 5544],\n            [15, -24],\n            [0, -19],\n            [19, -31],\n            [12, -26],\n            [7, -35],\n            [20, -24],\n            [5, -18]\n        ],\n        [\n            [5760, 5367],\n            [-9, -7],\n            [-18, 2],\n            [-21, 6],\n            [-10, -5],\n            [-5, -14],\n            [-9, -2],\n            [-10, 12],\n            [-31, -29],\n            [-13, 6],\n            [-4, -5],\n            [-8, -35],\n            [-21, 11],\n            [-20, 6],\n            [-18, 22],\n            [-23, 20],\n            [-15, -19],\n            [-10, -30],\n            [-3, -41]\n        ],\n        [\n            [5512, 5265],\n            [-18, 3],\n            [-19, 10],\n            [-16, -32],\n            [-15, -55]\n        ],\n        [\n            [5444, 5191],\n            [-3, 18],\n            [-1, 27],\n            [-13, 19],\n            [-10, 30],\n            [-2, 21],\n            [-13, 31],\n            [2, 18],\n            [-3, 25],\n            [2, 45],\n            [7, 11],\n            [14, 60]\n        ],\n        [\n            [3231, 7808],\n            [20, -8],\n            [26, 1],\n            [-14, -24],\n            [-10, -4],\n            [-35, 25],\n            [-7, 20],\n            [10, 18],\n            [10, -28]\n        ],\n        [\n            [3283, 7958],\n            [-14, -1],\n            [-36, 19],\n            [-26, 28],\n            [10, 5],\n            [37, -15],\n            [28, -25],\n            [1, -11]\n        ],\n        [\n            [1569, 7923],\n            [-14, -8],\n            [-46, 27],\n            [-8, 21],\n            [-25, 21],\n            [-5, 16],\n            [-28, 11],\n            [-11, 32],\n            [2, 14],\n            [30, -13],\n            [17, -9],\n            [26, -6],\n            [9, -21],\n            [14, -28],\n            [28, -24],\n            [11, -33]\n        ],\n        [\n            [3440, 8052],\n            [-18, -52],\n            [18, 20],\n            [19, -12],\n            [-10, -21],\n            [25, -16],\n            [12, 14],\n            [28, -18],\n            [-8, -43],\n            [19, 10],\n            [4, -32],\n            [8, -36],\n            [-11, -52],\n            [-13, -2],\n            [-18, 11],\n            [6, 48],\n            [-8, 8],\n            [-32, -52],\n            [-17, 2],\n            [20, 28],\n            [-27, 14],\n            [-30, -3],\n            [-54, 2],\n            [-4, 17],\n            [17, 21],\n            [-12, 16],\n            [24, 36],\n            [28, 94],\n            [18, 33],\n            [24, 21],\n            [13, -3],\n            [-6, -16],\n            [-15, -37]\n        ],\n        [\n            [1313, 8250],\n            [27, 5],\n            [-8, -67],\n            [24, -48],\n            [-11, 0],\n            [-17, 27],\n            [-10, 27],\n            [-14, 19],\n            [-5, 26],\n            [1, 19],\n            [13, -8]\n        ],\n        [\n            [2798, 8730],\n            [-11, -31],\n            [-12, 5],\n            [-8, 17],\n            [2, 4],\n            [10, 18],\n            [12, -1],\n            [7, -12]\n        ],\n        [\n            [2725, 8762],\n            [-33, -32],\n            [-19, 1],\n            [-6, 16],\n            [20, 27],\n            [38, 0],\n            [0, -12]\n        ],\n        [\n            [2634, 8936],\n            [5, -26],\n            [15, 9],\n            [16, -15],\n            [30, -20],\n            [32, -19],\n            [2, -28],\n            [21, 5],\n            [20, -20],\n            [-25, -18],\n            [-43, 14],\n            [-16, 26],\n            [-27, -31],\n            [-40, -31],\n            [-9, 35],\n            [-38, -6],\n            [24, 30],\n            [4, 46],\n            [9, 54],\n            [20, -5]\n        ],\n        [\n            [2892, 9024],\n            [-31, -3],\n            [-7, 29],\n            [12, 34],\n            [26, 8],\n            [21, -17],\n            [1, -25],\n            [-4, -8],\n            [-18, -18]\n        ],\n        [\n            [2343, 9140],\n            [-17, -21],\n            [-38, 18],\n            [-22, -6],\n            [-38, 26],\n            [24, 19],\n            [19, 25],\n            [30, -16],\n            [17, -11],\n            [8, -11],\n            [17, -23]\n        ],\n        [\n            [3135, 7724],\n            [-18, 33],\n            [0, 81],\n            [-13, 17],\n            [-18, -10],\n            [-10, 16],\n            [-21, -45],\n            [-8, -46],\n            [-10, -27],\n            [-12, -9],\n            [-9, -3],\n            [-3, -15],\n            [-51, 0],\n            [-42, 0],\n            [-12, -11],\n            [-30, -42],\n            [-3, -5],\n            [-9, -23],\n            [-26, 0],\n            [-27, 0],\n            [-12, -10],\n            [4, -11],\n            [2, -18],\n            [0, -6],\n            [-36, -30],\n            [-29, -9],\n            [-32, -31],\n            [-7, 0],\n            [-10, 9],\n            [-3, 8],\n            [1, 6],\n            [6, 21],\n            [13, 33],\n            [8, 35],\n            [-5, 51],\n            [-6, 53],\n            [-29, 28],\n            [3, 11],\n            [-4, 7],\n            [-8, 0],\n            [-5, 9],\n            [-2, 14],\n            [-5, -6],\n            [-7, 2],\n            [1, 6],\n            [-6, 6],\n            [-3, 15],\n            [-21, 19],\n            [-23, 20],\n            [-27, 23],\n            [-26, 21],\n            [-25, -17],\n            [-9, 0],\n            [-34, 15],\n            [-23, -8],\n            [-27, 19],\n            [-28, 9],\n            [-19, 4],\n            [-9, 10],\n            [-5, 32],\n            [-9, 0],\n            [-1, -23],\n            [-57, 0],\n            [-95, 0],\n            [-94, 0],\n            [-84, 0],\n            [-83, 0],\n            [-82, 0],\n            [-85, 0],\n            [-27, 0],\n            [-82, 0],\n            [-79, 0]\n        ],\n        [\n            [1588, 7952],\n            [-4, 0],\n            [-54, 58],\n            [-20, 26],\n            [-50, 24],\n            [-15, 53],\n            [3, 36],\n            [-35, 25],\n            [-5, 48],\n            [-34, 43],\n            [0, 30]\n        ],\n        [\n            [1374, 8295],\n            [15, 29],\n            [0, 37],\n            [-48, 37],\n            [-28, 68],\n            [-17, 42],\n            [-26, 27],\n            [-19, 24],\n            [-14, 31],\n            [-28, -20],\n            [-27, -33],\n            [-25, 39],\n            [-19, 26],\n            [-27, 16],\n            [-28, 2],\n            [0, 337],\n            [1, 219]\n        ],\n        [\n            [1084, 9176],\n            [51, -14],\n            [44, -29],\n            [29, -5],\n            [24, 24],\n            [34, 19],\n            [41, -7],\n            [42, 26],\n            [45, 14],\n            [20, -24],\n            [20, 14],\n            [6, 27],\n            [20, -6],\n            [47, -53],\n            [37, 40],\n            [3, -45],\n            [34, 10],\n            [11, 17],\n            [34, -3],\n            [42, -25],\n            [65, -22],\n            [38, -10],\n            [28, 4],\n            [37, -30],\n            [-39, -29],\n            [50, -13],\n            [75, 7],\n            [24, 11],\n            [29, -36],\n            [31, 30],\n            [-29, 25],\n            [18, 20],\n            [34, 3],\n            [22, 6],\n            [23, -14],\n            [28, -32],\n            [31, 5],\n            [49, -27],\n            [43, 9],\n            [40, -1],\n            [-3, 37],\n            [25, 10],\n            [43, -20],\n            [0, -56],\n            [17, 47],\n            [23, -1],\n            [12, 59],\n            [-30, 36],\n            [-32, 24],\n            [2, 65],\n            [33, 43],\n            [37, -9],\n            [28, -26],\n            [38, -67],\n            [-25, -29],\n            [52, -12],\n            [-1, -60],\n            [38, 46],\n            [33, -38],\n            [-9, -44],\n            [27, -40],\n            [29, 43],\n            [21, 51],\n            [1, 65],\n            [40, -5],\n            [41, -8],\n            [37, -30],\n            [2, -29],\n            [-21, -31],\n            [20, -32],\n            [-4, -29],\n            [-54, -41],\n            [-39, -9],\n            [-29, 18],\n            [-8, -30],\n            [-27, -50],\n            [-8, -26],\n            [-32, -40],\n            [-40, -4],\n            [-22, -25],\n            [-2, -38],\n            [-32, -7],\n            [-34, -48],\n            [-30, -67],\n            [-11, -46],\n            [-1, -69],\n            [40, -10],\n            [13, -55],\n            [13, -45],\n            [39, 12],\n            [51, -26],\n            [28, -22],\n            [20, -28],\n            [35, -17],\n            [29, -24],\n            [46, -4],\n            [30, -6],\n            [-4, -51],\n            [8, -59],\n            [21, -66],\n            [41, -56],\n            [21, 19],\n            [15, 61],\n            [-14, 93],\n            [-20, 31],\n            [45, 28],\n            [31, 41],\n            [16, 41],\n            [-3, 40],\n            [-19, 50],\n            [-33, 44],\n            [32, 62],\n            [-12, 54],\n            [-9, 92],\n            [19, 14],\n            [48, -16],\n            [29, -6],\n            [23, 15],\n            [25, -20],\n            [35, -34],\n            [8, -23],\n            [50, -4],\n            [-1, -50],\n            [9, -74],\n            [25, -10],\n            [21, -35],\n            [40, 33],\n            [26, 65],\n            [19, 28],\n            [21, -53],\n            [36, -75],\n            [31, -71],\n            [-11, -37],\n            [37, -33],\n            [25, -34],\n            [44, -15],\n            [18, -19],\n            [11, -50],\n            [22, -8],\n            [11, -22],\n            [2, -67],\n            [-20, -22],\n            [-20, -21],\n            [-46, -21],\n            [-35, -48],\n            [-47, -10],\n            [-59, 13],\n            [-42, 0],\n            [-29, -4],\n            [-23, -43],\n            [-35, -26],\n            [-40, -78],\n            [-32, -54],\n            [23, 9],\n            [45, 78],\n            [58, 49],\n            [42, 6],\n            [24, -29],\n            [-26, -40],\n            [9, -63],\n            [9, -45],\n            [36, -29],\n            [46, 8],\n            [28, 67],\n            [2, -43],\n            [17, -22],\n            [-34, -38],\n            [-61, -36],\n            [-28, -23],\n            [-31, -43],\n            [-21, 4],\n            [-1, 50],\n            [48, 49],\n            [-44, -2],\n            [-31, -7]\n        ],\n        [\n            [1829, 9377],\n            [-14, -27],\n            [61, 17],\n            [39, -29],\n            [31, 30],\n            [26, -20],\n            [23, -58],\n            [14, 25],\n            [-20, 60],\n            [24, 9],\n            [28, -9],\n            [31, -24],\n            [17, -58],\n            [9, -41],\n            [47, -30],\n            [50, -28],\n            [-3, -26],\n            [-46, -4],\n            [18, -23],\n            [-9, -22],\n            [-51, 9],\n            [-48, 16],\n            [-32, -3],\n            [-52, -20],\n            [-70, -9],\n            [-50, -6],\n            [-15, 28],\n            [-38, 16],\n            [-24, -6],\n            [-35, 47],\n            [19, 6],\n            [43, 10],\n            [39, -3],\n            [36, 11],\n            [-54, 13],\n            [-59, -4],\n            [-39, 1],\n            [-15, 22],\n            [64, 23],\n            [-42, -1],\n            [-49, 16],\n            [23, 44],\n            [20, 24],\n            [74, 36],\n            [29, -12]\n        ],\n        [\n            [2097, 9395],\n            [-24, -39],\n            [-44, 41],\n            [10, 9],\n            [37, 2],\n            [21, -13]\n        ],\n        [\n            [2879, 9376],\n            [3, -16],\n            [-30, 2],\n            [-30, 1],\n            [-30, -8],\n            [-8, 3],\n            [-31, 32],\n            [1, 21],\n            [14, 4],\n            [63, -6],\n            [48, -33]\n        ],\n        [\n            [2595, 9379],\n            [22, -36],\n            [26, 47],\n            [70, 24],\n            [48, -61],\n            [-4, -38],\n            [55, 17],\n            [26, 23],\n            [62, -30],\n            [38, -28],\n            [3, -25],\n            [52, 13],\n            [29, -38],\n            [67, -23],\n            [24, -24],\n            [26, -55],\n            [-51, -28],\n            [66, -38],\n            [44, -13],\n            [40, -55],\n            [44, -3],\n            [-9, -42],\n            [-49, -69],\n            [-34, 26],\n            [-44, 57],\n            [-36, -8],\n            [-3, -34],\n            [29, -34],\n            [38, -27],\n            [11, -16],\n            [18, -58],\n            [-9, -43],\n            [-35, 16],\n            [-70, 47],\n            [39, -51],\n            [29, -35],\n            [5, -21],\n            [-76, 24],\n            [-59, 34],\n            [-34, 29],\n            [10, 17],\n            [-42, 30],\n            [-40, 29],\n            [0, -18],\n            [-80, -9],\n            [-23, 20],\n            [18, 44],\n            [52, 1],\n            [57, 7],\n            [-9, 21],\n            [10, 30],\n            [36, 57],\n            [-8, 27],\n            [-11, 20],\n            [-42, 29],\n            [-57, 20],\n            [18, 15],\n            [-29, 36],\n            [-25, 4],\n            [-22, 20],\n            [-14, -18],\n            [-51, -7],\n            [-101, 13],\n            [-59, 17],\n            [-45, 9],\n            [-23, 21],\n            [29, 27],\n            [-39, 0],\n            [-9, 60],\n            [21, 53],\n            [29, 24],\n            [72, 16],\n            [-21, -39]\n        ],\n        [\n            [2212, 9420],\n            [33, -12],\n            [50, 7],\n            [7, -17],\n            [-26, -28],\n            [42, -26],\n            [-5, -53],\n            [-45, -23],\n            [-27, 5],\n            [-19, 23],\n            [-69, 45],\n            [0, 19],\n            [57, -7],\n            [-31, 38],\n            [33, 29]\n        ],\n        [\n            [2411, 9357],\n            [-30, -45],\n            [-32, 3],\n            [-17, 52],\n            [1, 29],\n            [14, 25],\n            [28, 16],\n            [58, -2],\n            [53, -14],\n            [-42, -53],\n            [-33, -11]\n        ],\n        [\n            [1654, 9275],\n            [-73, -29],\n            [-15, 26],\n            [-64, 31],\n            [12, 25],\n            [19, 43],\n            [24, 39],\n            [-27, 36],\n            [94, 10],\n            [39, -13],\n            [71, -3],\n            [27, -17],\n            [30, -25],\n            [-35, -15],\n            [-68, -41],\n            [-34, -42],\n            [0, -25]\n        ],\n        [\n            [2399, 9487],\n            [-15, -23],\n            [-40, 5],\n            [-34, 15],\n            [15, 27],\n            [40, 16],\n            [24, -21],\n            [10, -19]\n        ],\n        [\n            [2264, 9590],\n            [21, -27],\n            [1, -31],\n            [-13, -44],\n            [-46, -6],\n            [-30, 10],\n            [1, 34],\n            [-45, -4],\n            [-2, 45],\n            [30, -2],\n            [41, 21],\n            [40, -4],\n            [2, 8]\n        ],\n        [\n            [1994, 9559],\n            [11, -21],\n            [25, 10],\n            [29, -2],\n            [5, -29],\n            [-17, -28],\n            [-94, -10],\n            [-70, -25],\n            [-43, -2],\n            [-3, 20],\n            [57, 26],\n            [-125, -7],\n            [-39, 10],\n            [38, 58],\n            [26, 17],\n            [78, -20],\n            [50, -35],\n            [48, -5],\n            [-40, 57],\n            [26, 21],\n            [29, -7],\n            [9, -28]\n        ],\n        [\n            [2370, 9612],\n            [30, -19],\n            [55, 0],\n            [24, -19],\n            [-6, -22],\n            [32, -14],\n            [17, -14],\n            [38, -2],\n            [40, -5],\n            [44, 13],\n            [57, 5],\n            [45, -5],\n            [30, -22],\n            [6, -24],\n            [-17, -16],\n            [-42, -13],\n            [-35, 8],\n            [-80, -10],\n            [-57, -1],\n            [-45, 8],\n            [-74, 19],\n            [-9, 32],\n            [-4, 29],\n            [-27, 26],\n            [-58, 7],\n            [-32, 19],\n            [10, 24],\n            [58, -4]\n        ],\n        [\n            [1772, 9645],\n            [-4, -46],\n            [-21, -20],\n            [-26, -3],\n            [-52, -26],\n            [-44, -9],\n            [-38, 13],\n            [47, 44],\n            [57, 39],\n            [43, -1],\n            [38, 9]\n        ],\n        [\n            [2393, 9637],\n            [-13, -2],\n            [-52, 4],\n            [-7, 17],\n            [56, -1],\n            [19, -11],\n            [-3, -7]\n        ],\n        [\n            [1939, 9648],\n            [-52, -17],\n            [-41, 19],\n            [23, 19],\n            [40, 6],\n            [39, -10],\n            [-9, -17]\n        ],\n        [\n            [1954, 9701],\n            [-34, -11],\n            [-46, 0],\n            [0, 8],\n            [29, 18],\n            [14, -3],\n            [37, -12]\n        ],\n        [\n            [2338, 9669],\n            [-41, -12],\n            [-23, 13],\n            [-12, 23],\n            [-2, 24],\n            [36, -2],\n            [16, -4],\n            [33, -21],\n            [-7, -21]\n        ],\n        [\n            [2220, 9685],\n            [11, -25],\n            [-45, 7],\n            [-46, 19],\n            [-62, 2],\n            [27, 18],\n            [-34, 14],\n            [-2, 22],\n            [55, -8],\n            [75, -21],\n            [21, -28]\n        ],\n        [\n            [2583, 9764],\n            [33, -20],\n            [-38, -17],\n            [-51, -45],\n            [-50, -4],\n            [-57, 8],\n            [-30, 24],\n            [0, 21],\n            [22, 16],\n            [-50, 0],\n            [-31, 19],\n            [-18, 27],\n            [20, 26],\n            [19, 18],\n            [28, 4],\n            [-12, 14],\n            [65, 3],\n            [35, -32],\n            [47, -12],\n            [46, -11],\n            [22, -39]\n        ],\n        [\n            [3097, 9967],\n            [74, -4],\n            [60, -8],\n            [51, -16],\n            [-2, -16],\n            [-67, -25],\n            [-68, -12],\n            [-25, -14],\n            [61, 1],\n            [-66, -36],\n            [-45, -17],\n            [-48, -48],\n            [-57, -10],\n            [-18, -12],\n            [-84, -6],\n            [39, -8],\n            [-20, -10],\n            [23, -29],\n            [-26, -21],\n            [-43, -16],\n            [-13, -24],\n            [-39, -17],\n            [4, -14],\n            [48, 3],\n            [0, -15],\n            [-74, -35],\n            [-73, 16],\n            [-81, -9],\n            [-42, 7],\n            [-52, 3],\n            [-4, 29],\n            [52, 13],\n            [-14, 43],\n            [17, 4],\n            [74, -26],\n            [-38, 38],\n            [-45, 11],\n            [23, 23],\n            [49, 14],\n            [8, 21],\n            [-39, 23],\n            [-12, 31],\n            [76, -3],\n            [22, -6],\n            [43, 21],\n            [-62, 7],\n            [-98, -4],\n            [-49, 20],\n            [-23, 24],\n            [-32, 17],\n            [-6, 21],\n            [41, 11],\n            [32, 2],\n            [55, 9],\n            [41, 22],\n            [34, -3],\n            [30, -16],\n            [21, 32],\n            [37, 9],\n            [50, 7],\n            [85, 2],\n            [14, -6],\n            [81, 10],\n            [60, -4],\n            [60, -4]\n        ],\n        [\n            [5290, 7828],\n            [-3, -24],\n            [-12, -10],\n            [-20, 7],\n            [-6, -24],\n            [-14, -2],\n            [-5, 10],\n            [-15, -20],\n            [-13, -3],\n            [-12, 13]\n        ],\n        [\n            [5190, 7775],\n            [-10, 25],\n            [-13, -9],\n            [0, 27],\n            [21, 33],\n            [-1, 15],\n            [12, -5],\n            [8, 10]\n        ],\n        [\n            [5207, 7871],\n            [24, -1],\n            [5, 13],\n            [30, -18]\n        ],\n        [\n            [3140, 1814],\n            [-10, -24],\n            [-23, -18],\n            [-14, 2],\n            [-16, 5],\n            [-21, 18],\n            [-29, 8],\n            [-35, 33],\n            [-28, 32],\n            [-38, 66],\n            [23, -12],\n            [39, -40],\n            [36, -21],\n            [15, 27],\n            [9, 41],\n            [25, 24],\n            [20, -7]\n        ],\n        [\n            [3095, 1968],\n            [-25, 0],\n            [-13, -14],\n            [-25, -22],\n            [-5, -55],\n            [-11, -1],\n            [-32, 19],\n            [-32, 41],\n            [-34, 34],\n            [-9, 37],\n            [8, 35],\n            [-14, 39],\n            [-4, 101],\n            [12, 57],\n            [30, 45],\n            [-43, 18],\n            [27, 52],\n            [9, 98],\n            [31, -21],\n            [15, 123],\n            [-19, 15],\n            [-9, -73],\n            [-17, 8],\n            [9, 84],\n            [9, 110],\n            [13, 40],\n            [-8, 58],\n            [-2, 66],\n            [11, 2],\n            [17, 96],\n            [20, 94],\n            [11, 88],\n            [-6, 89],\n            [8, 49],\n            [-3, 72],\n            [16, 73],\n            [5, 114],\n            [9, 123],\n            [9, 132],\n            [-2, 96],\n            [-6, 84]\n        ],\n        [\n            [3045, 3974],\n            [14, 15],\n            [8, 30]\n        ],\n        [\n            [8064, 6161],\n            [-24, -28],\n            [-23, 18],\n            [0, 51],\n            [13, 26],\n            [31, 17],\n            [16, -1],\n            [6, -23],\n            [-12, -26],\n            [-7, -34]\n        ],\n        [\n            [8628, 7562],\n            [-18, 35],\n            [-11, -33],\n            [-43, -26],\n            [4, -31],\n            [-24, 2],\n            [-13, 19],\n            [-19, -42],\n            [-30, -32],\n            [-23, -38]\n        ],\n        [\n            [8451, 7416],\n            [-39, -17],\n            [-20, -27],\n            [-30, -17],\n            [15, 28],\n            [-6, 23],\n            [22, 40],\n            [-15, 30],\n            [-24, -20],\n            [-32, -41],\n            [-17, -39],\n            [-27, -2],\n            [-14, -28],\n            [15, -40],\n            [22, -10],\n            [1, -26],\n            [22, -17],\n            [31, 42],\n            [25, -23],\n            [18, -2],\n            [4, -31],\n            [-39, -16],\n            [-13, -32],\n            [-27, -30],\n            [-14, -41],\n            [30, -33],\n            [11, -58],\n            [17, -54],\n            [18, -45],\n            [0, -44],\n            [-17, -16],\n            [6, -32],\n            [17, -18],\n            [-5, -48],\n            [-7, -47],\n            [-15, -5],\n            [-21, -64],\n            [-22, -78],\n            [-26, -70],\n            [-38, -55],\n            [-39, -50],\n            [-31, -6],\n            [-17, -27],\n            [-10, 20],\n            [-15, -30],\n            [-39, -29],\n            [-29, -9],\n            [-10, -63],\n            [-15, -3],\n            [-8, 43],\n            [7, 22],\n            [-37, 19],\n            [-13, -9]\n        ],\n        [\n            [8001, 6331],\n            [-28, 15],\n            [-14, 24],\n            [5, 34],\n            [-26, 11],\n            [-13, 22],\n            [-24, -31],\n            [-27, -7],\n            [-22, 0],\n            [-15, -14]\n        ],\n        [\n            [7837, 6385],\n            [-14, -9],\n            [4, -68],\n            [-15, 2],\n            [-2, 14]\n        ],\n        [\n            [7810, 6324],\n            [-1, 24],\n            [-20, -17],\n            [-12, 11],\n            [-21, 22],\n            [8, 49],\n            [-18, 12],\n            [-6, 54],\n            [-30, -10],\n            [4, 70],\n            [26, 50],\n            [1, 48],\n            [-1, 46],\n            [-12, 14],\n            [-9, 35],\n            [-16, -5]\n        ],\n        [\n            [7703, 6727],\n            [-30, 9],\n            [9, 25],\n            [-13, 36],\n            [-20, -24],\n            [-23, 14],\n            [-32, -37],\n            [-25, -44],\n            [-23, -8]\n        ],\n        [\n            [7466, 6670],\n            [-2, 47],\n            [-17, -13]\n        ],\n        [\n            [7447, 6704],\n            [-32, 6],\n            [-32, 14],\n            [-22, 26],\n            [-22, 11],\n            [-9, 29],\n            [-16, 8],\n            [-28, 39],\n            [-22, 18],\n            [-12, -14]\n        ],\n        [\n            [7252, 6841],\n            [-38, 41],\n            [-28, 37],\n            [-7, 65],\n            [20, -7],\n            [1, 30],\n            [-12, 30],\n            [3, 48],\n            [-30, 69]\n        ],\n        [\n            [7161, 7154],\n            [-45, 24],\n            [-8, 46],\n            [-21, 27]\n        ],\n        [\n            [7082, 7268],\n            [-4, 34],\n            [1, 23],\n            [-17, 13],\n            [-9, -6],\n            [-7, 55]\n        ],\n        [\n            [7046, 7387],\n            [8, 13],\n            [-4, 14],\n            [26, 28],\n            [20, 12],\n            [29, -8],\n            [11, 38],\n            [35, 7],\n            [10, 23],\n            [44, 32],\n            [4, 13]\n        ],\n        [\n            [7229, 7559],\n            [-2, 34],\n            [19, 15],\n            [-25, 103],\n            [55, 24],\n            [14, 13],\n            [20, 106],\n            [55, -20],\n            [15, 27],\n            [2, 59],\n            [23, 6],\n            [21, 39]\n        ],\n        [\n            [7426, 7965],\n            [11, 5]\n        ],\n        [\n            [7437, 7970],\n            [7, -41],\n            [23, -32],\n            [40, -22],\n            [19, -47],\n            [-10, -70],\n            [10, -25],\n            [33, -10],\n            [37, -8],\n            [33, -37],\n            [18, -7],\n            [12, -54],\n            [17, -35],\n            [30, 1],\n            [58, -13],\n            [36, 8],\n            [28, -9],\n            [41, -36],\n            [34, 0],\n            [12, -18],\n            [32, 32],\n            [45, 20],\n            [42, 2],\n            [32, 21],\n            [20, 32],\n            [20, 20],\n            [-5, 19],\n            [-9, 23],\n            [15, 38],\n            [15, -5],\n            [29, -12],\n            [28, 31],\n            [42, 23],\n            [20, 39],\n            [20, 17],\n            [40, 8],\n            [22, -7],\n            [3, 21],\n            [-25, 41],\n            [-22, 19],\n            [-22, -22],\n            [-27, 10],\n            [-16, -8],\n            [-7, 24],\n            [20, 59],\n            [13, 45]\n        ],\n        [\n            [8240, 8005],\n            [34, -23],\n            [39, 38],\n            [-1, 26],\n            [26, 62],\n            [15, 19],\n            [0, 33],\n            [-16, 14],\n            [23, 29],\n            [35, 11],\n            [37, 2],\n            [41, -18],\n            [25, -22],\n            [17, -59],\n            [10, -26],\n            [10, -36],\n            [10, -58],\n            [49, -19],\n            [32, -42],\n            [12, -55],\n            [42, 0],\n            [24, 23],\n            [46, 17],\n            [-15, -53],\n            [-11, -21],\n            [-9, -65],\n            [-19, -58],\n            [-33, 11],\n            [-24, -21],\n            [7, -51],\n            [-4, -69],\n            [-14, -2],\n            [0, -30]\n        ],\n        [\n            [4920, 5353],\n            [-12, -1],\n            [-20, 12],\n            [-18, -1],\n            [-33, -10],\n            [-19, -18],\n            [-27, -21],\n            [-6, 1]\n        ],\n        [\n            [4785, 5315],\n            [2, 49],\n            [3, 7],\n            [-1, 24],\n            [-12, 24],\n            [-8, 4],\n            [-8, 17],\n            [6, 26],\n            [-3, 28],\n            [1, 18]\n        ],\n        [\n            [4765, 5512],\n            [5, 0],\n            [1, 25],\n            [-2, 12],\n            [3, 8],\n            [10, 7],\n            [-7, 47],\n            [-6, 25],\n            [2, 20],\n            [5, 4]\n        ],\n        [\n            [4776, 5660],\n            [4, 6],\n            [8, -9],\n            [21, -1],\n            [5, 18],\n            [5, -1],\n            [8, 6],\n            [4, -25],\n            [7, 7],\n            [11, 9]\n        ],\n        [\n            [4921, 5627],\n            [7, -84],\n            [-11, -50],\n            [-8, -66],\n            [12, -51],\n            [-1, -23]\n        ],\n        [\n            [5363, 5191],\n            [-4, 4],\n            [-16, -8],\n            [-17, 8],\n            [-13, -4]\n        ],\n        [\n            [5313, 5191],\n            [-45, 1]\n        ],\n        [\n            [5268, 5192],\n            [4, 47],\n            [-11, 39],\n            [-13, 10],\n            [-6, 27],\n            [-7, 8],\n            [1, 16]\n        ],\n        [\n            [5236, 5339],\n            [7, 42],\n            [13, 57],\n            [8, 1],\n            [17, 34],\n            [10, 1],\n            [16, -24],\n            [19, 20],\n            [2, 25],\n            [7, 23],\n            [4, 30],\n            [15, 25],\n            [5, 41],\n            [6, 13],\n            [4, 31],\n            [7, 37],\n            [24, 46],\n            [1, 20],\n            [3, 10],\n            [-11, 24]\n        ],\n        [\n            [5393, 5795],\n            [1, 19],\n            [8, 3]\n        ],\n        [\n            [5402, 5817],\n            [11, -38],\n            [2, -39],\n            [-1, -39],\n            [15, -54],\n            [-15, 1],\n            [-8, -4],\n            [-13, 6],\n            [-6, -28],\n            [16, -35],\n            [13, -10],\n            [3, -24],\n            [9, -41],\n            [-4, -16]\n        ],\n        [\n            [5444, 5191],\n            [-2, -31],\n            [-22, 14],\n            [-22, 15],\n            [-35, 2]\n        ],\n        [\n            [5856, 5265],\n            [-2, -69],\n            [11, -8],\n            [-9, -21],\n            [-10, -16],\n            [-11, -31],\n            [-6, -27],\n            [-1, -48],\n            [-7, -22],\n            [0, -45]\n        ],\n        [\n            [5821, 4978],\n            [-8, -16],\n            [-1, -35],\n            [-4, -5],\n            [-2, -32]\n        ],\n        [\n            [5814, 4792],\n            [5, -55],\n            [-2, -30],\n            [5, -35],\n            [16, -33],\n            [15, -74]\n        ],\n        [\n            [5853, 4565],\n            [-11, 6],\n            [-37, -10],\n            [-7, -7],\n            [-8, -38],\n            [6, -26],\n            [-5, -70],\n            [-3, -59],\n            [7, -11],\n            [19, -23],\n            [8, 11],\n            [2, -64],\n            [-21, 1],\n            [-11, 32],\n            [-10, 25],\n            [-22, 9],\n            [-6, 31],\n            [-17, -19],\n            [-22, 8],\n            [-10, 27],\n            [-17, 6],\n            [-13, -2],\n            [-2, 19],\n            [-9, 1]\n        ],\n        [\n            [5342, 4697],\n            [-4, 18]\n        ],\n        [\n            [5360, 4775],\n            [8, -6],\n            [9, 23],\n            [15, -1],\n            [2, -17],\n            [11, -10],\n            [16, 37],\n            [16, 29],\n            [7, 19],\n            [-1, 48],\n            [12, 58],\n            [13, 30],\n            [18, 29],\n            [3, 18],\n            [1, 22],\n            [5, 21],\n            [-2, 33],\n            [4, 52],\n            [5, 37],\n            [8, 32],\n            [2, 36]\n        ],\n        [\n            [5760, 5367],\n            [17, -49],\n            [12, -7],\n            [8, 10],\n            [12, -4],\n            [16, 12],\n            [6, -25],\n            [25, -39]\n        ],\n        [\n            [5330, 4760],\n            [-22, 62]\n        ],\n        [\n            [5308, 4822],\n            [21, 33],\n            [-11, 39],\n            [10, 15],\n            [19, 7],\n            [2, 26],\n            [15, -28],\n            [24, -2],\n            [9, 27],\n            [3, 40],\n            [-3, 46],\n            [-13, 35],\n            [12, 68],\n            [-7, 12],\n            [-21, -5],\n            [-7, 31],\n            [2, 25]\n        ],\n        [\n            [2906, 5049],\n            [-12, 14],\n            [-14, 19],\n            [-7, -9],\n            [-24, 8],\n            [-7, 25],\n            [-5, -1],\n            [-28, 34]\n        ],\n        [\n            [2809, 5139],\n            [-3, 18],\n            [10, 5],\n            [-1, 29],\n            [6, 22],\n            [14, 4],\n            [12, 37],\n            [10, 31],\n            [-10, 14],\n            [5, 34],\n            [-6, 54],\n            [6, 16],\n            [-4, 50],\n            [-12, 31]\n        ],\n        [\n            [2836, 5484],\n            [4, 29],\n            [9, -4],\n            [5, 17],\n            [-6, 35],\n            [3, 9]\n        ],\n        [\n            [2851, 5570],\n            [14, -2],\n            [21, 41],\n            [12, 6],\n            [0, 20],\n            [5, 50],\n            [16, 27],\n            [17, 1],\n            [3, 13],\n            [21, -5],\n            [22, 30],\n            [11, 13],\n            [14, 28],\n            [9, -3],\n            [8, -16],\n            [-6, -20]\n        ],\n        [\n            [3018, 5753],\n            [-18, -10],\n            [-7, -29],\n            [-10, -17],\n            [-8, -22],\n            [-4, -42],\n            [-8, -35],\n            [15, -4],\n            [3, -27],\n            [6, -13],\n            [3, -24],\n            [-4, -22],\n            [1, -12],\n            [7, -5],\n            [7, -20],\n            [36, 5],\n            [16, -7],\n            [19, -51],\n            [11, 6],\n            [20, -3],\n            [16, 7],\n            [10, -10],\n            [-5, -32],\n            [-6, -20],\n            [-2, -42],\n            [5, -40],\n            [8, -17],\n            [1, -13],\n            [-14, -30],\n            [10, -13],\n            [8, -21],\n            [8, -58]\n        ],\n        [\n            [3058, 4804],\n            [-14, 31],\n            [-8, 1],\n            [18, 61],\n            [-21, 27],\n            [-17, -5],\n            [-10, 10],\n            [-15, -15],\n            [-21, 7],\n            [-16, 62],\n            [-13, 15],\n            [-9, 28],\n            [-19, 28],\n            [-7, -5]\n        ],\n        [\n            [2695, 5543],\n            [-15, 14],\n            [-6, 12],\n            [4, 10],\n            [-1, 13],\n            [-8, 14],\n            [-11, 12],\n            [-10, 8],\n            [-1, 17],\n            [-8, 10],\n            [2, -17],\n            [-5, -14],\n            [-7, 17],\n            [-9, 5],\n            [-4, 12],\n            [1, 18],\n            [3, 19],\n            [-8, 8],\n            [7, 12]\n        ],\n        [\n            [2619, 5713],\n            [4, 7],\n            [18, -15],\n            [7, 7],\n            [9, -5],\n            [4, -12],\n            [8, -4],\n            [7, 13]\n        ],\n        [\n            [2676, 5704],\n            [7, -32],\n            [11, -24],\n            [13, -25]\n        ],\n        [\n            [2707, 5623],\n            [-11, -6],\n            [0, -23],\n            [6, -9],\n            [-4, -7],\n            [1, -11],\n            [-2, -12],\n            [-2, -12]\n        ],\n        [\n            [2715, 6427],\n            [23, -4],\n            [22, 0],\n            [26, -21],\n            [11, -21],\n            [26, 6],\n            [10, -13],\n            [24, -37],\n            [17, -27],\n            [9, 1],\n            [17, -12],\n            [-2, -17],\n            [20, -2],\n            [21, -24],\n            [-3, -14],\n            [-19, -7],\n            [-18, -3],\n            [-19, 4],\n            [-40, -5],\n            [18, 32],\n            [-11, 16],\n            [-18, 4],\n            [-9, 17],\n            [-7, 33],\n            [-16, -2],\n            [-26, 16],\n            [-8, 12],\n            [-36, 10],\n            [-10, 11],\n            [11, 15],\n            [-28, 3],\n            [-20, -31],\n            [-11, -1],\n            [-4, -14],\n            [-14, -7],\n            [-12, 6],\n            [15, 18],\n            [6, 22],\n            [13, 13],\n            [14, 11],\n            [21, 6],\n            [7, 6]\n        ],\n        [\n            [5909, 7133],\n            [2, 1],\n            [4, 14],\n            [20, -1],\n            [25, 18],\n            [-19, -25],\n            [2, -11]\n        ],\n        [\n            [5943, 7129],\n            [-3, 2],\n            [-5, -5],\n            [-4, 1],\n            [-2, -2],\n            [0, 6],\n            [-2, 4],\n            [-6, 0],\n            [-7, -5],\n            [-5, 3]\n        ],\n        [\n            [5943, 7129],\n            [1, -5],\n            [-28, -24],\n            [-14, 8],\n            [-7, 23],\n            [14, 2]\n        ],\n        [\n            [5377, 7945],\n            [-16, 25],\n            [-14, 15],\n            [-3, 25],\n            [-5, 17],\n            [21, 13],\n            [10, 15],\n            [20, 11],\n            [7, 11],\n            [7, -6],\n            [13, 6]\n        ],\n        [\n            [5417, 8077],\n            [13, -19],\n            [21, -5],\n            [-2, -17],\n            [15, -12],\n            [4, 15],\n            [19, -6],\n            [3, -19],\n            [20, -3],\n            [13, -29]\n        ],\n        [\n            [5523, 7982],\n            [-8, 0],\n            [-4, -11],\n            [-7, -3],\n            [-2, -13],\n            [-5, -3],\n            [-1, -5],\n            [-9, -7],\n            [-12, 1],\n            [-4, -13]\n        ],\n        [\n            [5275, 8306],\n            [1, -23],\n            [28, -14],\n            [-1, -21],\n            [29, 11],\n            [15, 16],\n            [32, -23],\n            [13, -19]\n        ],\n        [\n            [5392, 8233],\n            [6, -30],\n            [-8, -16],\n            [11, -21],\n            [6, -31],\n            [-2, -21],\n            [12, -37]\n        ],\n        [\n            [5207, 7871],\n            [3, 42],\n            [14, 40],\n            [-40, 11],\n            [-13, 16]\n        ],\n        [\n            [5171, 7980],\n            [2, 26],\n            [-6, 13]\n        ],\n        [\n            [5171, 8059],\n            [-5, 62],\n            [17, 0],\n            [7, 22],\n            [6, 54],\n            [-5, 20]\n        ],\n        [\n            [5191, 8217],\n            [6, 13],\n            [23, 3],\n            [5, -13],\n            [19, 29],\n            [-6, 22],\n            [-2, 34]\n        ],\n        [\n            [5236, 8305],\n            [21, -8],\n            [18, 9]\n        ],\n        [\n            [6196, 5808],\n            [7, -19],\n            [-1, -24],\n            [-16, -14],\n            [12, -16]\n        ],\n        [\n            [6198, 5735],\n            [-10, -32]\n        ],\n        [\n            [6188, 5703],\n            [-7, 11],\n            [-6, -5],\n            [-16, 1],\n            [0, 18],\n            [-2, 17],\n            [9, 27],\n            [10, 26]\n        ],\n        [\n            [6176, 5798],\n            [12, -5],\n            [8, 15]\n        ],\n        [\n            [5352, 8343],\n            [-17, -48],\n            [-29, 33],\n            [-4, 25],\n            [41, 19],\n            [9, -29]\n        ],\n        [\n            [5236, 8305],\n            [-11, 32],\n            [-1, 61],\n            [5, 16],\n            [8, 17],\n            [24, 4],\n            [10, 16],\n            [22, 17],\n            [-1, -30],\n            [-8, -20],\n            [4, -16],\n            [15, -9],\n            [-7, -22],\n            [-8, 6],\n            [-20, -42],\n            [7, -29]\n        ],\n        [\n            [3008, 6222],\n            [3, 10],\n            [22, 0],\n            [16, -15],\n            [8, 1],\n            [5, -21],\n            [15, 1],\n            [-1, -17],\n            [12, -2],\n            [14, -22],\n            [-10, -24],\n            [-14, 13],\n            [-12, -3],\n            [-9, 3],\n            [-5, -11],\n            [-11, -3],\n            [-4, 14],\n            [-10, -8],\n            [-11, -41],\n            [-7, 10],\n            [-1, 17]\n        ],\n        [\n            [3008, 6124],\n            [0, 16],\n            [-7, 17],\n            [7, 10],\n            [2, 23],\n            [-2, 32]\n        ],\n        [\n            [5333, 6444],\n            [-95, -112],\n            [-81, -117],\n            [-39, -26]\n        ],\n        [\n            [5118, 6189],\n            [-31, -6],\n            [0, 38],\n            [-13, 10],\n            [-17, 16],\n            [-7, 28],\n            [-94, 129],\n            [-93, 129]\n        ],\n        [\n            [4863, 6533],\n            [-105, 143]\n        ],\n        [\n            [4758, 6676],\n            [1, 11],\n            [0, 4]\n        ],\n        [\n            [4759, 6691],\n            [0, 70],\n            [44, 44],\n            [28, 9],\n            [23, 16],\n            [11, 29],\n            [32, 24],\n            [1, 44],\n            [16, 5],\n            [13, 22],\n            [36, 9],\n            [5, 23],\n            [-7, 13],\n            [-10, 62],\n            [-1, 36],\n            [-11, 38]\n        ],\n        [\n            [4939, 7135],\n            [27, 32],\n            [30, 11],\n            [17, 24],\n            [27, 18],\n            [47, 11],\n            [46, 4],\n            [14, -8],\n            [26, 23],\n            [30, 0],\n            [11, -13],\n            [19, 3]\n        ],\n        [\n            [5233, 7240],\n            [-5, -30],\n            [4, -56],\n            [-6, -49],\n            [-18, -33],\n            [3, -45],\n            [23, -35],\n            [0, -14],\n            [17, -24],\n            [12, -106]\n        ],\n        [\n            [5263, 6848],\n            [9, -52],\n            [1, -28],\n            [-5, -48],\n            [2, -27],\n            [-3, -32],\n            [2, -37],\n            [-11, -25],\n            [17, -43],\n            [1, -25],\n            [10, -33],\n            [13, 11],\n            [22, -28],\n            [12, -37]\n        ],\n        [\n            [2769, 4856],\n            [15, 45],\n            [-6, 25],\n            [-11, -27],\n            [-16, 26],\n            [5, 16],\n            [-4, 54],\n            [9, 9],\n            [5, 37],\n            [11, 38],\n            [-2, 24],\n            [15, 13],\n            [19, 23]\n        ],\n        [\n            [2906, 5049],\n            [4, -45],\n            [-9, -39],\n            [-30, -62],\n            [-33, -23],\n            [-17, -51],\n            [-6, -40],\n            [-15, -24],\n            [-12, 29],\n            [-11, 7],\n            [-12, -5],\n            [-1, 22],\n            [8, 14],\n            [-3, 24]\n        ],\n        [\n            [5969, 6800],\n            [-7, -23],\n            [-6, -45],\n            [-8, -31],\n            [-6, -10],\n            [-10, 19],\n            [-12, 26],\n            [-20, 85],\n            [-3, -5],\n            [12, -63],\n            [17, -59],\n            [21, -92],\n            [10, -32],\n            [9, -34],\n            [25, -65],\n            [-6, -10],\n            [1, -39],\n            [33, -53],\n            [4, -12]\n        ],\n        [\n            [6023, 6357],\n            [-110, 0],\n            [-107, 0],\n            [-112, 0]\n        ],\n        [\n            [5694, 6357],\n            [0, 218],\n            [0, 210],\n            [-8, 47],\n            [7, 37],\n            [-5, 25],\n            [10, 29]\n        ],\n        [\n            [5698, 6923],\n            [37, 0],\n            [27, -15],\n            [28, -18],\n            [13, -9],\n            [21, 19],\n            [11, 17],\n            [25, 5],\n            [20, -8],\n            [7, -29],\n            [7, 19],\n            [22, -14],\n            [22, -3],\n            [13, 15]\n        ],\n        [\n            [5951, 6902],\n            [18, -102]\n        ],\n        [\n            [6176, 5798],\n            [-10, 20],\n            [-11, 34],\n            [-12, 19],\n            [-8, 21],\n            [-24, 23],\n            [-19, 1],\n            [-7, 12],\n            [-16, -14],\n            [-17, 27],\n            [-8, -44],\n            [-33, 13]\n        ],\n        [\n            [6011, 5910],\n            [-3, 23],\n            [12, 87],\n            [3, 39],\n            [9, 18],\n            [20, 10],\n            [14, 34]\n        ],\n        [\n            [6066, 6121],\n            [16, -69],\n            [8, -54],\n            [15, -29],\n            [38, -55],\n            [16, -34],\n            [15, -34],\n            [8, -20],\n            [14, -18]\n        ],\n        [\n            [4749, 7532],\n            [1, 42],\n            [-11, 25],\n            [39, 43],\n            [34, -11],\n            [37, 1],\n            [30, -10],\n            [23, 3],\n            [45, -2]\n        ],\n        [\n            [4947, 7623],\n            [11, -23],\n            [51, -27],\n            [10, 13],\n            [31, -27],\n            [32, 8]\n        ],\n        [\n            [5082, 7567],\n            [2, -35],\n            [-26, -39],\n            [-36, -12],\n            [-2, -20],\n            [-18, -33],\n            [-10, -48],\n            [11, -34],\n            [-16, -26],\n            [-6, -39],\n            [-21, -11],\n            [-20, -46],\n            [-35, -1],\n            [-27, 1],\n            [-17, -21],\n            [-11, -22],\n            [-13, 5],\n            [-11, 20],\n            [-8, 34],\n            [-26, 9]\n        ],\n        [\n            [4792, 7249],\n            [-2, 20],\n            [10, 22],\n            [4, 16],\n            [-9, 17],\n            [7, 39],\n            [-11, 36],\n            [12, 5],\n            [1, 27],\n            [5, 9],\n            [0, 46],\n            [13, 16],\n            [-8, 30],\n            [-16, 2],\n            [-5, -8],\n            [-16, 0],\n            [-7, 29],\n            [-11, -8],\n            [-10, -15]\n        ],\n        [\n            [5675, 8472],\n            [3, 35],\n            [-10, -8],\n            [-18, 21],\n            [-2, 34],\n            [35, 17],\n            [35, 8],\n            [30, -10],\n            [29, 2]\n        ],\n        [\n            [5777, 8571],\n            [4, -10],\n            [-20, -34],\n            [8, -55],\n            [-12, -19]\n        ],\n        [\n            [5757, 8453],\n            [-22, 0],\n            [-24, 22],\n            [-13, 7],\n            [-23, -10]\n        ],\n        [\n            [6188, 5703],\n            [-6, -21],\n            [10, -32],\n            [10, -29],\n            [11, -21],\n            [90, -70],\n            [24, 0]\n        ],\n        [\n            [6327, 5530],\n            [-79, -177],\n            [-36, -3],\n            [-25, -41],\n            [-17, -1],\n            [-8, -19]\n        ],\n        [\n            [6162, 5289],\n            [-19, 0],\n            [-11, 20],\n            [-26, -25],\n            [-8, -24],\n            [-18, 4],\n            [-6, 7],\n            [-7, -1],\n            [-9, 0],\n            [-35, 50],\n            [-19, 0],\n            [-10, 20],\n            [0, 33],\n            [-14, 10]\n        ],\n        [\n            [5980, 5383],\n            [-17, 64],\n            [-12, 14],\n            [-5, 23],\n            [-14, 29],\n            [-17, 4],\n            [9, 34],\n            [15, 2],\n            [4, 18]\n        ],\n        [\n            [5943, 5571],\n            [0, 53]\n        ],\n        [\n            [5943, 5624],\n            [8, 62],\n            [13, 16],\n            [3, 24],\n            [12, 45],\n            [17, 30],\n            [11, 58],\n            [4, 51]\n        ],\n        [\n            [5794, 9138],\n            [-4, -42],\n            [42, -39],\n            [-26, -45],\n            [33, -67],\n            [-19, -51],\n            [25, -43],\n            [-11, -39],\n            [41, -40],\n            [-11, -31],\n            [-25, -34],\n            [-60, -75]\n        ],\n        [\n            [5779, 8632],\n            [-50, -5],\n            [-49, -21],\n            [-45, -13],\n            [-16, 32],\n            [-27, 20],\n            [6, 58],\n            [-14, 53],\n            [14, 35],\n            [25, 37],\n            [63, 64],\n            [19, 12],\n            [-3, 25],\n            [-39, 28]\n        ],\n        [\n            [5663, 8957],\n            [-9, 23],\n            [-1, 91],\n            [-43, 40],\n            [-37, 29]\n        ],\n        [\n            [5573, 9140],\n            [17, 16],\n            [30, -32],\n            [37, 3],\n            [30, -14],\n            [26, 26],\n            [14, 44],\n            [43, 20],\n            [35, -24],\n            [-11, -41]\n        ],\n        [\n            [9954, 4033],\n            [9, -17],\n            [-4, -31],\n            [-17, -8],\n            [-16, 7],\n            [-2, 26],\n            [10, 21],\n            [13, -8],\n            [7, 10]\n        ],\n        [\n            [0, 4079],\n            [9981, -14],\n            [-17, -13],\n            [-4, 23],\n            [14, 12],\n            [9, 3],\n            [-9983, 18]\n        ],\n        [\n            [0, 4108],\n            [0, -29]\n        ],\n        [\n            [0, 4108],\n            [6, 3],\n            [-4, -28],\n            [-2, -4]\n        ],\n        [\n            [3300, 1994],\n            [33, 36],\n            [24, -15],\n            [16, 24],\n            [22, -27],\n            [-8, -21],\n            [-37, -17],\n            [-13, 20],\n            [-23, -26],\n            [-14, 26]\n        ],\n        [\n            [5265, 7548],\n            [-9, -46],\n            [-13, 12],\n            [-6, 40],\n            [5, 22],\n            [18, 22],\n            [5, -50]\n        ],\n        [\n            [5157, 7984],\n            [6, -6],\n            [8, 2]\n        ],\n        [\n            [5190, 7775],\n            [-2, -17],\n            [9, -22],\n            [-10, -18],\n            [7, -46],\n            [15, -8],\n            [-3, -25]\n        ],\n        [\n            [5206, 7639],\n            [-25, -34],\n            [-55, 16],\n            [-40, -19],\n            [-4, -35]\n        ],\n        [\n            [4947, 7623],\n            [14, 35],\n            [5, 118],\n            [-28, 62],\n            [-21, 30],\n            [-42, 23],\n            [-3, 43],\n            [36, 12],\n            [47, -15],\n            [-9, 67],\n            [26, -25],\n            [65, 46],\n            [8, 48],\n            [24, 12]\n        ],\n        [\n            [3485, 5194],\n            [7, 25],\n            [3, 27]\n        ],\n        [\n            [3495, 5246],\n            [4, 26],\n            [-10, 34]\n        ],\n        [\n            [3489, 5306],\n            [-3, 41],\n            [15, 51]\n        ],\n        [\n            [3501, 5398],\n            [9, -7],\n            [21, -14],\n            [29, -50],\n            [5, -24]\n        ],\n        [\n            [5308, 4822],\n            [-29, 60],\n            [-18, 49],\n            [-17, 61],\n            [1, 19],\n            [6, 19],\n            [7, 43],\n            [5, 44]\n        ],\n        [\n            [5263, 5117],\n            [10, 4],\n            [40, -1],\n            [0, 71]\n        ],\n        [\n            [4827, 8240],\n            [-21, 12],\n            [-17, -1],\n            [6, 32],\n            [-6, 32]\n        ],\n        [\n            [4789, 8315],\n            [23, 2],\n            [30, -37],\n            [-15, -40]\n        ],\n        [\n            [4916, 8521],\n            [-30, -63],\n            [29, 8],\n            [30, -1],\n            [-7, -48],\n            [-25, -53],\n            [29, -4],\n            [2, -6],\n            [25, -69],\n            [19, -10],\n            [17, -67],\n            [8, -24],\n            [33, -11],\n            [-3, -38],\n            [-14, -17],\n            [11, -30],\n            [-25, -31],\n            [-37, 0],\n            [-48, -16],\n            [-13, 12],\n            [-18, -28],\n            [-26, 7],\n            [-19, -23],\n            [-15, 12],\n            [41, 62],\n            [25, 13],\n            [-1, 0],\n            [-43, 9],\n            [-8, 24],\n            [29, 18],\n            [-15, 32],\n            [5, 39],\n            [42, -6],\n            [4, 35],\n            [-19, 36],\n            [0, 1],\n            [-34, 10],\n            [-7, 16],\n            [10, 27],\n            [-9, 16],\n            [-15, -28],\n            [-1, 57],\n            [-14, 30],\n            [10, 61],\n            [21, 48],\n            [23, -4],\n            [33, 4]\n        ],\n        [\n            [6154, 7511],\n            [4, 26],\n            [-7, 40],\n            [-16, 22],\n            [-16, 6],\n            [-10, 19]\n        ],\n        [\n            [6109, 7624],\n            [4, 6],\n            [23, -10],\n            [41, -9],\n            [38, -28],\n            [5, -11],\n            [17, 9],\n            [25, -13],\n            [9, -24],\n            [17, -13]\n        ],\n        [\n            [6210, 7485],\n            [-27, 29],\n            [-29, -3]\n        ],\n        [\n            [5029, 5408],\n            [-44, -35],\n            [-15, -20],\n            [-25, -17],\n            [-25, 17]\n        ],\n        [\n            [5000, 5708],\n            [-2, -18],\n            [12, -30],\n            [0, -43],\n            [2, -47],\n            [7, -21],\n            [-6, -54],\n            [2, -29],\n            [8, -37],\n            [6, -21]\n        ],\n        [\n            [4765, 5512],\n            [-8, 1],\n            [-5, -24],\n            [-8, 1],\n            [-6, 12],\n            [2, 24],\n            [-11, 36],\n            [-8, -7],\n            [-6, -1]\n        ],\n        [\n            [4715, 5554],\n            [-7, -3],\n            [0, 21],\n            [-4, 16],\n            [0, 17],\n            [-6, 25],\n            [-7, 21],\n            [-23, 0],\n            [-6, -11],\n            [-8, -1],\n            [-4, -13],\n            [-4, -17],\n            [-14, -26]\n        ],\n        [\n            [4632, 5583],\n            [-13, 35],\n            [-10, 24],\n            [-8, 7],\n            [-6, 12],\n            [-4, 26],\n            [-4, 13],\n            [-8, 10]\n        ],\n        [\n            [4579, 5710],\n            [13, 29],\n            [8, -2],\n            [7, 10],\n            [6, 0],\n            [5, 8],\n            [-3, 20],\n            [3, 6],\n            [1, 20]\n        ],\n        [\n            [4619, 5801],\n            [13, -1],\n            [20, -14],\n            [6, 1],\n            [3, 7],\n            [15, -5],\n            [4, 4]\n        ],\n        [\n            [4680, 5793],\n            [1, -22],\n            [5, 0],\n            [7, 8],\n            [5, -2],\n            [7, -15],\n            [12, -5],\n            [8, 13],\n            [9, 8],\n            [6, 8],\n            [6, -1],\n            [6, -13],\n            [3, -17],\n            [12, -24],\n            [-6, -16],\n            [-1, -19],\n            [6, 6],\n            [3, -7],\n            [-1, -17],\n            [8, -18]\n        ],\n        [\n            [4532, 5834],\n            [3, 27]\n        ],\n        [\n            [4535, 5861],\n            [31, 1],\n            [6, 14],\n            [9, 1],\n            [11, -14],\n            [8, -1],\n            [9, 10],\n            [6, -17],\n            [-12, -13],\n            [-12, 1],\n            [-12, 13],\n            [-10, -14],\n            [-5, -1],\n            [-7, -8],\n            [-25, 1]\n        ],\n        [\n            [4579, 5710],\n            [-15, 24],\n            [-11, 4],\n            [-7, 17],\n            [1, 9],\n            [-9, 13],\n            [-2, 12]\n        ],\n        [\n            [4536, 5789],\n            [15, 10],\n            [9, -2],\n            [8, 7],\n            [51, -3]\n        ],\n        [\n            [5263, 5117],\n            [-5, 9],\n            [10, 66]\n        ],\n        [\n            [5658, 7167],\n            [15, -20],\n            [22, 3],\n            [20, -4],\n            [0, -10],\n            [15, 7],\n            [-4, -18],\n            [-40, -5],\n            [1, 10],\n            [-34, 12],\n            [5, 25]\n        ],\n        [\n            [5723, 7469],\n            [-17, 2],\n            [-14, 6],\n            [-34, -16],\n            [19, -33],\n            [-14, -10],\n            [-15, 0],\n            [-15, 31],\n            [-5, -13],\n            [6, -36],\n            [14, -27],\n            [-10, -13],\n            [15, -27],\n            [14, -18],\n            [0, -33],\n            [-25, 16],\n            [8, -30],\n            [-18, -7],\n            [11, -52],\n            [-19, -1],\n            [-23, 26],\n            [-10, 47],\n            [-5, 40],\n            [-11, 27],\n            [-14, 34],\n            [-2, 16]\n        ],\n        [\n            [5583, 7470],\n            [18, 6],\n            [11, 13],\n            [15, -2],\n            [5, 11],\n            [5, 2]\n        ],\n        [\n            [5725, 7529],\n            [13, -16],\n            [-8, -37],\n            [-7, -7]\n        ],\n        [\n            [3701, 9939],\n            [93, 35],\n            [97, -2],\n            [36, 21],\n            [98, 6],\n            [222, -7],\n            [174, -47],\n            [-52, -23],\n            [-106, -3],\n            [-150, -5],\n            [14, -11],\n            [99, 7],\n            [83, -21],\n            [54, 18],\n            [23, -21],\n            [-30, -34],\n            [71, 22],\n            [135, 23],\n            [83, -12],\n            [15, -25],\n            [-113, -42],\n            [-16, -14],\n            [-88, -10],\n            [64, -3],\n            [-32, -43],\n            [-23, -38],\n            [1, -66],\n            [33, -38],\n            [-43, -3],\n            [-46, -19],\n            [52, -31],\n            [6, -50],\n            [-30, -6],\n            [36, -50],\n            [-61, -5],\n            [32, -24],\n            [-9, -20],\n            [-39, -10],\n            [-39, 0],\n            [35, -40],\n            [0, -26],\n            [-55, 24],\n            [-14, -15],\n            [37, -15],\n            [37, -36],\n            [10, -48],\n            [-49, -11],\n            [-22, 22],\n            [-34, 34],\n            [10, -40],\n            [-33, -31],\n            [73, -2],\n            [39, -3],\n            [-75, -52],\n            [-75, -46],\n            [-81, -21],\n            [-31, 0],\n            [-29, -23],\n            [-38, -62],\n            [-60, -42],\n            [-19, -2],\n            [-37, -15],\n            [-40, -13],\n            [-24, -37],\n            [0, -41],\n            [-15, -39],\n            [-45, -47],\n            [11, -47],\n            [-12, -48],\n            [-14, -58],\n            [-39, -4],\n            [-41, 49],\n            [-56, 0],\n            [-27, 32],\n            [-18, 58],\n            [-49, 73],\n            [-14, 39],\n            [-3, 53],\n            [-39, 54],\n            [10, 44],\n            [-18, 21],\n            [27, 69],\n            [42, 22],\n            [11, 25],\n            [6, 46],\n            [-32, -21],\n            [-15, -9],\n            [-25, -8],\n            [-34, 19],\n            [-2, 40],\n            [11, 31],\n            [25, 1],\n            [57, -15],\n            [-48, 37],\n            [-24, 20],\n            [-28, -8],\n            [-23, 15],\n            [31, 55],\n            [-17, 22],\n            [-22, 41],\n            [-34, 62],\n            [-35, 23],\n            [0, 25],\n            [-74, 34],\n            [-59, 5],\n            [-74, -3],\n            [-68, -4],\n            [-32, 19],\n            [-49, 37],\n            [73, 19],\n            [56, 3],\n            [-119, 15],\n            [-62, 24],\n            [3, 23],\n            [106, 28],\n            [101, 29],\n            [11, 21],\n            [-75, 22],\n            [24, 23],\n            [97, 41],\n            [40, 7],\n            [-12, 26],\n            [66, 16],\n            [86, 9],\n            [85, 1],\n            [30, -19],\n            [74, 33],\n            [66, -22],\n            [39, -5],\n            [58, -19],\n            [-66, 32],\n            [4, 25]\n        ],\n        [\n            [2497, 5869],\n            [-14, 10],\n            [-17, 1],\n            [-13, 12],\n            [-15, 24]\n        ],\n        [\n            [2438, 5916],\n            [1, 18],\n            [3, 13],\n            [-4, 12],\n            [13, 48],\n            [36, 0],\n            [1, 20],\n            [-5, 4],\n            [-3, 12],\n            [-10, 14],\n            [-11, 20],\n            [13, 0],\n            [0, 33],\n            [26, 0],\n            [26, 0]\n        ],\n        [\n            [2529, 5996],\n            [10, -11],\n            [2, 9],\n            [8, -7]\n        ],\n        [\n            [2549, 5987],\n            [-13, -23],\n            [-13, -16],\n            [-2, -12],\n            [2, -11],\n            [-5, -15]\n        ],\n        [\n            [2518, 5910],\n            [-7, -4],\n            [2, -7],\n            [-6, -6],\n            [-9, -15],\n            [-1, -9]\n        ],\n        [\n            [3340, 5552],\n            [18, -22],\n            [17, -38],\n            [1, -31],\n            [10, -1],\n            [15, -29],\n            [11, -21]\n        ],\n        [\n            [3412, 5410],\n            [-4, -53],\n            [-17, -15],\n            [1, -14],\n            [-5, -31],\n            [13, -42],\n            [9, -1],\n            [3, -33],\n            [17, -51]\n        ],\n        [\n            [3313, 5365],\n            [-19, 45],\n            [7, 16],\n            [0, 27],\n            [17, 10],\n            [7, 11],\n            [-10, 22],\n            [3, 21],\n            [22, 35]\n        ],\n        [\n            [2574, 5825],\n            [-5, 18],\n            [-8, 5]\n        ],\n        [\n            [2561, 5848],\n            [2, 24],\n            [-4, 6],\n            [-6, 4],\n            [-12, -7],\n            [-1, 8],\n            [-8, 10],\n            [-6, 12],\n            [-8, 5]\n        ],\n        [\n            [2549, 5987],\n            [3, -3],\n            [6, 11],\n            [8, 1],\n            [3, -5],\n            [4, 3],\n            [13, -6],\n            [13, 2],\n            [9, 6],\n            [3, 7],\n            [9, -3],\n            [6, -4],\n            [8, 1],\n            [5, 5],\n            [13, -8],\n            [4, -1],\n            [9, -11],\n            [8, -13],\n            [10, -9],\n            [7, -17]\n        ],\n        [\n            [2690, 5943],\n            [-9, 2],\n            [-4, -8],\n            [-10, -8],\n            [-7, 0],\n            [-6, -8],\n            [-6, 3],\n            [-4, 9],\n            [-3, -2],\n            [-4, -14],\n            [-3, 1],\n            [0, -12],\n            [-10, -17],\n            [-5, -7],\n            [-3, -7],\n            [-8, 12],\n            [-6, -16],\n            [-6, 1],\n            [-6, -2],\n            [0, -29],\n            [-4, 0],\n            [-3, -14],\n            [-9, -2]\n        ],\n        [\n            [5522, 7770],\n            [7, -23],\n            [9, -17],\n            [-11, -22]\n        ],\n        [\n            [5515, 7577],\n            [-3, -10]\n        ],\n        [\n            [5512, 7567],\n            [-26, 22],\n            [-16, 21],\n            [-26, 18],\n            [-23, 43],\n            [6, 5],\n            [-13, 25],\n            [-1, 19],\n            [-17, 10],\n            [-9, -26],\n            [-8, 20],\n            [0, 21],\n            [1, 1]\n        ],\n        [\n            [5380, 7746],\n            [20, -2],\n            [5, 9],\n            [9, -9],\n            [11, -1],\n            [0, 16],\n            [10, 6],\n            [2, 24],\n            [23, 16]\n        ],\n        [\n            [5460, 7805],\n            [8, -7],\n            [21, -26],\n            [23, -11],\n            [10, 9]\n        ],\n        [\n            [3008, 6124],\n            [-19, 10],\n            [-13, -5],\n            [-17, 5],\n            [-13, -11],\n            [-15, 18],\n            [3, 19],\n            [25, -8],\n            [21, -5],\n            [10, 13],\n            [-12, 26],\n            [0, 23],\n            [-18, 9],\n            [7, 16],\n            [17, -3],\n            [24, -9]\n        ],\n        [\n            [5471, 7900],\n            [14, -15],\n            [10, -6],\n            [24, 7],\n            [2, 12],\n            [11, 2],\n            [14, 9],\n            [3, -4],\n            [13, 8],\n            [6, 13],\n            [9, 4],\n            [30, -18],\n            [6, 6]\n        ],\n        [\n            [5613, 7918],\n            [15, -16],\n            [2, -16]\n        ],\n        [\n            [5630, 7886],\n            [-17, -12],\n            [-13, -40],\n            [-17, -40],\n            [-22, -11]\n        ],\n        [\n            [5561, 7783],\n            [-17, 2],\n            [-22, -15]\n        ],\n        [\n            [5460, 7805],\n            [-6, 20],\n            [-4, 0]\n        ],\n        [\n            [8352, 4453],\n            [-11, -2],\n            [-37, 42],\n            [26, 11],\n            [14, -18],\n            [10, -17],\n            [-2, -16]\n        ],\n        [\n            [8471, 4532],\n            [2, -11],\n            [1, -18]\n        ],\n        [\n            [8474, 4503],\n            [-18, -45],\n            [-24, -13],\n            [-3, 8],\n            [2, 20],\n            [12, 36],\n            [28, 23]\n        ],\n        [\n            [8274, 4579],\n            [10, -16],\n            [17, 5],\n            [7, -25],\n            [-32, -12],\n            [-19, -8],\n            [-15, 1],\n            [10, 34],\n            [15, 0],\n            [7, 21]\n        ],\n        [\n            [8413, 4579],\n            [-4, -32],\n            [-42, -17],\n            [-37, 7],\n            [0, 22],\n            [22, 12],\n            [18, -18],\n            [18, 5],\n            [25, 21]\n        ],\n        [\n            [8017, 4657],\n            [53, -6],\n            [6, 25],\n            [51, -29],\n            [10, -38],\n            [42, -11],\n            [34, -35],\n            [-31, -23],\n            [-31, 24],\n            [-25, -1],\n            [-29, 4],\n            [-26, 11],\n            [-32, 22],\n            [-21, 6],\n            [-11, -7],\n            [-51, 24],\n            [-5, 25],\n            [-25, 5],\n            [19, 56],\n            [34, -3],\n            [22, -23],\n            [12, -5],\n            [4, -21]\n        ],\n        [\n            [8741, 4690],\n            [-14, -40],\n            [-3, 45],\n            [5, 21],\n            [6, 20],\n            [7, -17],\n            [-1, -29]\n        ],\n        [\n            [8534, 4853],\n            [-11, -19],\n            [-19, 10],\n            [-5, 26],\n            [28, 3],\n            [7, -20]\n        ],\n        [\n            [8623, 4875],\n            [10, -45],\n            [-23, 24],\n            [-23, 5],\n            [-16, -4],\n            [-19, 2],\n            [6, 33],\n            [35, 2],\n            [30, -17]\n        ],\n        [\n            [8916, 4904],\n            [0, -193],\n            [1, -192]\n        ],\n        [\n            [8917, 4519],\n            [-25, 48],\n            [-28, 12],\n            [-7, -17],\n            [-35, -1],\n            [12, 48],\n            [17, 16],\n            [-7, 64],\n            [-14, 50],\n            [-53, 50],\n            [-23, 5],\n            [-42, 54],\n            [-8, -28],\n            [-11, -5],\n            [-6, 21],\n            [0, 26],\n            [-21, 29],\n            [29, 21],\n            [20, -1],\n            [-2, 16],\n            [-41, 0],\n            [-11, 35],\n            [-25, 11],\n            [-11, 29],\n            [37, 14],\n            [14, 20],\n            [45, -25],\n            [4, -22],\n            [8, -95],\n            [29, -35],\n            [23, 62],\n            [32, 36],\n            [25, 0],\n            [23, -21],\n            [21, -21],\n            [30, -11]\n        ],\n        [\n            [8478, 5141],\n            [-22, -58],\n            [-21, -12],\n            [-27, 12],\n            [-46, -3],\n            [-24, -8],\n            [-4, -45],\n            [24, -53],\n            [15, 27],\n            [52, 20],\n            [-2, -27],\n            [-12, 9],\n            [-12, -35],\n            [-25, -23],\n            [27, -76],\n            [-5, -20],\n            [25, -68],\n            [-1, -39],\n            [-14, -17],\n            [-11, 20],\n            [13, 49],\n            [-27, -23],\n            [-7, 16],\n            [3, 23],\n            [-20, 35],\n            [3, 57],\n            [-19, -18],\n            [2, -69],\n            [1, -84],\n            [-17, -9],\n            [-12, 18],\n            [8, 54],\n            [-4, 57],\n            [-12, 1],\n            [-9, 40],\n            [12, 39],\n            [4, 47],\n            [14, 89],\n            [5, 24],\n            [24, 44],\n            [22, -18],\n            [35, -8],\n            [32, 3],\n            [27, 43],\n            [5, -14]\n        ],\n        [\n            [8574, 5124],\n            [-2, -51],\n            [-14, 6],\n            [-4, -36],\n            [11, -32],\n            [-8, -7],\n            [-11, 38],\n            [-8, 75],\n            [6, 47],\n            [9, 22],\n            [2, -32],\n            [16, -5],\n            [3, -25]\n        ],\n        [\n            [8045, 5176],\n            [5, -39],\n            [19, -34],\n            [18, 12],\n            [18, -4],\n            [16, 30],\n            [13, 5],\n            [26, -17],\n            [23, 13],\n            [14, 82],\n            [11, 21],\n            [10, 67],\n            [32, 0],\n            [24, -10]\n        ],\n        [\n            [8274, 5302],\n            [-16, -53],\n            [20, -56],\n            [-5, -28],\n            [32, -54],\n            [-33, -7],\n            [-10, -40],\n            [2, -54],\n            [-27, -40],\n            [-1, -59],\n            [-10, -91],\n            [-5, 21],\n            [-31, -26],\n            [-11, 36],\n            [-20, 3],\n            [-14, 19],\n            [-33, -21],\n            [-10, 29],\n            [-18, -4],\n            [-23, 7],\n            [-4, 79],\n            [-14, 17],\n            [-13, 50],\n            [-4, 52],\n            [3, 55],\n            [16, 39]\n        ],\n        [\n            [7939, 4712],\n            [-31, -1],\n            [-24, 49],\n            [-35, 48],\n            [-12, 36],\n            [-21, 48],\n            [-14, 44],\n            [-21, 83],\n            [-24, 49],\n            [-9, 51],\n            [-10, 46],\n            [-25, 37],\n            [-14, 51],\n            [-21, 33],\n            [-29, 65],\n            [-3, 30],\n            [18, -2],\n            [43, -12],\n            [25, -57],\n            [21, -40],\n            [16, -25],\n            [26, -63],\n            [28, -1],\n            [23, -41],\n            [16, -49],\n            [22, -27],\n            [-12, -49],\n            [16, -20],\n            [10, -2],\n            [5, -41],\n            [10, -33],\n            [20, -5],\n            [14, -37],\n            [-7, -74],\n            [-1, -91]\n        ],\n        [\n            [7252, 6841],\n            [-17, -27],\n            [-11, -55],\n            [27, -23],\n            [26, -29],\n            [36, -33],\n            [38, -8],\n            [16, -30],\n            [22, -5],\n            [33, -14],\n            [23, 1],\n            [4, 23],\n            [-4, 38],\n            [2, 25]\n        ],\n        [\n            [7703, 6727],\n            [2, -22],\n            [-10, -11],\n            [2, -36],\n            [-19, 10],\n            [-36, -41],\n            [0, -33],\n            [-15, -50],\n            [-1, -29],\n            [-13, -48],\n            [-21, 13],\n            [-1, -61],\n            [-7, -20],\n            [3, -25],\n            [-14, -14]\n        ],\n        [\n            [7472, 6360],\n            [-4, -21],\n            [-19, 1],\n            [-34, -13],\n            [2, -44],\n            [-15, -35],\n            [-40, -40],\n            [-31, -69],\n            [-21, -38],\n            [-28, -38],\n            [0, -27],\n            [-13, -15],\n            [-26, -21],\n            [-12, -3],\n            [-9, -45],\n            [6, -77],\n            [1, -49],\n            [-11, -56],\n            [0, -101],\n            [-15, -2],\n            [-12, -46],\n            [8, -19],\n            [-25, -17],\n            [-10, -40],\n            [-11, -17],\n            [-26, 55],\n            [-13, 83],\n            [-11, 60],\n            [-9, 28],\n            [-15, 56],\n            [-7, 74],\n            [-5, 37],\n            [-25, 81],\n            [-12, 115],\n            [-8, 75],\n            [0, 72],\n            [-5, 55],\n            [-41, -35],\n            [-19, 7],\n            [-36, 71],\n            [13, 22],\n            [-8, 23],\n            [-33, 50]\n        ],\n        [\n            [6893, 6457],\n            [19, 40],\n            [61, -1],\n            [-6, 51],\n            [-15, 30],\n            [-4, 46],\n            [-18, 26],\n            [31, 62],\n            [32, -4],\n            [29, 61],\n            [18, 60],\n            [27, 60],\n            [-1, 42],\n            [24, 34],\n            [-23, 29],\n            [-9, 40],\n            [-10, 52],\n            [14, 25],\n            [42, -14],\n            [31, 9],\n            [26, 49]\n        ],\n        [\n            [4827, 8240],\n            [5, -42],\n            [-21, -53],\n            [-49, -35],\n            [-40, 9],\n            [23, 62],\n            [-15, 60],\n            [38, 46],\n            [21, 28]\n        ],\n        [\n            [6497, 7255],\n            [25, 12],\n            [19, 33],\n            [19, -1],\n            [12, 11],\n            [20, -6],\n            [31, -30],\n            [22, -6],\n            [31, -53],\n            [21, -2],\n            [3, -49]\n        ],\n        [\n            [6690, 6820],\n            [14, -31],\n            [11, -36],\n            [27, -26],\n            [1, -52],\n            [13, -10],\n            [2, -27],\n            [-40, -30],\n            [-10, -69]\n        ],\n        [\n            [6708, 6539],\n            [-53, 18],\n            [-30, 13],\n            [-31, 8],\n            [-12, 73],\n            [-13, 10],\n            [-22, -11],\n            [-28, -28],\n            [-34, 20],\n            [-28, 45],\n            [-27, 17],\n            [-18, 56],\n            [-21, 79],\n            [-15, -10],\n            [-17, 20],\n            [-11, -24]\n        ],\n        [\n            [6348, 6825],\n            [-15, 32],\n            [0, 31],\n            [-9, 0],\n            [5, 43],\n            [-15, 45],\n            [-34, 32],\n            [-19, 56],\n            [6, 46],\n            [14, 21],\n            [-2, 34],\n            [-18, 18],\n            [-18, 70]\n        ],\n        [\n            [6243, 7253],\n            [-15, 48],\n            [5, 18],\n            [-8, 68],\n            [19, 17]\n        ],\n        [\n            [6357, 7321],\n            [9, -43],\n            [26, -13],\n            [20, -29],\n            [39, -10],\n            [44, 15],\n            [2, 14]\n        ],\n        [\n            [6348, 6825],\n            [-16, 3]\n        ],\n        [\n            [6332, 6828],\n            [-19, 5],\n            [-20, -56]\n        ],\n        [\n            [6293, 6777],\n            [-52, 4],\n            [-78, 119],\n            [-41, 41],\n            [-34, 16]\n        ],\n        [\n            [6088, 6957],\n            [-11, 72]\n        ],\n        [\n            [6077, 7029],\n            [61, 62],\n            [11, 71],\n            [-3, 43],\n            [16, 15],\n            [14, 37]\n        ],\n        [\n            [6176, 7257],\n            [12, 9],\n            [32, -8],\n            [10, -15],\n            [13, 10]\n        ],\n        [\n            [4597, 8984],\n            [-7, -39],\n            [31, -40],\n            [-36, -45],\n            [-80, -41],\n            [-24, -10],\n            [-36, 8],\n            [-78, 19],\n            [28, 26],\n            [-61, 29],\n            [49, 12],\n            [-1, 17],\n            [-58, 14],\n            [19, 38],\n            [42, 9],\n            [43, -40],\n            [42, 32],\n            [35, -17],\n            [45, 32],\n            [47, -4]\n        ],\n        [\n            [5992, 6990],\n            [-5, -19]\n        ],\n        [\n            [5987, 6971],\n            [-10, 8],\n            [-6, -39],\n            [7, -7],\n            [-7, -8],\n            [-1, -15],\n            [13, 8]\n        ],\n        [\n            [5983, 6918],\n            [0, -23],\n            [-14, -95]\n        ],\n        [\n            [5951, 6902],\n            [8, 19],\n            [-2, 4],\n            [8, 27],\n            [5, 45],\n            [4, 15],\n            [1, 0]\n        ],\n        [\n            [5975, 7012],\n            [9, 0],\n            [3, 11],\n            [7, 0]\n        ],\n        [\n            [5994, 7023],\n            [1, -24],\n            [-4, -9],\n            [1, 0]\n        ],\n        [\n            [5431, 7316],\n            [-10, -46],\n            [4, -19],\n            [-6, -30],\n            [-21, 22],\n            [-14, 7],\n            [-39, 30],\n            [4, 30],\n            [32, -6],\n            [28, 7],\n            [22, 5]\n        ],\n        [\n            [5255, 7492],\n            [17, -42],\n            [-4, -78],\n            [-13, 4],\n            [-11, -20],\n            [-10, 16],\n            [-2, 71],\n            [-6, 34],\n            [15, -3],\n            [14, 18]\n        ],\n        [\n            [5383, 7805],\n            [-3, -29],\n            [7, -25]\n        ],\n        [\n            [5387, 7751],\n            [-22, 8],\n            [-23, -20],\n            [1, -30],\n            [-3, -17],\n            [9, -30],\n            [26, -29],\n            [14, -49],\n            [31, -48],\n            [22, 0],\n            [7, -13],\n            [-8, -11],\n            [25, -22],\n            [20, -18],\n            [24, -30],\n            [3, -11],\n            [-5, -22],\n            [-16, 28],\n            [-24, 10],\n            [-12, -39],\n            [20, -21],\n            [-3, -31],\n            [-11, -4],\n            [-15, -50],\n            [-12, -5],\n            [0, 18],\n            [6, 32],\n            [6, 12],\n            [-11, 35],\n            [-8, 29],\n            [-12, 8],\n            [-8, 25],\n            [-18, 11],\n            [-12, 24],\n            [-21, 4],\n            [-21, 26],\n            [-26, 39],\n            [-19, 34],\n            [-8, 58],\n            [-14, 7],\n            [-23, 20],\n            [-12, -8],\n            [-16, -28],\n            [-12, -4]\n        ],\n        [\n            [2845, 6150],\n            [19, -5],\n            [14, -15],\n            [5, -16],\n            [-19, -1],\n            [-9, -10],\n            [-15, 10],\n            [-16, 21],\n            [3, 14],\n            [12, 4],\n            [6, -2]\n        ],\n        [\n            [5992, 6990],\n            [31, -24],\n            [54, 63]\n        ],\n        [\n            [6088, 6957],\n            [-5, -8],\n            [-56, -30],\n            [28, -59],\n            [-9, -10],\n            [-5, -20],\n            [-21, -8],\n            [-7, -21],\n            [-12, -19],\n            [-31, 10]\n        ],\n        [\n            [5970, 6792],\n            [-1, 8]\n        ],\n        [\n            [5983, 6918],\n            [4, 17],\n            [0, 36]\n        ],\n        [\n            [8739, 7075],\n            [4, -20],\n            [-16, -36],\n            [-11, 19],\n            [-15, -14],\n            [-7, -34],\n            [-18, 16],\n            [0, 28],\n            [15, 36],\n            [16, -7],\n            [12, 25],\n            [20, -13]\n        ],\n        [\n            [8915, 7252],\n            [-10, -47],\n            [4, -30],\n            [-14, -42],\n            [-35, -27],\n            [-49, -4],\n            [-40, -67],\n            [-19, 22],\n            [-1, 44],\n            [-48, -13],\n            [-33, -27],\n            [-32, -2],\n            [28, -43],\n            [-19, -101],\n            [-18, -24],\n            [-13, 23],\n            [7, 53],\n            [-18, 17],\n            [-11, 41],\n            [26, 18],\n            [15, 37],\n            [28, 30],\n            [20, 41],\n            [55, 17],\n            [30, -12],\n            [29, 105],\n            [19, -28],\n            [40, 59],\n            [16, 23],\n            [18, 72],\n            [-5, 67],\n            [11, 37],\n            [30, 11],\n            [15, -82],\n            [-1, -48],\n            [-25, -59],\n            [0, -61]\n        ],\n        [\n            [8997, 7667],\n            [19, -12],\n            [20, 25],\n            [6, -67],\n            [-41, -16],\n            [-25, -59],\n            [-43, 41],\n            [-15, -65],\n            [-31, -1],\n            [-4, 59],\n            [14, 46],\n            [29, 3],\n            [8, 82],\n            [9, 46],\n            [32, -62],\n            [22, -20]\n        ],\n        [\n            [6970, 7554],\n            [-15, -10],\n            [-37, -42],\n            [-12, -42],\n            [-11, 0],\n            [-7, 28],\n            [-36, 2],\n            [-5, 48],\n            [-14, 0],\n            [2, 60],\n            [-33, 43],\n            [-48, -5],\n            [-32, -8],\n            [-27, 53],\n            [-22, 22],\n            [-43, 43],\n            [-6, 5],\n            [-71, -35],\n            [1, -218]\n        ],\n        [\n            [6554, 7498],\n            [-14, -3],\n            [-20, 46],\n            [-18, 17],\n            [-32, -12],\n            [-12, -20]\n        ],\n        [\n            [6458, 7526],\n            [-2, 14],\n            [7, 25],\n            [-5, 21],\n            [-32, 20],\n            [-13, 53],\n            [-15, 15],\n            [-1, 19],\n            [27, -6],\n            [1, 44],\n            [23, 9],\n            [25, -9],\n            [5, 58],\n            [-5, 36],\n            [-28, -2],\n            [-24, 14],\n            [-32, -26],\n            [-26, -12]\n        ],\n        [\n            [6363, 7799],\n            [-14, 9],\n            [3, 31],\n            [-18, 39],\n            [-20, -2],\n            [-24, 40],\n            [16, 45],\n            [-8, 12],\n            [22, 65],\n            [29, -34],\n            [3, 43],\n            [58, 64],\n            [43, 2],\n            [61, -41],\n            [33, -24],\n            [30, 25],\n            [44, 1],\n            [35, -30],\n            [8, 17],\n            [39, -2],\n            [7, 28],\n            [-45, 40],\n            [27, 29],\n            [-5, 16],\n            [26, 15],\n            [-20, 41],\n            [13, 20],\n            [104, 21],\n            [13, 14],\n            [70, 22],\n            [25, 24],\n            [50, -12],\n            [9, -61],\n            [29, 14],\n            [35, -20],\n            [-2, -32],\n            [27, 3],\n            [69, 56],\n            [-10, -19],\n            [35, -46],\n            [62, -150],\n            [15, 31],\n            [39, -34],\n            [39, 16],\n            [16, -11],\n            [13, -34],\n            [20, -12],\n            [11, -25],\n            [36, 8],\n            [15, -36]\n        ],\n        [\n            [7229, 7559],\n            [-17, 9],\n            [-14, 21],\n            [-42, 6],\n            [-46, 2],\n            [-10, -6],\n            [-39, 24],\n            [-16, -12],\n            [-4, -35],\n            [-46, 21],\n            [-18, -9],\n            [-7, -26]\n        ],\n        [\n            [6155, 4958],\n            [-20, -24],\n            [-7, -24],\n            [-10, -4],\n            [-4, -42],\n            [-9, -24],\n            [-5, -39],\n            [-12, -20]\n        ],\n        [\n            [6088, 4781],\n            [-40, 59],\n            [-1, 35],\n            [-101, 120],\n            [-5, 6]\n        ],\n        [\n            [5941, 5001],\n            [0, 63],\n            [8, 24],\n            [14, 39],\n            [10, 43],\n            [-13, 68],\n            [-3, 30],\n            [-13, 41]\n        ],\n        [\n            [5944, 5309],\n            [17, 35],\n            [19, 39]\n        ],\n        [\n            [6162, 5289],\n            [-24, -67],\n            [0, -215],\n            [17, -49]\n        ],\n        [\n            [7046, 7387],\n            [-53, -9],\n            [-34, 19],\n            [-30, -4],\n            [3, 34],\n            [30, -10],\n            [10, 18]\n        ],\n        [\n            [6972, 7435],\n            [21, -6],\n            [36, 43],\n            [-33, 31],\n            [-20, -15],\n            [-21, 22],\n            [24, 39],\n            [-9, 5]\n        ],\n        [\n            [7849, 5777],\n            [-7, 72],\n            [18, 49],\n            [36, 11],\n            [26, -8]\n        ],\n        [\n            [7922, 5901],\n            [23, -23],\n            [12, 40],\n            [25, -21]\n        ],\n        [\n            [7982, 5897],\n            [6, -40],\n            [-3, -71],\n            [-47, -45],\n            [13, -36],\n            [-30, -4],\n            [-24, -24]\n        ],\n        [\n            [7897, 5677],\n            [-23, 9],\n            [-11, 30],\n            [-14, 61]\n        ],\n        [\n            [8564, 7339],\n            [24, -70],\n            [7, -38],\n            [0, -68],\n            [-10, -33],\n            [-25, -11],\n            [-22, -25],\n            [-25, -5],\n            [-3, 32],\n            [5, 45],\n            [-13, 61],\n            [21, 10],\n            [-19, 51]\n        ],\n        [\n            [8504, 7288],\n            [2, 5],\n            [12, -2],\n            [11, 27],\n            [20, 2],\n            [11, 4],\n            [4, 15]\n        ],\n        [\n            [5557, 7574],\n            [5, 13]\n        ],\n        [\n            [5562, 7587],\n            [7, 4],\n            [4, 20],\n            [5, 3],\n            [4, -8],\n            [5, -4],\n            [3, -10],\n            [5, -2],\n            [5, -11],\n            [4, 0],\n            [-3, -14],\n            [-3, -7],\n            [1, -5]\n        ],\n        [\n            [5599, 7553],\n            [-6, -2],\n            [-17, -9],\n            [-1, -12],\n            [-4, 0]\n        ],\n        [\n            [6332, 6828],\n            [6, -26],\n            [-3, -13],\n            [9, -45]\n        ],\n        [\n            [6344, 6744],\n            [-19, -1],\n            [-7, 28],\n            [-25, 6]\n        ],\n        [\n            [7922, 5901],\n            [9, 26],\n            [1, 50],\n            [-22, 52],\n            [-2, 58],\n            [-21, 48],\n            [-21, 4],\n            [-6, -20],\n            [-16, -2],\n            [-8, 10],\n            [-30, -35],\n            [0, 53],\n            [7, 62],\n            [-19, 3],\n            [-2, 36],\n            [-12, 18]\n        ],\n        [\n            [7780, 6264],\n            [6, 21],\n            [24, 39]\n        ],\n        [\n            [7837, 6385],\n            [17, -47],\n            [12, -54],\n            [34, 0],\n            [11, -52],\n            [-18, -15],\n            [-8, -21],\n            [34, -36],\n            [23, -70],\n            [17, -52],\n            [21, -41],\n            [7, -41],\n            [-5, -59]\n        ],\n        [\n            [5975, 7012],\n            [10, 49],\n            [14, 41],\n            [0, 2]\n        ],\n        [\n            [5999, 7104],\n            [13, -3],\n            [4, -23],\n            [-15, -22],\n            [-7, -33]\n        ],\n        [\n            [4785, 5315],\n            [-7, 0],\n            [-29, 28],\n            [-25, 45],\n            [-24, 32],\n            [-18, 38]\n        ],\n        [\n            [4682, 5458],\n            [6, 19],\n            [2, 17],\n            [12, 33],\n            [13, 27]\n        ],\n        [\n            [5412, 6408],\n            [-20, -22],\n            [-15, 33],\n            [-44, 25]\n        ],\n        [\n            [5263, 6848],\n            [13, 14],\n            [3, 25],\n            [-3, 24],\n            [19, 23],\n            [8, 19],\n            [14, 17],\n            [2, 45]\n        ],\n        [\n            [5319, 7015],\n            [32, -20],\n            [12, 5],\n            [23, -10],\n            [37, -26],\n            [13, -53],\n            [25, -11],\n            [39, -25],\n            [30, -29],\n            [13, 15],\n            [13, 27],\n            [-6, 45],\n            [9, 29],\n            [20, 28],\n            [19, 8],\n            [37, -12],\n            [10, -27],\n            [10, 0],\n            [9, -10],\n            [28, -7],\n            [6, -19]\n        ],\n        [\n            [5694, 6357],\n            [0, -118],\n            [-32, 0],\n            [0, -25]\n        ],\n        [\n            [5662, 6214],\n            [-111, 113],\n            [-111, 113],\n            [-28, -32]\n        ],\n        [\n            [7271, 5502],\n            [-4, -62],\n            [-12, -16],\n            [-24, -14],\n            [-13, 47],\n            [-5, 85],\n            [13, 96],\n            [19, -33],\n            [13, -42],\n            [13, -61]\n        ],\n        [\n            [5804, 3347],\n            [10, -18],\n            [-9, -29],\n            [-4, -19],\n            [-16, -9],\n            [-5, -19],\n            [-10, -6],\n            [-21, 46],\n            [15, 37],\n            [15, 23],\n            [13, 12],\n            [12, -18]\n        ],\n        [\n            [5631, 8267],\n            [-2, 15],\n            [3, 16],\n            [-13, 10],\n            [-29, 10]\n        ],\n        [\n            [5590, 8318],\n            [-6, 50]\n        ],\n        [\n            [5584, 8368],\n            [32, 18],\n            [47, -4],\n            [27, 6],\n            [4, -12],\n            [15, -4],\n            [26, -29]\n        ],\n        [\n            [5652, 8242],\n            [-7, 19],\n            [-14, 6]\n        ],\n        [\n            [5584, 8368],\n            [1, 44],\n            [14, 37],\n            [26, 20],\n            [22, -44],\n            [22, 1],\n            [6, 46]\n        ],\n        [\n            [5757, 8453],\n            [14, -14],\n            [2, -28],\n            [9, -35]\n        ],\n        [\n            [4759, 6691],\n            [-4, 0],\n            [0, -31],\n            [-17, -2],\n            [-9, -14],\n            [-13, 0],\n            [-10, 8],\n            [-23, -6],\n            [-9, -46],\n            [-9, -5],\n            [-13, -74],\n            [-38, -64],\n            [-9, -81],\n            [-12, -27],\n            [-3, -21],\n            [-63, -5]\n        ],\n        [\n            [4527, 6323],\n            [1, 27],\n            [11, 17],\n            [9, 30],\n            [-2, 20],\n            [10, 42],\n            [15, 38],\n            [9, 9],\n            [8, 35],\n            [0, 31],\n            [10, 37],\n            [19, 21],\n            [18, 60],\n            [0, 1],\n            [14, 23],\n            [26, 6],\n            [22, 41],\n            [14, 16],\n            [23, 49],\n            [-7, 73],\n            [10, 51],\n            [4, 31],\n            [18, 40],\n            [28, 27],\n            [21, 25],\n            [18, 61],\n            [9, 36],\n            [20, 0],\n            [17, -25],\n            [26, 4],\n            [29, -13],\n            [12, -1]\n        ],\n        [\n            [5739, 7906],\n            [6, 9],\n            [19, 6],\n            [20, -19],\n            [12, -2],\n            [12, -16],\n            [-2, -20],\n            [11, -9],\n            [4, -25],\n            [9, -15],\n            [-2, -9],\n            [5, -6],\n            [-7, -4],\n            [-16, 1],\n            [-3, 9],\n            [-6, -5],\n            [2, -11],\n            [-7, -19],\n            [-5, -20],\n            [-7, -6]\n        ],\n        [\n            [5784, 7745],\n            [-5, 27],\n            [3, 25],\n            [-1, 26],\n            [-16, 35],\n            [-9, 25],\n            [-9, 17],\n            [-8, 6]\n        ],\n        [\n            [6376, 4321],\n            [7, -25],\n            [7, -39],\n            [4, -71],\n            [7, -28],\n            [-2, -28],\n            [-5, -18],\n            [-10, 35],\n            [-5, -18],\n            [5, -43],\n            [-2, -25],\n            [-8, -14],\n            [-1, -50],\n            [-11, -69],\n            [-14, -81],\n            [-17, -112],\n            [-11, -82],\n            [-12, -69],\n            [-23, -14],\n            [-24, -25],\n            [-16, 15],\n            [-22, 21],\n            [-8, 31],\n            [-2, 53],\n            [-10, 47],\n            [-2, 42],\n            [5, 43],\n            [13, 10],\n            [0, 20],\n            [13, 45],\n            [2, 37],\n            [-6, 28],\n            [-5, 38],\n            [-2, 54],\n            [9, 33],\n            [4, 38],\n            [14, 2],\n            [15, 12],\n            [11, 10],\n            [12, 1],\n            [16, 34],\n            [23, 36],\n            [8, 30],\n            [-4, 25],\n            [12, -7],\n            [15, 41],\n            [1, 36],\n            [9, 26],\n            [10, -25]\n        ],\n        [\n            [2301, 6586],\n            [-10, -52],\n            [-5, -43],\n            [-2, -79],\n            [-3, -29],\n            [5, -32],\n            [9, -29],\n            [5, -45],\n            [19, -44],\n            [6, -34],\n            [11, -29],\n            [29, -16],\n            [12, -25],\n            [24, 17],\n            [21, 6],\n            [21, 11],\n            [18, 10],\n            [17, 24],\n            [7, 34],\n            [2, 50],\n            [5, 17],\n            [19, 16],\n            [29, 13],\n            [25, -2],\n            [17, 5],\n            [6, -12],\n            [-1, -29],\n            [-15, -35],\n            [-6, -36],\n            [5, -10],\n            [-4, -26],\n            [-7, -46],\n            [-7, 15],\n            [-6, -1]\n        ],\n        [\n            [2438, 5916],\n            [-32, 64],\n            [-14, 19],\n            [-23, 16],\n            [-15, -5],\n            [-22, -22],\n            [-14, -6],\n            [-20, 16],\n            [-21, 11],\n            [-26, 27],\n            [-21, 8],\n            [-31, 28],\n            [-23, 28],\n            [-7, 16],\n            [-16, 3],\n            [-28, 19],\n            [-12, 27],\n            [-30, 34],\n            [-14, 37],\n            [-6, 29],\n            [9, 5],\n            [-3, 17],\n            [7, 16],\n            [0, 20],\n            [-10, 27],\n            [-2, 23],\n            [-9, 30],\n            [-25, 59],\n            [-28, 46],\n            [-13, 37],\n            [-24, 24],\n            [-5, 14],\n            [4, 37],\n            [-14, 13],\n            [-17, 29],\n            [-7, 41],\n            [-14, 5],\n            [-17, 31],\n            [-13, 29],\n            [-1, 19],\n            [-15, 44],\n            [-10, 45],\n            [1, 23],\n            [-20, 23],\n            [-10, -2],\n            [-15, 16],\n            [-5, -24],\n            [5, -28],\n            [2, -45],\n            [10, -24],\n            [21, -41],\n            [4, -14],\n            [4, -4],\n            [4, -20],\n            [5, 1],\n            [6, -38],\n            [8, -15],\n            [6, -21],\n            [17, -30],\n            [10, -55],\n            [8, -26],\n            [8, -28],\n            [1, -31],\n            [13, -2],\n            [12, -27],\n            [10, -26],\n            [-1, -11],\n            [-12, -21],\n            [-5, 0],\n            [-7, 36],\n            [-18, 33],\n            [-20, 29],\n            [-14, 15],\n            [1, 43],\n            [-5, 32],\n            [-13, 19],\n            [-19, 26],\n            [-4, -8],\n            [-7, 16],\n            [-17, 14],\n            [-16, 34],\n            [2, 5],\n            [11, -4],\n            [11, 22],\n            [1, 27],\n            [-22, 42],\n            [-16, 17],\n            [-10, 36],\n            [-11, 39],\n            [-12, 47],\n            [-12, 54]\n        ],\n        [\n            [1746, 6980],\n            [32, 4],\n            [35, 7],\n            [-2, -12],\n            [41, -29],\n            [64, -41],\n            [55, 0],\n            [22, 0],\n            [0, 24],\n            [48, 0],\n            [10, -20],\n            [15, -19],\n            [16, -26],\n            [9, -31],\n            [7, -32],\n            [15, -18],\n            [23, -18],\n            [17, 47],\n            [23, 1],\n            [19, -24],\n            [14, -40],\n            [10, -35],\n            [16, -34],\n            [6, -41],\n            [8, -28],\n            [22, -18],\n            [20, -13],\n            [10, 2]\n        ],\n        [\n            [5599, 7553],\n            [9, 4],\n            [13, 1]\n        ],\n        [\n            [4661, 5921],\n            [10, 11],\n            [4, 35],\n            [9, 1],\n            [20, -16],\n            [15, 11],\n            [11, -4],\n            [4, 13],\n            [112, 1],\n            [6, 42],\n            [-5, 7],\n            [-13, 255],\n            [-14, 255],\n            [43, 1]\n        ],\n        [\n            [5118, 6189],\n            [0, -136],\n            [-15, -39],\n            [-2, -37],\n            [-25, -9],\n            [-38, -5],\n            [-10, -21],\n            [-18, -3]\n        ],\n        [\n            [4680, 5793],\n            [1, 18],\n            [-2, 23],\n            [-11, 16],\n            [-5, 34],\n            [-2, 37]\n        ],\n        [\n            [7737, 5644],\n            [-3, 44],\n            [9, 45],\n            [-10, 35],\n            [3, 65],\n            [-12, 30],\n            [-9, 71],\n            [-5, 75],\n            [-12, 49],\n            [-18, -30],\n            [-32, -42],\n            [-15, 5],\n            [-17, 14],\n            [9, 73],\n            [-6, 56],\n            [-21, 68],\n            [3, 21],\n            [-16, 7],\n            [-20, 49]\n        ],\n        [\n            [7780, 6264],\n            [-16, -14],\n            [-16, -26],\n            [-20, -2],\n            [-12, -64],\n            [-12, -11],\n            [14, -52],\n            [17, -43],\n            [12, -39],\n            [-11, -51],\n            [-9, -11],\n            [6, -30],\n            [19, -47],\n            [3, -33],\n            [0, -27],\n            [11, -54],\n            [-16, -55],\n            [-13, -61]\n        ],\n        [\n            [5538, 7532],\n            [-6, 4],\n            [-8, 19],\n            [-12, 12]\n        ],\n        [\n            [5533, 7629],\n            [8, -10],\n            [4, -9],\n            [9, -6],\n            [10, -12],\n            [-2, -5]\n        ],\n        [\n            [7437, 7970],\n            [29, 10],\n            [53, 51],\n            [42, 28],\n            [24, -18],\n            [29, -1],\n            [19, -28],\n            [28, -2],\n            [40, -15],\n            [27, 41],\n            [-11, 35],\n            [28, 61],\n            [31, -24],\n            [26, -7],\n            [32, -15],\n            [6, -44],\n            [39, -25],\n            [26, 11],\n            [36, 7],\n            [27, -7],\n            [28, -29],\n            [16, -30],\n            [26, 1],\n            [35, -10],\n            [26, 15],\n            [36, 9],\n            [41, 42],\n            [17, -6],\n            [14, -20],\n            [33, 5]\n        ],\n        [\n            [5959, 4377],\n            [21, 5],\n            [34, -17],\n            [7, 8],\n            [19, 1],\n            [10, 18],\n            [17, -1],\n            [30, 23],\n            [22, 34]\n        ],\n        [\n            [6119, 4448],\n            [5, -26],\n            [-1, -59],\n            [3, -52],\n            [1, -92],\n            [5, -29],\n            [-8, -43],\n            [-11, -41],\n            [-18, -36],\n            [-25, -23],\n            [-31, -28],\n            [-32, -64],\n            [-10, -11],\n            [-20, -42],\n            [-11, -13],\n            [-3, -42],\n            [14, -45],\n            [5, -35],\n            [0, -17],\n            [5, 3],\n            [-1, -58],\n            [-4, -28],\n            [6, -10],\n            [-4, -25],\n            [-11, -21],\n            [-23, -20],\n            [-34, -32],\n            [-12, -21],\n            [3, -25],\n            [7, -4],\n            [-3, -31]\n        ],\n        [\n            [5911, 3478],\n            [-21, 0]\n        ],\n        [\n            [5890, 3478],\n            [-2, 26],\n            [-4, 27]\n        ],\n        [\n            [5884, 3531],\n            [-3, 21],\n            [5, 66],\n            [-7, 42],\n            [-13, 83]\n        ],\n        [\n            [5866, 3743],\n            [29, 67],\n            [7, 43],\n            [5, 5],\n            [3, 35],\n            [-5, 17],\n            [1, 44],\n            [6, 41],\n            [0, 75],\n            [-15, 19],\n            [-13, 4],\n            [-6, 15],\n            [-13, 12],\n            [-23, -1],\n            [-2, 22]\n        ],\n        [\n            [5840, 4141],\n            [-2, 42],\n            [84, 49]\n        ],\n        [\n            [5922, 4232],\n            [16, -28],\n            [8, 5],\n            [11, -15],\n            [1, -23],\n            [-6, -28],\n            [2, -42],\n            [19, -36],\n            [8, 41],\n            [12, 12],\n            [-2, 76],\n            [-12, 43],\n            [-10, 19],\n            [-10, -1],\n            [-7, 77],\n            [7, 45]\n        ],\n        [\n            [4661, 5921],\n            [-18, 41],\n            [-17, 43],\n            [-18, 16],\n            [-13, 17],\n            [-16, -1],\n            [-13, -12],\n            [-14, 5],\n            [-10, -19]\n        ],\n        [\n            [4542, 6011],\n            [-2, 32],\n            [8, 29],\n            [3, 55],\n            [-3, 59],\n            [-3, 29],\n            [2, 30],\n            [-7, 28],\n            [-14, 25]\n        ],\n        [\n            [4526, 6298],\n            [6, 20],\n            [108, -1],\n            [-5, 86],\n            [7, 30],\n            [26, 5],\n            [-1, 152],\n            [91, -4],\n            [0, 90]\n        ],\n        [\n            [5922, 4232],\n            [-15, 15],\n            [9, 55],\n            [9, 21],\n            [-6, 49],\n            [6, 48],\n            [5, 16],\n            [-7, 50],\n            [-14, 26]\n        ],\n        [\n            [5909, 4512],\n            [28, -11],\n            [5, -16],\n            [10, -28],\n            [7, -80]\n        ],\n        [\n            [7836, 5425],\n            [7, -5],\n            [16, -36],\n            [12, -40],\n            [2, -39],\n            [-3, -27],\n            [2, -21],\n            [2, -35],\n            [10, -16],\n            [11, -52],\n            [-1, -20],\n            [-19, -4],\n            [-27, 44],\n            [-32, 47],\n            [-4, 30],\n            [-16, 39],\n            [-4, 49],\n            [-10, 32],\n            [4, 43],\n            [-7, 25]\n        ],\n        [\n            [7779, 5439],\n            [5, 11],\n            [23, -26],\n            [2, -30],\n            [18, 7],\n            [9, 24]\n        ],\n        [\n            [8045, 5176],\n            [21, -20],\n            [21, 11],\n            [6, 50],\n            [12, 11],\n            [33, 13],\n            [20, 47],\n            [14, 37]\n        ],\n        [\n            [8206, 5379],\n            [22, 41],\n            [14, 47],\n            [11, 0],\n            [14, -30],\n            [1, -26],\n            [19, -16],\n            [23, -18],\n            [-2, -23],\n            [-19, -3],\n            [5, -29],\n            [-20, -20]\n        ],\n        [\n            [5453, 3369],\n            [-20, 45],\n            [-11, 43],\n            [-6, 58],\n            [-7, 42],\n            [-9, 91],\n            [-1, 71],\n            [-3, 32],\n            [-11, 25],\n            [-15, 48],\n            [-14, 71],\n            [-6, 37],\n            [-23, 58],\n            [-2, 45]\n        ],\n        [\n            [5644, 4022],\n            [23, 14],\n            [18, -4],\n            [11, -13],\n            [0, -5]\n        ],\n        [\n            [5552, 3594],\n            [0, -218],\n            [-25, -30],\n            [-15, -4],\n            [-17, 11],\n            [-13, 4],\n            [-4, 25],\n            [-11, 17],\n            [-14, -30]\n        ],\n        [\n            [9604, 3812],\n            [23, -36],\n            [14, -28],\n            [-10, -14],\n            [-16, 16],\n            [-19, 27],\n            [-18, 31],\n            [-19, 42],\n            [-4, 20],\n            [12, -1],\n            [16, -20],\n            [12, -20],\n            [9, -17]\n        ],\n        [\n            [5412, 6408],\n            [7, -92],\n            [10, -15],\n            [1, -19],\n            [11, -20],\n            [-6, -25],\n            [-11, -120],\n            [-1, -77],\n            [-35, -56],\n            [-12, -78],\n            [11, -22],\n            [0, -38],\n            [18, -1],\n            [-3, -28]\n        ],\n        [\n            [5393, 5795],\n            [-5, -1],\n            [-19, 64],\n            [-6, 3],\n            [-22, -33],\n            [-21, 17],\n            [-15, 3],\n            [-8, -8],\n            [-17, 2],\n            [-16, -25],\n            [-14, -2],\n            [-34, 31],\n            [-13, -15],\n            [-14, 1],\n            [-10, 23],\n            [-28, 22],\n            [-30, -7],\n            [-7, -13],\n            [-4, -34],\n            [-8, -24],\n            [-2, -53]\n        ],\n        [\n            [5236, 5339],\n            [-29, -21],\n            [-11, 3],\n            [-10, -13],\n            [-23, 1],\n            [-15, 37],\n            [-9, 43],\n            [-19, 39],\n            [-21, -1],\n            [-25, 0]\n        ],\n        [\n            [2619, 5713],\n            [-10, 18],\n            [-13, 24],\n            [-6, 20],\n            [-12, 19],\n            [-13, 26],\n            [3, 9],\n            [4, -9],\n            [2, 5]\n        ],\n        [\n            [2690, 5943],\n            [-2, -5],\n            [-2, -13],\n            [3, -22],\n            [-6, -20],\n            [-3, -24],\n            [-1, -26],\n            [1, -15],\n            [1, -27],\n            [-4, -6],\n            [-3, -25],\n            [2, -15],\n            [-6, -16],\n            [2, -16],\n            [4, -9]\n        ],\n        [\n            [5092, 8091],\n            [14, 16],\n            [24, 87],\n            [38, 25],\n            [23, -2]\n        ],\n        [\n            [5863, 9167],\n            [-47, -24],\n            [-22, -5]\n        ],\n        [\n            [5573, 9140],\n            [-17, -2],\n            [-4, -39],\n            [-53, 9],\n            [-7, -33],\n            [-27, 1],\n            [-18, -42],\n            [-28, -66],\n            [-43, -83],\n            [10, -20],\n            [-10, -24],\n            [-27, 1],\n            [-18, -55],\n            [2, -79],\n            [17, -29],\n            [-9, -70],\n            [-23, -40],\n            [-12, -34]\n        ],\n        [\n            [5306, 8535],\n            [-19, 36],\n            [-55, -69],\n            [-37, -13],\n            [-38, 30],\n            [-10, 63],\n            [-9, 137],\n            [26, 38],\n            [73, 49],\n            [55, 61],\n            [51, 82],\n            [66, 115],\n            [47, 44],\n            [76, 74],\n            [61, 26],\n            [46, -3],\n            [42, 49],\n            [51, -3],\n            [50, 12],\n            [87, -43],\n            [-36, -16],\n            [30, -37]\n        ],\n        [\n            [5686, 9657],\n            [-62, -24],\n            [-49, 13],\n            [19, 16],\n            [-16, 19],\n            [57, 11],\n            [11, -22],\n            [40, -13]\n        ],\n        [\n            [5506, 9766],\n            [92, -44],\n            [-70, -23],\n            [-15, -44],\n            [-25, -11],\n            [-13, -49],\n            [-34, -2],\n            [-59, 36],\n            [25, 21],\n            [-42, 17],\n            [-54, 50],\n            [-21, 46],\n            [75, 21],\n            [16, -20],\n            [39, 0],\n            [11, 21],\n            [40, 2],\n            [35, -21]\n        ],\n        [\n            [5706, 9808],\n            [55, -21],\n            [-41, -32],\n            [-81, -7],\n            [-82, 10],\n            [-5, 16],\n            [-40, 1],\n            [-30, 27],\n            [86, 17],\n            [40, -14],\n            [28, 17],\n            [70, -14]\n        ],\n        [\n            [9805, 2640],\n            [6, -24],\n            [20, 24],\n            [8, -25],\n            [0, -25],\n            [-10, -27],\n            [-18, -44],\n            [-14, -24],\n            [10, -28],\n            [-22, -1],\n            [-23, -22],\n            [-8, -39],\n            [-16, -60],\n            [-21, -26],\n            [-14, -17],\n            [-26, 1],\n            [-18, 20],\n            [-30, 4],\n            [-5, 22],\n            [15, 43],\n            [35, 59],\n            [18, 11],\n            [20, 22],\n            [24, 31],\n            [16, 31],\n            [13, 44],\n            [10, 15],\n            [5, 33],\n            [19, 27],\n            [6, -25]\n        ],\n        [\n            [9849, 2922],\n            [20, -63],\n            [1, 41],\n            [13, -16],\n            [4, -45],\n            [22, -19],\n            [19, -5],\n            [16, 22],\n            [14, -6],\n            [-7, -53],\n            [-8, -34],\n            [-22, 1],\n            [-7, -18],\n            [3, -25],\n            [-4, -11],\n            [-11, -32],\n            [-14, -41],\n            [-21, -23],\n            [-5, 15],\n            [-12, 9],\n            [16, 48],\n            [-9, 33],\n            [-30, 23],\n            [1, 22],\n            [20, 20],\n            [5, 46],\n            [-1, 38],\n            [-12, 40],\n            [1, 10],\n            [-13, 25],\n            [-22, 52],\n            [-12, 42],\n            [11, 4],\n            [15, -33],\n            [21, -15],\n            [8, -52]\n        ],\n        [\n            [6475, 6041],\n            [-9, 41],\n            [-22, 98]\n        ],\n        [\n            [6444, 6180],\n            [83, 59],\n            [19, 118],\n            [-13, 42]\n        ],\n        [\n            [6566, 6530],\n            [12, -40],\n            [16, -22],\n            [20, -8],\n            [17, -10],\n            [12, -34],\n            [8, -20],\n            [10, -7],\n            [0, -13],\n            [-10, -36],\n            [-5, -16],\n            [-12, -19],\n            [-10, -41],\n            [-13, 3],\n            [-5, -14],\n            [-5, -30],\n            [4, -39],\n            [-3, -7],\n            [-13, 0],\n            [-17, -22],\n            [-3, -29],\n            [-6, -12],\n            [-18, 0],\n            [-10, -15],\n            [0, -24],\n            [-14, -16],\n            [-15, 5],\n            [-19, -19],\n            [-12, -4]\n        ],\n        [\n            [6557, 6597],\n            [8, 20],\n            [3, -5],\n            [-2, -25],\n            [-4, -10]\n        ],\n        [\n            [6893, 6457],\n            [-20, 15],\n            [-9, 43],\n            [-21, 45],\n            [-51, -12],\n            [-45, -1],\n            [-39, -8]\n        ],\n        [\n            [2836, 5484],\n            [-9, 17],\n            [-6, 32],\n            [7, 16],\n            [-7, 4],\n            [-5, 20],\n            [-14, 16],\n            [-12, -4],\n            [-6, -20],\n            [-11, -15],\n            [-6, -2],\n            [-3, -13],\n            [13, -32],\n            [-7, -7],\n            [-4, -9],\n            [-13, -3],\n            [-5, 35],\n            [-4, -10],\n            [-9, 4],\n            [-5, 24],\n            [-12, 3],\n            [-7, 7],\n            [-12, 0],\n            [-1, -13],\n            [-3, 9]\n        ],\n        [\n            [2707, 5623],\n            [10, -22],\n            [-1, -12],\n            [11, -3],\n            [3, 5],\n            [8, -14],\n            [13, 4],\n            [12, 15],\n            [17, 12],\n            [9, 17],\n            [16, -3],\n            [-1, -6],\n            [15, -2],\n            [12, -10],\n            [10, -18],\n            [10, -16]\n        ],\n        [\n            [3045, 3974],\n            [-28, 33],\n            [-2, 25],\n            [-55, 59],\n            [-50, 65],\n            [-22, 36],\n            [-11, 49],\n            [4, 17],\n            [-23, 77],\n            [-28, 109],\n            [-26, 118],\n            [-11, 27],\n            [-9, 43],\n            [-21, 39],\n            [-20, 24],\n            [9, 26],\n            [-14, 57],\n            [9, 41],\n            [22, 37]\n        ],\n        [\n            [8510, 5555],\n            [2, -40],\n            [2, -33],\n            [-9, -54],\n            [-11, 60],\n            [-13, -30],\n            [9, -43],\n            [-8, -28],\n            [-32, 35],\n            [-8, 42],\n            [8, 28],\n            [-17, 28],\n            [-9, -24],\n            [-13, 2],\n            [-21, -33],\n            [-4, 17],\n            [11, 50],\n            [17, 17],\n            [15, 22],\n            [10, -27],\n            [21, 17],\n            [5, 26],\n            [19, 1],\n            [-1, 46],\n            [22, -28],\n            [3, -30],\n            [2, -21]\n        ],\n        [\n            [8443, 5665],\n            [-10, -20],\n            [-9, -37],\n            [-8, -17],\n            [-17, 40],\n            [5, 16],\n            [7, 17],\n            [3, 36],\n            [16, 4],\n            [-5, -40],\n            [21, 57],\n            [-3, -56]\n        ],\n        [\n            [8291, 5608],\n            [-37, -56],\n            [14, 41],\n            [20, 37],\n            [16, 41],\n            [15, 58],\n            [5, -48],\n            [-18, -33],\n            [-15, -40]\n        ],\n        [\n            [8385, 5760],\n            [16, -18],\n            [18, 0],\n            [0, -25],\n            [-13, -25],\n            [-18, -18],\n            [-1, 28],\n            [2, 30],\n            [-4, 28]\n        ],\n        [\n            [8485, 5776],\n            [8, -66],\n            [-21, 16],\n            [0, -20],\n            [7, -37],\n            [-13, -13],\n            [-1, 42],\n            [-9, 3],\n            [-4, 36],\n            [16, -5],\n            [0, 22],\n            [-17, 45],\n            [27, -1],\n            [7, -22]\n        ],\n        [\n            [8375, 5830],\n            [-7, -51],\n            [-12, 29],\n            [-15, 45],\n            [24, -2],\n            [10, -21]\n        ],\n        [\n            [8369, 6151],\n            [17, -17],\n            [9, 15],\n            [2, -15],\n            [-4, -24],\n            [9, -43],\n            [-7, -49],\n            [-16, -19],\n            [-5, -48],\n            [7, -47],\n            [14, -7],\n            [13, 7],\n            [34, -32],\n            [-2, -32],\n            [9, -15],\n            [-3, -27],\n            [-22, 29],\n            [-10, 31],\n            [-7, -22],\n            [-18, 36],\n            [-25, -9],\n            [-14, 13],\n            [1, 25],\n            [9, 15],\n            [-8, 13],\n            [-4, -21],\n            [-14, 34],\n            [-4, 26],\n            [-1, 56],\n            [11, -19],\n            [3, 92],\n            [9, 54],\n            [17, 0]\n        ],\n        [\n            [9329, 4655],\n            [-8, -6],\n            [-12, 22],\n            [-12, 38],\n            [-6, 45],\n            [4, 6],\n            [3, -18],\n            [8, -13],\n            [14, -38],\n            [13, -20],\n            [-4, -16]\n        ],\n        [\n            [9221, 4734],\n            [-15, -5],\n            [-4, -17],\n            [-15, -14],\n            [-15, -14],\n            [-14, 0],\n            [-23, 18],\n            [-16, 16],\n            [2, 18],\n            [25, -8],\n            [15, 4],\n            [5, 29],\n            [4, 1],\n            [2, -31],\n            [16, 4],\n            [8, 20],\n            [16, 21],\n            [-4, 35],\n            [17, 1],\n            [6, -9],\n            [-1, -33],\n            [-9, -36]\n        ],\n        [\n            [8916, 4904],\n            [48, -41],\n            [51, -34],\n            [19, -30],\n            [16, -30],\n            [4, -34],\n            [46, -37],\n            [7, -31],\n            [-25, -7],\n            [6, -39],\n            [25, -39],\n            [18, -62],\n            [15, 2],\n            [-1, -27],\n            [22, -10],\n            [-9, -11],\n            [30, -25],\n            [-3, -17],\n            [-18, -4],\n            [-7, 16],\n            [-24, 6],\n            [-28, 9],\n            [-22, 38],\n            [-16, 32],\n            [-14, 52],\n            [-36, 26],\n            [-24, -17],\n            [-17, -20],\n            [4, -43],\n            [-22, -20],\n            [-16, 9],\n            [-28, 3]\n        ],\n        [\n            [9253, 4792],\n            [-9, -16],\n            [-5, 35],\n            [-6, 23],\n            [-13, 19],\n            [-16, 25],\n            [-20, 18],\n            [8, 14],\n            [15, -17],\n            [9, -13],\n            [12, -14],\n            [11, -25],\n            [11, -19],\n            [3, -30]\n        ],\n        [\n            [5392, 8233],\n            [19, 18],\n            [43, 27],\n            [35, 20],\n            [28, -10],\n            [2, -14],\n            [27, -1]\n        ],\n        [\n            [5546, 8273],\n            [34, -7],\n            [51, 1]\n        ],\n        [\n            [5653, 8105],\n            [14, -52],\n            [-3, -17],\n            [-14, -6],\n            [-25, -50],\n            [7, -26],\n            [-6, 3]\n        ],\n        [\n            [5626, 7957],\n            [-26, 23],\n            [-20, -8],\n            [-13, 6],\n            [-17, -13],\n            [-14, 21],\n            [-11, -8],\n            [-2, 4]\n        ],\n        [\n            [3159, 6151],\n            [14, -5],\n            [5, -12],\n            [-7, -15],\n            [-21, 1],\n            [-17, -2],\n            [-1, 25],\n            [4, 9],\n            [23, -1]\n        ],\n        [\n            [8628, 7562],\n            [4, -10]\n        ],\n        [\n            [8632, 7552],\n            [-11, 3],\n            [-12, -20],\n            [-8, -20],\n            [1, -42],\n            [-14, -13],\n            [-5, -11],\n            [-11, -17],\n            [-18, -10],\n            [-12, -16],\n            [-1, -25],\n            [-3, -7],\n            [11, -9],\n            [15, -26]\n        ],\n        [\n            [8504, 7288],\n            [-13, 11],\n            [-4, -11],\n            [-8, -5],\n            [-1, 11],\n            [-7, 5],\n            [-8, 10],\n            [8, 26],\n            [7, 7],\n            [-3, 11],\n            [7, 31],\n            [-2, 10],\n            [-16, 7],\n            [-13, 15]\n        ],\n        [\n            [4792, 7249],\n            [-11, -15],\n            [-14, 8],\n            [-15, -6],\n            [5, 46],\n            [-3, 36],\n            [-12, 6],\n            [-7, 22],\n            [2, 39],\n            [11, 21],\n            [2, 24],\n            [6, 36],\n            [-1, 25],\n            [-5, 21],\n            [-1, 20]\n        ],\n        [\n            [6411, 6520],\n            [-2, 43],\n            [7, 31],\n            [8, 6],\n            [8, -18],\n            [1, -35],\n            [-6, -35]\n        ],\n        [\n            [6427, 6512],\n            [-8, -4],\n            [-8, 12]\n        ],\n        [\n            [5630, 7886],\n            [12, 13],\n            [17, -7],\n            [18, 0],\n            [13, -14],\n            [10, 9],\n            [20, 5],\n            [7, 14],\n            [12, 0]\n        ],\n        [\n            [5784, 7745],\n            [12, -11],\n            [13, 9],\n            [13, -10]\n        ],\n        [\n            [5822, 7733],\n            [0, -15],\n            [-13, -13],\n            [-9, 6],\n            [-7, -71]\n        ],\n        [\n            [5629, 7671],\n            [-5, 10],\n            [6, 10],\n            [-7, 7],\n            [-8, -13],\n            [-17, 17],\n            [-2, 25],\n            [-17, 14],\n            [-3, 18],\n            [-15, 24]\n        ],\n        [\n            [8989, 8056],\n            [28, -105],\n            [-41, 19],\n            [-17, -85],\n            [27, -61],\n            [-1, -41],\n            [-21, 36],\n            [-18, -46],\n            [-5, 50],\n            [3, 57],\n            [-3, 64],\n            [6, 45],\n            [2, 79],\n            [-17, 58],\n            [3, 80],\n            [25, 28],\n            [-11, 27],\n            [13, 8],\n            [7, -39],\n            [10, -57],\n            [-1, -58],\n            [11, -59]\n        ],\n        [\n            [5546, 8273],\n            [6, 26],\n            [38, 19]\n        ],\n        [\n            [0, 9132],\n            [68, -45],\n            [73, -59],\n            [-3, -37],\n            [19, -15],\n            [-6, 43],\n            [75, -8],\n            [55, -56],\n            [-28, -26],\n            [-46, -6],\n            [0, -57],\n            [-11, -13],\n            [-26, 2],\n            [-22, 21],\n            [-36, 17],\n            [-7, 26],\n            [-28, 9],\n            [-31, -7],\n            [-16, 20],\n            [6, 22],\n            [-33, -14],\n            [13, -28],\n            [-16, -25]\n        ],\n        [\n            [0, 8896],\n            [0, 236]\n        ],\n        [\n            [0, 9282],\n            [9999, -40],\n            [-30, -3],\n            [-5, 19],\n            [-9964, 24]\n        ],\n        [\n            [0, 9282],\n            [4, 3],\n            [23, 0],\n            [40, -17],\n            [-2, -8],\n            [-29, -14],\n            [-36, -4],\n            [0, 40]\n        ],\n        [\n            [8988, 9383],\n            [-42, -1],\n            [-57, 7],\n            [-5, 3],\n            [27, 23],\n            [34, 6],\n            [40, -23],\n            [3, -15]\n        ],\n        [\n            [9186, 9493],\n            [-32, -23],\n            [-44, 5],\n            [-52, 23],\n            [7, 20],\n            [51, -9],\n            [70, -16]\n        ],\n        [\n            [9029, 9522],\n            [-22, -44],\n            [-102, 1],\n            [-46, -14],\n            [-55, 39],\n            [15, 40],\n            [37, 11],\n            [73, -2],\n            [100, -31]\n        ],\n        [\n            [6598, 9235],\n            [-17, -5],\n            [-91, 8],\n            [-7, 26],\n            [-50, 16],\n            [-4, 32],\n            [28, 13],\n            [-1, 32],\n            [55, 50],\n            [-25, 7],\n            [66, 52],\n            [-7, 27],\n            [62, 31],\n            [91, 38],\n            [93, 11],\n            [48, 22],\n            [54, 8],\n            [19, -23],\n            [-19, -19],\n            [-98, -29],\n            [-85, -28],\n            [-86, -57],\n            [-42, -57],\n            [-43, -57],\n            [5, -49],\n            [54, -49]\n        ],\n        [\n            [0, 8896],\n            [9963, -26],\n            [-36, 4],\n            [25, -31],\n            [17, -49],\n            [13, -16],\n            [3, -24],\n            [-7, -16],\n            [-52, 13],\n            [-78, -44],\n            [-25, -7],\n            [-42, -42],\n            [-40, -36],\n            [-11, -27],\n            [-39, 41],\n            [-73, -46],\n            [-12, 22],\n            [-27, -26],\n            [-37, 8],\n            [-9, -38],\n            [-33, -58],\n            [1, -24],\n            [31, -13],\n            [-4, -86],\n            [-25, -2],\n            [-12, -49],\n            [11, -26],\n            [-48, -30],\n            [-10, -67],\n            [-41, -15],\n            [-9, -60],\n            [-40, -55],\n            [-10, 41],\n            [-12, 86],\n            [-15, 131],\n            [13, 82],\n            [23, 35],\n            [2, 28],\n            [43, 13],\n            [50, 75],\n            [47, 60],\n            [50, 48],\n            [23, 83],\n            [-34, -5],\n            [-17, -49],\n            [-70, -65],\n            [-23, 73],\n            [-72, -20],\n            [-69, -99],\n            [23, -36],\n            [-62, -16],\n            [-43, -6],\n            [2, 43],\n            [-43, 9],\n            [-35, -29],\n            [-85, 10],\n            [-91, -18],\n            [-90, -115],\n            [-106, -139],\n            [43, -8],\n            [14, -37],\n            [27, -13],\n            [18, 30],\n            [30, -4],\n            [40, -65],\n            [1, -50],\n            [-21, -59],\n            [-3, -71],\n            [-12, -94],\n            [-42, -86],\n            [-9, -41],\n            [-38, -69],\n            [-38, -68],\n            [-18, -35],\n            [-37, -34],\n            [-17, -1],\n            [-17, 29],\n            [-38, -44],\n            [-4, -19]\n        ],\n        [\n            [6363, 7799],\n            [-12, -35],\n            [-27, -10],\n            [-28, -61],\n            [25, -56],\n            [-2, -40],\n            [30, -70]\n        ],\n        [\n            [6109, 7624],\n            [-35, 49],\n            [-32, 23],\n            [-24, 34],\n            [20, 10],\n            [23, 49],\n            [-15, 24],\n            [41, 24],\n            [-1, 13],\n            [-25, -10]\n        ],\n        [\n            [6061, 7840],\n            [1, 26],\n            [14, 17],\n            [27, 4],\n            [5, 20],\n            [-7, 33],\n            [12, 30],\n            [-1, 18],\n            [-41, 19],\n            [-16, -1],\n            [-17, 28],\n            [-21, -9],\n            [-35, 20],\n            [0, 12],\n            [-10, 26],\n            [-22, 3],\n            [-2, 18],\n            [7, 12],\n            [-18, 33],\n            [-29, -5],\n            [-8, 3],\n            [-7, -14],\n            [-11, 3]\n        ],\n        [\n            [5777, 8571],\n            [31, 33],\n            [-29, 28]\n        ],\n        [\n            [5863, 9167],\n            [29, 20],\n            [46, -35],\n            [76, -14],\n            [105, -67],\n            [21, -28],\n            [2, -40],\n            [-31, -31],\n            [-45, -15],\n            [-124, 44],\n            [-21, -7],\n            [45, -43],\n            [2, -28],\n            [2, -60],\n            [36, -18],\n            [22, -15],\n            [3, 28],\n            [-17, 26],\n            [18, 22],\n            [67, -37],\n            [24, 15],\n            [-19, 43],\n            [65, 58],\n            [25, -4],\n            [26, -20],\n            [16, 40],\n            [-23, 35],\n            [14, 36],\n            [-21, 36],\n            [78, -18],\n            [16, -34],\n            [-35, -7],\n            [0, -33],\n            [22, -20],\n            [43, 13],\n            [7, 38],\n            [58, 28],\n            [97, 50],\n            [20, -3],\n            [-27, -35],\n            [35, -7],\n            [19, 21],\n            [52, 1],\n            [42, 25],\n            [31, -36],\n            [32, 39],\n            [-29, 35],\n            [14, 19],\n            [82, -18],\n            [39, -18],\n            [100, -68],\n            [19, 31],\n            [-28, 31],\n            [-1, 13],\n            [-34, 6],\n            [10, 28],\n            [-15, 46],\n            [-1, 19],\n            [51, 53],\n            [18, 54],\n            [21, 11],\n            [74, -15],\n            [5, -33],\n            [-26, -48],\n            [17, -19],\n            [9, -41],\n            [-6, -81],\n            [31, -36],\n            [-12, -40],\n            [-55, -84],\n            [32, -8],\n            [11, 21],\n            [31, 15],\n            [7, 29],\n            [24, 29],\n            [-16, 33],\n            [13, 39],\n            [-31, 5],\n            [-6, 33],\n            [22, 59],\n            [-36, 48],\n            [50, 40],\n            [-7, 42],\n            [14, 2],\n            [15, -33],\n            [-11, -57],\n            [29, -11],\n            [-12, 43],\n            [46, 23],\n            [58, 3],\n            [51, -34],\n            [-25, 49],\n            [-2, 63],\n            [48, 12],\n            [67, -2],\n            [60, 7],\n            [-23, 31],\n            [33, 39],\n            [31, 2],\n            [54, 29],\n            [74, 8],\n            [9, 16],\n            [73, 6],\n            [23, -14],\n            [62, 32],\n            [51, -1],\n            [8, 25],\n            [26, 25],\n            [66, 25],\n            [48, -19],\n            [-38, -15],\n            [63, -9],\n            [7, -29],\n            [25, 14],\n            [82, -1],\n            [62, -29],\n            [23, -22],\n            [-7, -30],\n            [-31, -18],\n            [-73, -33],\n            [-21, -17],\n            [35, -8],\n            [41, -15],\n            [25, 11],\n            [14, -38],\n            [12, 15],\n            [44, 10],\n            [90, -10],\n            [6, -28],\n            [116, -9],\n            [2, 46],\n            [59, -11],\n            [44, 1],\n            [45, -32],\n            [13, -37],\n            [-17, -25],\n            [35, -47],\n            [44, -24],\n            [27, 62],\n            [44, -26],\n            [48, 16],\n            [53, -18],\n            [21, 16],\n            [45, -8],\n            [-20, 55],\n            [37, 25],\n            [251, -38],\n            [24, -35],\n            [72, -45],\n            [112, 11],\n            [56, -10],\n            [23, -24],\n            [-4, -44],\n            [35, -16],\n            [37, 12],\n            [49, 1],\n            [52, -11],\n            [53, 6],\n            [49, -52],\n            [34, 19],\n            [-23, 37],\n            [13, 27],\n            [88, -17],\n            [58, 4],\n            [80, -29],\n            [-9960, -25]\n        ],\n        [\n            [7918, 9684],\n            [-157, -23],\n            [51, 77],\n            [23, 7],\n            [21, -4],\n            [70, -33],\n            [-8, -24]\n        ],\n        [\n            [6420, 9816],\n            [-37, -8],\n            [-25, -4],\n            [-4, -10],\n            [-33, -10],\n            [-30, 14],\n            [16, 19],\n            [-62, 2],\n            [54, 10],\n            [43, 1],\n            [5, -16],\n            [16, 14],\n            [26, 10],\n            [42, -13],\n            [-11, -9]\n        ],\n        [\n            [7775, 9718],\n            [-60, -8],\n            [-78, 17],\n            [-46, 23],\n            [-21, 42],\n            [-38, 12],\n            [72, 40],\n            [60, 14],\n            [54, -30],\n            [64, -57],\n            [-7, -53]\n        ],\n        [\n            [5844, 4990],\n            [11, -33],\n            [-1, -35],\n            [-8, -7]\n        ],\n        [\n            [5821, 4978],\n            [7, -6],\n            [16, 18]\n        ],\n        [\n            [4526, 6298],\n            [1, 25]\n        ],\n        [\n            [6188, 6023],\n            [-4, 26],\n            [-8, 17],\n            [-2, 24],\n            [-15, 21],\n            [-15, 50],\n            [-7, 48],\n            [-20, 40],\n            [-12, 10],\n            [-18, 56],\n            [-4, 41],\n            [2, 35],\n            [-16, 66],\n            [-13, 23],\n            [-15, 12],\n            [-10, 34],\n            [2, 13],\n            [-8, 31],\n            [-8, 13],\n            [-11, 44],\n            [-17, 48],\n            [-14, 40],\n            [-14, 0],\n            [5, 33],\n            [1, 20],\n            [3, 24]\n        ],\n        [\n            [6344, 6744],\n            [11, -51],\n            [14, -13],\n            [5, -21],\n            [18, -25],\n            [2, -24],\n            [-3, -20],\n            [4, -20],\n            [8, -16],\n            [4, -20],\n            [4, -14]\n        ],\n        [\n            [6427, 6512],\n            [5, -22]\n        ],\n        [\n            [6444, 6180],\n            [-80, -23],\n            [-26, -26],\n            [-20, -62],\n            [-13, -10],\n            [-7, 20],\n            [-11, -3],\n            [-27, 6],\n            [-5, 5],\n            [-32, -1],\n            [-7, -5],\n            [-12, 15],\n            [-7, -29],\n            [3, -25],\n            [-12, -19]\n        ],\n        [\n            [5943, 5617],\n            [-4, 1],\n            [0, 29],\n            [-3, 20],\n            [-14, 24],\n            [-4, 42],\n            [4, 44],\n            [-13, 4],\n            [-2, -13],\n            [-17, -3],\n            [7, -17],\n            [2, -36],\n            [-15, -32],\n            [-14, -43],\n            [-14, -6],\n            [-23, 34],\n            [-11, -12],\n            [-3, -17],\n            [-14, -11],\n            [-1, -12],\n            [-28, 0],\n            [-3, 12],\n            [-20, 2],\n            [-10, -10],\n            [-8, 5],\n            [-14, 34],\n            [-5, 17],\n            [-20, -9],\n            [-8, -27],\n            [-7, -53],\n            [-10, -11],\n            [-8, -6]\n        ],\n        [\n            [5663, 5567],\n            [-2, 2]\n        ],\n        [\n            [5635, 5716],\n            [0, 14],\n            [-10, 17],\n            [-1, 35],\n            [-5, 23],\n            [-10, -4],\n            [3, 22],\n            [7, 25],\n            [-3, 24],\n            [9, 18],\n            [-6, 14],\n            [7, 36],\n            [13, 44],\n            [24, -4],\n            [-1, 234]\n        ],\n        [\n            [6023, 6357],\n            [9, -58],\n            [-6, -10],\n            [4, -61],\n            [11, -71],\n            [10, -14],\n            [15, -22]\n        ],\n        [\n            [5943, 5624],\n            [0, -7]\n        ],\n        [\n            [5943, 5617],\n            [0, -46]\n        ],\n        [\n            [5944, 5309],\n            [-17, -28],\n            [-20, 1],\n            [-22, -14],\n            [-18, 13],\n            [-11, -16]\n        ],\n        [\n            [5682, 5544],\n            [-19, 23]\n        ],\n        [\n            [4535, 5861],\n            [-11, 46],\n            [-14, 21],\n            [12, 11],\n            [14, 41],\n            [6, 31]\n        ],\n        [\n            [4536, 5789],\n            [-4, 45]\n        ],\n        [\n            [9502, 4438],\n            [8, -20],\n            [-19, 0],\n            [-11, 37],\n            [17, -15],\n            [5, -2]\n        ],\n        [\n            [9467, 4474],\n            [-11, -1],\n            [-17, 6],\n            [-5, 9],\n            [1, 23],\n            [19, -9],\n            [9, -12],\n            [4, -16]\n        ],\n        [\n            [9490, 4490],\n            [-4, -11],\n            [-21, 52],\n            [-5, 35],\n            [9, 0],\n            [10, -47],\n            [11, -29]\n        ],\n        [\n            [9440, 4565],\n            [1, -12],\n            [-22, 25],\n            [-15, 21],\n            [-10, 20],\n            [4, 6],\n            [13, -14],\n            [23, -27],\n            [6, -19]\n        ],\n        [\n            [9375, 4623],\n            [-5, -3],\n            [-13, 14],\n            [-11, 24],\n            [1, 10],\n            [17, -25],\n            [11, -20]\n        ],\n        [\n            [4682, 5458],\n            [-8, 5],\n            [-20, 24],\n            [-14, 31],\n            [-5, 22],\n            [-3, 43]\n        ],\n        [\n            [2561, 5848],\n            [-3, -14],\n            [-16, 1],\n            [-10, 6],\n            [-12, 12],\n            [-15, 3],\n            [-8, 13]\n        ],\n        [\n            [6198, 5735],\n            [9, -11],\n            [5, -25],\n            [13, -24],\n            [14, -1],\n            [26, 16],\n            [30, 7],\n            [25, 18],\n            [13, 4],\n            [10, 11],\n            [16, 2]\n        ],\n        [\n            [6359, 5732],\n            [0, -1],\n            [0, -25],\n            [0, -59],\n            [0, -31],\n            [-13, -36],\n            [-19, -50]\n        ],\n        [\n            [6359, 5732],\n            [9, 1],\n            [13, 9],\n            [14, 6],\n            [14, 20],\n            [10, 0],\n            [1, -16],\n            [-3, -35],\n            [0, -31],\n            [-6, -21],\n            [-7, -64],\n            [-14, -66],\n            [-17, -75],\n            [-24, -87],\n            [-23, -66],\n            [-33, -81],\n            [-28, -48],\n            [-42, -58],\n            [-25, -45],\n            [-31, -72],\n            [-6, -31],\n            [-6, -14]\n        ],\n        [\n            [3412, 5410],\n            [34, -11],\n            [2, 10],\n            [23, 4],\n            [30, -15]\n        ],\n        [\n            [3489, 5306],\n            [10, -35],\n            [-4, -25]\n        ],\n        [\n            [5626, 7957],\n            [-8, -15],\n            [-5, -24]\n        ],\n        [\n            [5380, 7746],\n            [7, 5]\n        ],\n        [\n            [5663, 8957],\n            [-47, -17],\n            [-27, -41],\n            [4, -36],\n            [-44, -48],\n            [-54, -50],\n            [-20, -84],\n            [20, -41],\n            [26, -33],\n            [-25, -67],\n            [-29, -14],\n            [-11, -99],\n            [-15, -55],\n            [-34, 6],\n            [-16, -47],\n            [-32, -3],\n            [-9, 56],\n            [-23, 67],\n            [-21, 84]\n        ],\n        [\n            [5890, 3478],\n            [-5, -26],\n            [-17, -6],\n            [-16, 32],\n            [0, 20],\n            [7, 22],\n            [3, 17],\n            [8, 5],\n            [14, -11]\n        ],\n        [\n            [5999, 7104],\n            [-2, 45],\n            [7, 25]\n        ],\n        [\n            [6004, 7174],\n            [7, 13],\n            [7, 13],\n            [2, 33],\n            [9, -12],\n            [31, 17],\n            [14, -12],\n            [23, 1],\n            [32, 22],\n            [15, -1],\n            [32, 9]\n        ],\n        [\n            [5051, 5420],\n            [-22, -12]\n        ],\n        [\n            [7849, 5777],\n            [-25, 28],\n            [-24, -2],\n            [4, 47],\n            [-24, 0],\n            [-2, -65],\n            [-15, -87],\n            [-10, -52],\n            [2, -43],\n            [18, -2],\n            [12, -53],\n            [5, -52],\n            [15, -33],\n            [17, -7],\n            [14, -31]\n        ],\n        [\n            [7779, 5439],\n            [-11, 23],\n            [-4, 29],\n            [-15, 34],\n            [-14, 28],\n            [-4, -35],\n            [-5, 33],\n            [3, 37],\n            [8, 56]\n        ],\n        [\n            [6883, 7252],\n            [16, 60],\n            [-6, 44],\n            [-20, 14],\n            [7, 26],\n            [23, -3],\n            [13, 33],\n            [9, 38],\n            [37, 13],\n            [-6, -27],\n            [4, -17],\n            [12, 2]\n        ],\n        [\n            [6497, 7255],\n            [-5, 42],\n            [4, 62],\n            [-22, 20],\n            [8, 40],\n            [-19, 4],\n            [6, 49],\n            [26, -14],\n            [25, 19],\n            [-20, 35],\n            [-8, 34],\n            [-23, -15],\n            [-3, -43],\n            [-8, 38]\n        ],\n        [\n            [6554, 7498],\n            [31, 1],\n            [-4, 29],\n            [24, 21],\n            [23, 34],\n            [37, -31],\n            [3, -47],\n            [11, -12],\n            [30, 2],\n            [9, -10],\n            [14, -61],\n            [32, -41],\n            [18, -28],\n            [29, -29],\n            [37, -25],\n            [-1, -36]\n        ],\n        [\n            [8471, 4532],\n            [3, 14],\n            [24, 13],\n            [19, 2],\n            [9, 8],\n            [10, -8],\n            [-10, -16],\n            [-29, -25],\n            [-23, -17]\n        ],\n        [\n            [3286, 5693],\n            [16, 8],\n            [6, -2],\n            [-1, -44],\n            [-23, -7],\n            [-5, 6],\n            [8, 16],\n            [-1, 23]\n        ],\n        [\n            [5233, 7240],\n            [31, 24],\n            [19, -7],\n            [-1, -30],\n            [24, 22],\n            [2, -12],\n            [-14, -29],\n            [0, -27],\n            [9, -15],\n            [-3, -51],\n            [-19, -29],\n            [6, -33],\n            [14, -1],\n            [7, -28],\n            [11, -9]\n        ],\n        [\n            [6004, 7174],\n            [-11, 27],\n            [11, 22],\n            [-17, -5],\n            [-23, 13],\n            [-19, -34],\n            [-43, -6],\n            [-22, 31],\n            [-30, 2],\n            [-6, -24],\n            [-20, -7],\n            [-26, 31],\n            [-31, -1],\n            [-16, 59],\n            [-21, 33],\n            [14, 46],\n            [-18, 28],\n            [31, 56],\n            [43, 3],\n            [12, 45],\n            [53, -8],\n            [33, 38],\n            [32, 17],\n            [46, 1],\n            [49, -42],\n            [40, -22],\n            [32, 9],\n            [24, -6],\n            [33, 31]\n        ],\n        [\n            [5777, 7539],\n            [3, -23],\n            [25, -19],\n            [-5, -14],\n            [-33, -3],\n            [-12, -19],\n            [-23, -31],\n            [-9, 27],\n            [0, 12]\n        ],\n        [\n            [8382, 6499],\n            [-17, -95],\n            [-12, -49],\n            [-14, 50],\n            [-4, 44],\n            [17, 58],\n            [22, 45],\n            [13, -18],\n            [-5, -35]\n        ],\n        [\n            [6088, 4781],\n            [-12, -73],\n            [1, -33],\n            [18, -22],\n            [1, -15],\n            [-8, -36],\n            [2, -18],\n            [-2, -28],\n            [10, -37],\n            [11, -58],\n            [10, -13]\n        ],\n        [\n            [5909, 4512],\n            [-15, 18],\n            [-18, 10],\n            [-11, 10],\n            [-12, 15]\n        ],\n        [\n            [5844, 4990],\n            [10, 8],\n            [31, -1],\n            [56, 4]\n        ],\n        [\n            [6061, 7840],\n            [-22, -5],\n            [-18, -19],\n            [-26, -3],\n            [-24, -22],\n            [1, -37],\n            [14, -14],\n            [28, 4],\n            [-5, -21],\n            [-31, -11],\n            [-37, -34],\n            [-16, 12],\n            [6, 28],\n            [-30, 17],\n            [5, 12],\n            [26, 19],\n            [-8, 14],\n            [-43, 15],\n            [-2, 22],\n            [-25, -8],\n            [-11, -32],\n            [-21, -44]\n        ],\n        [\n            [3517, 3063],\n            [-12, -38],\n            [-31, -32],\n            [-21, 11],\n            [-15, -6],\n            [-26, 25],\n            [-18, -1],\n            [-17, 32]\n        ],\n        [\n            [679, 6185],\n            [-4, -10],\n            [-7, 8],\n            [1, 17],\n            [-4, 21],\n            [1, 7],\n            [5, 10],\n            [-2, 11],\n            [1, 6],\n            [3, -1],\n            [10, -10],\n            [5, -5],\n            [5, -8],\n            [7, -21],\n            [-1, -3],\n            [-11, -13],\n            [-9, -9]\n        ],\n        [\n            [664, 6277],\n            [-9, -4],\n            [-5, 12],\n            [-3, 5],\n            [0, 4],\n            [3, 5],\n            [9, -6],\n            [8, -9],\n            [-3, -7]\n        ],\n        [\n            [646, 6309],\n            [-1, -7],\n            [-15, 2],\n            [2, 7],\n            [14, -2]\n        ],\n        [\n            [621, 6317],\n            [-2, -3],\n            [-2, 1],\n            [-9, 2],\n            [-4, 13],\n            [-1, 2],\n            [7, 8],\n            [3, -3],\n            [8, -20]\n        ],\n        [\n            [574, 6356],\n            [-4, -6],\n            [-9, 11],\n            [1, 4],\n            [5, 6],\n            [6, -1],\n            [1, -14]\n        ],\n        [\n            [3135, 7724],\n            [5, -19],\n            [-30, -29],\n            [-29, -20],\n            [-29, -18],\n            [-15, -35],\n            [-4, -13],\n            [-1, -31],\n            [10, -32],\n            [11, -1],\n            [-3, 21],\n            [8, -13],\n            [-2, -17],\n            [-19, -9],\n            [-13, 1],\n            [-20, -10],\n            [-12, -3],\n            [-17, -3],\n            [-23, -17],\n            [41, 11],\n            [8, -11],\n            [-39, -18],\n            [-17, 0],\n            [0, 7],\n            [-8, -16],\n            [8, -3],\n            [-6, -43],\n            [-20, -45],\n            [-2, 15],\n            [-6, 3],\n            [-9, 15],\n            [5, -32],\n            [7, -10],\n            [1, -23],\n            [-9, -23],\n            [-16, -47],\n            [-2, 3],\n            [8, 40],\n            [-14, 22],\n            [-3, 49],\n            [-5, -25],\n            [5, -38],\n            [-18, 10],\n            [19, -19],\n            [1, -57],\n            [8, -4],\n            [3, -20],\n            [4, -59],\n            [-17, -44],\n            [-29, -18],\n            [-18, -34],\n            [-14, -4],\n            [-14, -22],\n            [-4, -20],\n            [-31, -38],\n            [-16, -28],\n            [-13, -35],\n            [-4, -42],\n            [5, -41],\n            [9, -51],\n            [13, -41],\n            [0, -26],\n            [13, -69],\n            [-1, -39],\n            [-1, -23],\n            [-7, -36],\n            [-8, -8],\n            [-14, 7],\n            [-4, 26],\n            [-11, 14],\n            [-15, 51],\n            [-13, 45],\n            [-4, 23],\n            [6, 39],\n            [-8, 33],\n            [-22, 49],\n            [-10, 9],\n            [-28, -27],\n            [-5, 3],\n            [-14, 28],\n            [-17, 14],\n            [-32, -7],\n            [-24, 7],\n            [-21, -5],\n            [-12, -9],\n            [5, -15],\n            [0, -24],\n            [5, -12],\n            [-5, -8],\n            [-10, 9],\n            [-11, -11],\n            [-20, 2],\n            [-20, 31],\n            [-25, -8],\n            [-20, 14],\n            [-17, -4],\n            [-24, -14],\n            [-25, -44],\n            [-27, -25],\n            [-16, -28],\n            [-6, -27],\n            [0, -41],\n            [1, -28],\n            [5, -20]\n        ],\n        [\n            [1746, 6980],\n            [-4, 30],\n            [-18, 34],\n            [-13, 7],\n            [-3, 17],\n            [-16, 3],\n            [-10, 16],\n            [-26, 6],\n            [-7, 9],\n            [-3, 32],\n            [-27, 60],\n            [-23, 82],\n            [1, 14],\n            [-13, 19],\n            [-21, 50],\n            [-4, 48],\n            [-15, 32],\n            [6, 49],\n            [-1, 51],\n            [-8, 45],\n            [10, 56],\n            [4, 53],\n            [3, 54],\n            [-5, 79],\n            [-9, 51],\n            [-8, 27],\n            [4, 12],\n            [40, -20],\n            [15, -56],\n            [7, 15],\n            [-5, 49],\n            [-9, 48]\n        ],\n        [\n            [750, 8432],\n            [-28, -23],\n            [-14, 15],\n            [-4, 28],\n            [25, 21],\n            [15, 9],\n            [18, -4],\n            [12, -18],\n            [-24, -28]\n        ],\n        [\n            [401, 8597],\n            [-18, -9],\n            [-18, 11],\n            [-17, 16],\n            [28, 10],\n            [22, -6],\n            [3, -22]\n        ],\n        [\n            [230, 8826],\n            [17, -12],\n            [17, 6],\n            [23, -15],\n            [27, -8],\n            [-2, -7],\n            [-21, -12],\n            [-21, 13],\n            [-11, 11],\n            [-24, -4],\n            [-7, 5],\n            [2, 23]\n        ],\n        [\n            [1374, 8295],\n            [-15, 22],\n            [-25, 19],\n            [-8, 52],\n            [-36, 47],\n            [-15, 56],\n            [-26, 4],\n            [-44, 2],\n            [-33, 17],\n            [-57, 61],\n            [-27, 11],\n            [-49, 21],\n            [-38, -5],\n            [-55, 27],\n            [-33, 25],\n            [-30, -12],\n            [5, -41],\n            [-15, -4],\n            [-32, -12],\n            [-25, -20],\n            [-30, -13],\n            [-4, 35],\n            [12, 58],\n            [30, 18],\n            [-8, 15],\n            [-35, -33],\n            [-19, -39],\n            [-40, -42],\n            [20, -29],\n            [-26, -42],\n            [-30, -25],\n            [-28, -18],\n            [-7, -26],\n            [-43, -31],\n            [-9, -28],\n            [-32, -25],\n            [-20, 5],\n            [-25, -17],\n            [-29, -20],\n            [-23, -20],\n            [-47, -16],\n            [-5, 9],\n            [31, 28],\n            [27, 18],\n            [29, 33],\n            [35, 6],\n            [14, 25],\n            [38, 35],\n            [6, 12],\n            [21, 21],\n            [5, 44],\n            [14, 35],\n            [-32, -18],\n            [-9, 11],\n            [-15, -22],\n            [-18, 30],\n            [-8, -21],\n            [-10, 29],\n            [-28, -23],\n            [-17, 0],\n            [-3, 35],\n            [5, 21],\n            [-17, 22],\n            [-37, -12],\n            [-23, 28],\n            [-19, 14],\n            [0, 34],\n            [-22, 25],\n            [11, 34],\n            [23, 33],\n            [10, 30],\n            [22, 4],\n            [19, -9],\n            [23, 28],\n            [20, -5],\n            [21, 19],\n            [-5, 27],\n            [-16, 10],\n            [21, 23],\n            [-17, -1],\n            [-30, -13],\n            [-8, -13],\n            [-22, 13],\n            [-39, -6],\n            [-41, 14],\n            [-12, 24],\n            [-35, 34],\n            [39, 25],\n            [62, 29],\n            [23, 0],\n            [-4, -30],\n            [59, 2],\n            [-23, 37],\n            [-34, 23],\n            [-20, 29],\n            [-26, 25],\n            [-38, 19],\n            [15, 31],\n            [49, 2],\n            [35, 27],\n            [7, 29],\n            [28, 28],\n            [28, 6],\n            [52, 27],\n            [26, -4],\n            [42, 31],\n            [42, -12],\n            [21, -27],\n            [12, 11],\n            [47, -3],\n            [-2, -14],\n            [43, -10],\n            [28, 6],\n            [59, -18],\n            [53, -6],\n            [21, -8],\n            [37, 10],\n            [42, -18],\n            [31, -8]\n        ],\n        [\n            [3018, 5753],\n            [-1, -14],\n            [-16, -7],\n            [9, -26],\n            [0, -31],\n            [-12, -35],\n            [10, -47],\n            [12, 4],\n            [6, 43],\n            [-8, 21],\n            [-2, 45],\n            [35, 24],\n            [-4, 27],\n            [10, 19],\n            [10, -41],\n            [19, -1],\n            [18, -33],\n            [1, -20],\n            [25, 0],\n            [30, 6],\n            [16, -27],\n            [21, -7],\n            [16, 18],\n            [0, 15],\n            [34, 4],\n            [34, 1],\n            [-24, -18],\n            [10, -28],\n            [22, -4],\n            [21, -29],\n            [4, -48],\n            [15, 2],\n            [11, -14]\n        ],\n        [\n            [8001, 6331],\n            [-37, -51],\n            [-24, -56],\n            [-6, -41],\n            [22, -62],\n            [25, -77],\n            [26, -37],\n            [17, -47],\n            [12, -109],\n            [-3, -104],\n            [-24, -39],\n            [-31, -38],\n            [-23, -49],\n            [-35, -55],\n            [-10, 37],\n            [8, 40],\n            [-21, 34]\n        ],\n        [\n            [9661, 4085],\n            [-9, -8],\n            [-9, 26],\n            [1, 16],\n            [17, -34]\n        ],\n        [\n            [9641, 4175],\n            [4, -47],\n            [-7, 7],\n            [-6, -3],\n            [-4, 16],\n            [0, 45],\n            [13, -18]\n        ],\n        [\n            [6475, 6041],\n            [-21, -16],\n            [-5, -26],\n            [-1, -20],\n            [-27, -25],\n            [-45, -28],\n            [-24, -41],\n            [-13, -3],\n            [-8, 3],\n            [-16, -25],\n            [-18, -11],\n            [-23, -3],\n            [-7, -3],\n            [-6, -16],\n            [-8, -4],\n            [-4, -15],\n            [-14, 1],\n            [-9, -8],\n            [-19, 3],\n            [-7, 35],\n            [1, 32],\n            [-5, 17],\n            [-5, 44],\n            [-8, 24],\n            [5, 3],\n            [-2, 27],\n            [3, 12],\n            [-1, 25]\n        ],\n        [\n            [5817, 3752],\n            [11, 0],\n            [14, -10],\n            [9, 7],\n            [15, -6]\n        ],\n        [\n            [5911, 3478],\n            [-7, -43],\n            [-3, -49],\n            [-7, -27],\n            [-19, -30],\n            [-5, -8],\n            [-12, -30],\n            [-8, -31],\n            [-16, -42],\n            [-31, -61],\n            [-20, -36],\n            [-21, -26],\n            [-29, -23],\n            [-14, -3],\n            [-3, -17],\n            [-17, 9],\n            [-14, -11],\n            [-30, 11],\n            [-17, -7],\n            [-12, 3],\n            [-28, -23],\n            [-24, -10],\n            [-17, -22],\n            [-13, -1],\n            [-11, 21],\n            [-10, 1],\n            [-12, 26],\n            [-1, -8],\n            [-4, 16],\n            [0, 34],\n            [-9, 40],\n            [9, 11],\n            [0, 45],\n            [-19, 55],\n            [-14, 50],\n            [0, 1],\n            [-20, 76]\n        ],\n        [\n            [5840, 4141],\n            [-21, -8],\n            [-15, -23],\n            [-4, -21],\n            [-10, -4],\n            [-24, -49],\n            [-15, -38],\n            [-10, -2],\n            [-9, 7],\n            [-31, 7]\n        ]\n    ],\n    \"transform\": {\n        \"scale\": [0.036003600360036005, 0.016927109510951093],\n        \"translate\": [-180, -85.609038]\n    }\n}\n;\n  Datamap.prototype.abwTopo = '__ABW__';\n  Datamap.prototype.afgTopo = '__AFG__';\n  Datamap.prototype.agoTopo = '__AGO__';\n  Datamap.prototype.aiaTopo = '__AIA__';\n  Datamap.prototype.albTopo = '__ALB__';\n  Datamap.prototype.aldTopo = '__ALD__';\n  Datamap.prototype.andTopo = '__AND__';\n  Datamap.prototype.areTopo = '__ARE__';\n  Datamap.prototype.argTopo = '__ARG__';\n  Datamap.prototype.armTopo = '__ARM__';\n  Datamap.prototype.asmTopo = '__ASM__';\n  Datamap.prototype.ataTopo = '__ATA__';\n  Datamap.prototype.atcTopo = '__ATC__';\n  Datamap.prototype.atfTopo = '__ATF__';\n  Datamap.prototype.atgTopo = '__ATG__';\n  Datamap.prototype.ausTopo = '__AUS__';\n  Datamap.prototype.autTopo = '__AUT__';\n  Datamap.prototype.azeTopo = '__AZE__';\n  Datamap.prototype.bdiTopo = '__BDI__';\n  Datamap.prototype.belTopo = '__BEL__';\n  Datamap.prototype.benTopo = '__BEN__';\n  Datamap.prototype.bfaTopo = '__BFA__';\n  Datamap.prototype.bgdTopo = '__BGD__';\n  Datamap.prototype.bgrTopo = '__BGR__';\n  Datamap.prototype.bhrTopo = '__BHR__';\n  Datamap.prototype.bhsTopo = '__BHS__';\n  Datamap.prototype.bihTopo = '__BIH__';\n  Datamap.prototype.bjnTopo = '__BJN__';\n  Datamap.prototype.blmTopo = '__BLM__';\n  Datamap.prototype.blrTopo = '__BLR__';\n  Datamap.prototype.blzTopo = '__BLZ__';\n  Datamap.prototype.bmuTopo = '__BMU__';\n  Datamap.prototype.bolTopo = '__BOL__';\n  Datamap.prototype.braTopo = '__BRA__';\n  Datamap.prototype.brbTopo = '__BRB__';\n  Datamap.prototype.brnTopo = '__BRN__';\n  Datamap.prototype.btnTopo = '__BTN__';\n  Datamap.prototype.norTopo = '__NOR__';\n  Datamap.prototype.bwaTopo = '__BWA__';\n  Datamap.prototype.cafTopo = '__CAF__';\n  Datamap.prototype.canTopo = '__CAN__';\n  Datamap.prototype.cheTopo = '__CHE__';\n  Datamap.prototype.chlTopo = '__CHL__';\n  Datamap.prototype.chnTopo = '__CHN__';\n  Datamap.prototype.civTopo = '__CIV__';\n  Datamap.prototype.clpTopo = '__CLP__';\n  Datamap.prototype.cmrTopo = '__CMR__';\n  Datamap.prototype.codTopo = '__COD__';\n  Datamap.prototype.cogTopo = '__COG__';\n  Datamap.prototype.cokTopo = '__COK__';\n  Datamap.prototype.colTopo = '__COL__';\n  Datamap.prototype.comTopo = '__COM__';\n  Datamap.prototype.cpvTopo = '__CPV__';\n  Datamap.prototype.criTopo = '__CRI__';\n  Datamap.prototype.csiTopo = '__CSI__';\n  Datamap.prototype.cubTopo = '__CUB__';\n  Datamap.prototype.cuwTopo = '__CUW__';\n  Datamap.prototype.cymTopo = '__CYM__';\n  Datamap.prototype.cynTopo = '__CYN__';\n  Datamap.prototype.cypTopo = '__CYP__';\n  Datamap.prototype.czeTopo = '__CZE__';\n  Datamap.prototype.deuTopo = '__DEU__';\n  Datamap.prototype.djiTopo = '__DJI__';\n  Datamap.prototype.dmaTopo = '__DMA__';\n  Datamap.prototype.dnkTopo = '__DNK__';\n  Datamap.prototype.domTopo = '__DOM__';\n  Datamap.prototype.dzaTopo = '__DZA__';\n  Datamap.prototype.ecuTopo = '__ECU__';\n  Datamap.prototype.egyTopo = '__EGY__';\n  Datamap.prototype.eriTopo = '__ERI__';\n  Datamap.prototype.esbTopo = '__ESB__';\n  Datamap.prototype.espTopo = '__ESP__';\n  Datamap.prototype.estTopo = '__EST__';\n  Datamap.prototype.ethTopo = '__ETH__';\n  Datamap.prototype.finTopo = '__FIN__';\n  Datamap.prototype.fjiTopo = '__FJI__';\n  Datamap.prototype.flkTopo = '__FLK__';\n  Datamap.prototype.fraTopo = '__FRA__';\n  Datamap.prototype.froTopo = '__FRO__';\n  Datamap.prototype.fsmTopo = '__FSM__';\n  Datamap.prototype.gabTopo = '__GAB__';\n  Datamap.prototype.psxTopo = '__PSX__';\n  Datamap.prototype.gbrTopo = '__GBR__';\n  Datamap.prototype.geoTopo = '__GEO__';\n  Datamap.prototype.ggyTopo = '__GGY__';\n  Datamap.prototype.ghaTopo = '__GHA__';\n  Datamap.prototype.gibTopo = '__GIB__';\n  Datamap.prototype.ginTopo = '__GIN__';\n  Datamap.prototype.gmbTopo = '__GMB__';\n  Datamap.prototype.gnbTopo = '__GNB__';\n  Datamap.prototype.gnqTopo = '__GNQ__';\n  Datamap.prototype.grcTopo = '__GRC__';\n  Datamap.prototype.grdTopo = '__GRD__';\n  Datamap.prototype.grlTopo = '__GRL__';\n  Datamap.prototype.gtmTopo = '__GTM__';\n  Datamap.prototype.gumTopo = '__GUM__';\n  Datamap.prototype.guyTopo = '__GUY__';\n  Datamap.prototype.hkgTopo = '__HKG__';\n  Datamap.prototype.hmdTopo = '__HMD__';\n  Datamap.prototype.hndTopo = '__HND__';\n  Datamap.prototype.hrvTopo = '__HRV__';\n  Datamap.prototype.htiTopo = '__HTI__';\n  Datamap.prototype.hunTopo = '__HUN__';\n  Datamap.prototype.idnTopo = '__IDN__';\n  Datamap.prototype.imnTopo = '__IMN__';\n  Datamap.prototype.indTopo = '__IND__';\n  Datamap.prototype.ioaTopo = '__IOA__';\n  Datamap.prototype.iotTopo = '__IOT__';\n  Datamap.prototype.irlTopo = '__IRL__';\n  Datamap.prototype.irnTopo = '__IRN__';\n  Datamap.prototype.irqTopo = '__IRQ__';\n  Datamap.prototype.islTopo = '__ISL__';\n  Datamap.prototype.isrTopo = '__ISR__';\n  Datamap.prototype.itaTopo = '__ITA__';\n  Datamap.prototype.jamTopo = '__JAM__';\n  Datamap.prototype.jeyTopo = '__JEY__';\n  Datamap.prototype.jorTopo = '__JOR__';\n  Datamap.prototype.jpnTopo = '__JPN__';\n  Datamap.prototype.kabTopo = '__KAB__';\n  Datamap.prototype.kasTopo = '__KAS__';\n  Datamap.prototype.kazTopo = '__KAZ__';\n  Datamap.prototype.kenTopo = '__KEN__';\n  Datamap.prototype.kgzTopo = '__KGZ__';\n  Datamap.prototype.khmTopo = '__KHM__';\n  Datamap.prototype.kirTopo = '__KIR__';\n  Datamap.prototype.knaTopo = '__KNA__';\n  Datamap.prototype.korTopo = '__KOR__';\n  Datamap.prototype.kosTopo = '__KOS__';\n  Datamap.prototype.kwtTopo = '__KWT__';\n  Datamap.prototype.laoTopo = '__LAO__';\n  Datamap.prototype.lbnTopo = '__LBN__';\n  Datamap.prototype.lbrTopo = '__LBR__';\n  Datamap.prototype.lbyTopo = '__LBY__';\n  Datamap.prototype.lcaTopo = '__LCA__';\n  Datamap.prototype.lieTopo = '__LIE__';\n  Datamap.prototype.lkaTopo = '__LKA__';\n  Datamap.prototype.lsoTopo = '__LSO__';\n  Datamap.prototype.ltuTopo = '__LTU__';\n  Datamap.prototype.luxTopo = '__LUX__';\n  Datamap.prototype.lvaTopo = '__LVA__';\n  Datamap.prototype.macTopo = '__MAC__';\n  Datamap.prototype.mafTopo = '__MAF__';\n  Datamap.prototype.marTopo = '__MAR__';\n  Datamap.prototype.mcoTopo = '__MCO__';\n  Datamap.prototype.mdaTopo = '__MDA__';\n  Datamap.prototype.mdgTopo = '__MDG__';\n  Datamap.prototype.mdvTopo = '__MDV__';\n  Datamap.prototype.mexTopo = '__MEX__';\n  Datamap.prototype.mhlTopo = '__MHL__';\n  Datamap.prototype.mkdTopo = '__MKD__';\n  Datamap.prototype.mliTopo = '__MLI__';\n  Datamap.prototype.mltTopo = '__MLT__';\n  Datamap.prototype.mmrTopo = '__MMR__';\n  Datamap.prototype.mneTopo = '__MNE__';\n  Datamap.prototype.mngTopo = '__MNG__';\n  Datamap.prototype.mnpTopo = '__MNP__';\n  Datamap.prototype.mozTopo = '__MOZ__';\n  Datamap.prototype.mrtTopo = '__MRT__';\n  Datamap.prototype.msrTopo = '__MSR__';\n  Datamap.prototype.musTopo = '__MUS__';\n  Datamap.prototype.mwiTopo = '__MWI__';\n  Datamap.prototype.mysTopo = '__MYS__';\n  Datamap.prototype.namTopo = '__NAM__';\n  Datamap.prototype.nclTopo = '__NCL__';\n  Datamap.prototype.nerTopo = '__NER__';\n  Datamap.prototype.nfkTopo = '__NFK__';\n  Datamap.prototype.ngaTopo = '__NGA__';\n  Datamap.prototype.nicTopo = '__NIC__';\n  Datamap.prototype.niuTopo = '__NIU__';\n  Datamap.prototype.nldTopo = '__NLD__';\n  Datamap.prototype.nplTopo = '__NPL__';\n  Datamap.prototype.nruTopo = '__NRU__';\n  Datamap.prototype.nulTopo = '__NUL__';\n  Datamap.prototype.nzlTopo = '__NZL__';\n  Datamap.prototype.omnTopo = '__OMN__';\n  Datamap.prototype.pakTopo = '__PAK__';\n  Datamap.prototype.panTopo = '__PAN__';\n  Datamap.prototype.pcnTopo = '__PCN__';\n  Datamap.prototype.perTopo = '__PER__';\n  Datamap.prototype.pgaTopo = '__PGA__';\n  Datamap.prototype.phlTopo = '__PHL__';\n  Datamap.prototype.plwTopo = '__PLW__';\n  Datamap.prototype.pngTopo = '__PNG__';\n  Datamap.prototype.polTopo = '__POL__';\n  Datamap.prototype.priTopo = '__PRI__';\n  Datamap.prototype.prkTopo = '__PRK__';\n  Datamap.prototype.prtTopo = '__PRT__';\n  Datamap.prototype.pryTopo = '__PRY__';\n  Datamap.prototype.pyfTopo = '__PYF__';\n  Datamap.prototype.qatTopo = '__QAT__';\n  Datamap.prototype.rouTopo = '__ROU__';\n  Datamap.prototype.rusTopo = '__RUS__';\n  Datamap.prototype.rwaTopo = '__RWA__';\n  Datamap.prototype.sahTopo = '__SAH__';\n  Datamap.prototype.sauTopo = '__SAU__';\n  Datamap.prototype.scrTopo = '__SCR__';\n  Datamap.prototype.sdnTopo = '__SDN__';\n  Datamap.prototype.sdsTopo = '__SDS__';\n  Datamap.prototype.senTopo = '__SEN__';\n  Datamap.prototype.serTopo = '__SER__';\n  Datamap.prototype.sgpTopo = '__SGP__';\n  Datamap.prototype.sgsTopo = '__SGS__';\n  Datamap.prototype.shnTopo = '__SHN__';\n  Datamap.prototype.slbTopo = '__SLB__';\n  Datamap.prototype.sleTopo = '__SLE__';\n  Datamap.prototype.slvTopo = '__SLV__';\n  Datamap.prototype.smrTopo = '__SMR__';\n  Datamap.prototype.solTopo = '__SOL__';\n  Datamap.prototype.somTopo = '__SOM__';\n  Datamap.prototype.spmTopo = '__SPM__';\n  Datamap.prototype.srbTopo = '__SRB__';\n  Datamap.prototype.stpTopo = '__STP__';\n  Datamap.prototype.surTopo = '__SUR__';\n  Datamap.prototype.svkTopo = '__SVK__';\n  Datamap.prototype.svnTopo = '__SVN__';\n  Datamap.prototype.sweTopo = '__SWE__';\n  Datamap.prototype.swzTopo = '__SWZ__';\n  Datamap.prototype.sxmTopo = '__SXM__';\n  Datamap.prototype.sycTopo = '__SYC__';\n  Datamap.prototype.syrTopo = '__SYR__';\n  Datamap.prototype.tcaTopo = '__TCA__';\n  Datamap.prototype.tcdTopo = '__TCD__';\n  Datamap.prototype.tgoTopo = '__TGO__';\n  Datamap.prototype.thaTopo = '__THA__';\n  Datamap.prototype.tjkTopo = '__TJK__';\n  Datamap.prototype.tkmTopo = '__TKM__';\n  Datamap.prototype.tlsTopo = '__TLS__';\n  Datamap.prototype.tonTopo = '__TON__';\n  Datamap.prototype.ttoTopo = '__TTO__';\n  Datamap.prototype.tunTopo = '__TUN__';\n  Datamap.prototype.turTopo = '__TUR__';\n  Datamap.prototype.tuvTopo = '__TUV__';\n  Datamap.prototype.twnTopo = '__TWN__';\n  Datamap.prototype.tzaTopo = '__TZA__';\n  Datamap.prototype.ugaTopo = '__UGA__';\n  Datamap.prototype.ukrTopo = '__UKR__';\n  Datamap.prototype.umiTopo = '__UMI__';\n  Datamap.prototype.uryTopo = '__URY__';\n  Datamap.prototype.usaTopo = {\"type\":\"Topology\",\"transform\":{\"scale\":[0.03514630243024302,0.005240860686068607],\"translate\":[-178.123152,18.948267]},\"objects\":{\"usa\":{\"type\":\"GeometryCollection\",\"geometries\":[{\"type\":\"Polygon\",\"id\":\"AL\",\"arcs\":[[0,1,2,3,4]],\"properties\":{\"name\":\"Alabama\"}},{\"type\":\"MultiPolygon\",\"id\":\"AK\",\"arcs\":[[[5]],[[6]],[[7]],[[8]],[[9]],[[10]],[[11]],[[12]],[[13]],[[14]],[[15]],[[16]],[[17]],[[18]],[[19]],[[20]],[[21]],[[22]],[[23]],[[24]],[[25]],[[26]],[[27]],[[28]],[[29]],[[30]],[[31]],[[32]],[[33]],[[34]],[[35]],[[36]],[[37]],[[38]],[[39]],[[40]],[[41]],[[42]],[[43]]],\"properties\":{\"name\":\"Alaska\"}},{\"type\":\"Polygon\",\"id\":\"AZ\",\"arcs\":[[44,45,46,47,48]],\"properties\":{\"name\":\"Arizona\"}},{\"type\":\"Polygon\",\"id\":\"AR\",\"arcs\":[[49,50,51,52,53,54]],\"properties\":{\"name\":\"Arkansas\"}},{\"type\":\"Polygon\",\"id\":\"CA\",\"arcs\":[[55,-47,56,57]],\"properties\":{\"name\":\"California\"}},{\"type\":\"Polygon\",\"id\":\"CO\",\"arcs\":[[58,59,60,61,62,63]],\"properties\":{\"name\":\"Colorado\"}},{\"type\":\"Polygon\",\"id\":\"CT\",\"arcs\":[[64,65,66,67]],\"properties\":{\"name\":\"Connecticut\"}},{\"type\":\"Polygon\",\"id\":\"DE\",\"arcs\":[[68,69,70,71]],\"properties\":{\"name\":\"Delaware\"}},{\"type\":\"Polygon\",\"id\":\"DC\",\"arcs\":[[72,73]],\"properties\":{\"name\":\"District of Columbia\"}},{\"type\":\"Polygon\",\"id\":\"FL\",\"arcs\":[[74,75,-2]],\"properties\":{\"name\":\"Florida\"}},{\"type\":\"Polygon\",\"id\":\"GA\",\"arcs\":[[76,77,-75,-1,78,79]],\"properties\":{\"name\":\"Georgia\"}},{\"type\":\"MultiPolygon\",\"id\":\"HI\",\"arcs\":[[[80]],[[81]],[[82]],[[83]],[[84]]],\"properties\":{\"name\":\"Hawaii\"}},{\"type\":\"Polygon\",\"id\":\"ID\",\"arcs\":[[85,86,87,88,89,90,91]],\"properties\":{\"name\":\"Idaho\"}},{\"type\":\"Polygon\",\"id\":\"IL\",\"arcs\":[[92,93,94,95,96,97]],\"properties\":{\"name\":\"Illinois\"}},{\"type\":\"Polygon\",\"id\":\"IN\",\"arcs\":[[98,99,-95,100,101]],\"properties\":{\"name\":\"Indiana\"}},{\"type\":\"Polygon\",\"id\":\"IA\",\"arcs\":[[102,-98,103,104,105,106]],\"properties\":{\"name\":\"Iowa\"}},{\"type\":\"Polygon\",\"id\":\"KS\",\"arcs\":[[107,108,-60,109]],\"properties\":{\"name\":\"Kansas\"}},{\"type\":\"Polygon\",\"id\":\"KY\",\"arcs\":[[110,111,112,113,-96,-100,114]],\"properties\":{\"name\":\"Kentucky\"}},{\"type\":\"Polygon\",\"id\":\"LA\",\"arcs\":[[115,116,117,-52]],\"properties\":{\"name\":\"Louisiana\"}},{\"type\":\"Polygon\",\"id\":\"ME\",\"arcs\":[[118,119]],\"properties\":{\"name\":\"Maine\"}},{\"type\":\"MultiPolygon\",\"id\":\"MD\",\"arcs\":[[[120]],[[-71,121,122,123,124,-74,125,126,127]]],\"properties\":{\"name\":\"Maryland\"}},{\"type\":\"Polygon\",\"id\":\"MA\",\"arcs\":[[128,129,130,131,-68,132,133,134]],\"properties\":{\"name\":\"Massachusetts\"}},{\"type\":\"MultiPolygon\",\"id\":\"MI\",\"arcs\":[[[-102,135,136]],[[137]],[[138,139]],[[140]]],\"properties\":{\"name\":\"Michigan\"}},{\"type\":\"Polygon\",\"id\":\"MN\",\"arcs\":[[-107,141,142,143,144]],\"properties\":{\"name\":\"Minnesota\"}},{\"type\":\"Polygon\",\"id\":\"MS\",\"arcs\":[[-4,145,-116,-51,146]],\"properties\":{\"name\":\"Mississippi\"}},{\"type\":\"Polygon\",\"id\":\"MO\",\"arcs\":[[-97,-114,147,-55,148,-108,149,-104]],\"properties\":{\"name\":\"Missouri\"}},{\"type\":\"Polygon\",\"id\":\"MT\",\"arcs\":[[150,151,-92,152,153]],\"properties\":{\"name\":\"Montana\"}},{\"type\":\"Polygon\",\"id\":\"NE\",\"arcs\":[[-105,-150,-110,-59,154,155]],\"properties\":{\"name\":\"Nebraska\"}},{\"type\":\"Polygon\",\"id\":\"NV\",\"arcs\":[[156,-48,-56,157,-88]],\"properties\":{\"name\":\"Nevada\"}},{\"type\":\"Polygon\",\"id\":\"NH\",\"arcs\":[[-135,158,159,-120,160]],\"properties\":{\"name\":\"New Hampshire\"}},{\"type\":\"Polygon\",\"id\":\"NJ\",\"arcs\":[[161,-69,162,163]],\"properties\":{\"name\":\"New Jersey\"}},{\"type\":\"Polygon\",\"id\":\"NM\",\"arcs\":[[164,165,166,-45,-62]],\"properties\":{\"name\":\"New Mexico\"}},{\"type\":\"Polygon\",\"id\":\"NY\",\"arcs\":[[-133,-67,167,-164,168,169,170]],\"properties\":{\"name\":\"New York\"}},{\"type\":\"Polygon\",\"id\":\"NC\",\"arcs\":[[171,172,-80,173,174]],\"properties\":{\"name\":\"North Carolina\"}},{\"type\":\"Polygon\",\"id\":\"ND\",\"arcs\":[[175,-154,176,-143]],\"properties\":{\"name\":\"North Dakota\"}},{\"type\":\"Polygon\",\"id\":\"OH\",\"arcs\":[[177,-115,-99,-137,178,179]],\"properties\":{\"name\":\"Ohio\"}},{\"type\":\"Polygon\",\"id\":\"OK\",\"arcs\":[[-149,-54,180,-165,-61,-109]],\"properties\":{\"name\":\"Oklahoma\"}},{\"type\":\"Polygon\",\"id\":\"OR\",\"arcs\":[[-89,-158,-58,181,182]],\"properties\":{\"name\":\"Oregon\"}},{\"type\":\"Polygon\",\"id\":\"PA\",\"arcs\":[[-163,-72,-128,183,-180,184,-169]],\"properties\":{\"name\":\"Pennsylvania\"}},{\"type\":\"MultiPolygon\",\"id\":\"RI\",\"arcs\":[[[185,-130]],[[186,-65,-132]]],\"properties\":{\"name\":\"Rhode Island\"}},{\"type\":\"Polygon\",\"id\":\"SC\",\"arcs\":[[187,-77,-173]],\"properties\":{\"name\":\"South Carolina\"}},{\"type\":\"Polygon\",\"id\":\"SD\",\"arcs\":[[-142,-106,-156,188,-151,-176]],\"properties\":{\"name\":\"South Dakota\"}},{\"type\":\"Polygon\",\"id\":\"TN\",\"arcs\":[[189,-174,-79,-5,-147,-50,-148,-113]],\"properties\":{\"name\":\"Tennessee\"}},{\"type\":\"Polygon\",\"id\":\"TX\",\"arcs\":[[-53,-118,190,-166,-181]],\"properties\":{\"name\":\"Texas\"}},{\"type\":\"Polygon\",\"id\":\"UT\",\"arcs\":[[191,-63,-49,-157,-87]],\"properties\":{\"name\":\"Utah\"}},{\"type\":\"Polygon\",\"id\":\"VT\",\"arcs\":[[-134,-171,192,-159]],\"properties\":{\"name\":\"Vermont\"}},{\"type\":\"MultiPolygon\",\"id\":\"VA\",\"arcs\":[[[193,-123]],[[120]],[[-126,-73,-125,194,-175,-190,-112,195]]],\"properties\":{\"name\":\"Virginia\"}},{\"type\":\"MultiPolygon\",\"id\":\"WA\",\"arcs\":[[[-183,196,-90]],[[197]],[[198]]],\"properties\":{\"name\":\"Washington\"}},{\"type\":\"Polygon\",\"id\":\"WV\",\"arcs\":[[-184,-127,-196,-111,-178]],\"properties\":{\"name\":\"West Virginia\"}},{\"type\":\"Polygon\",\"id\":\"WI\",\"arcs\":[[199,-93,-103,-145,200,-140]],\"properties\":{\"name\":\"Wisconsin\"}},{\"type\":\"Polygon\",\"id\":\"WY\",\"arcs\":[[-189,-155,-64,-192,-86,-152]],\"properties\":{\"name\":\"Wyoming\"}}]}},\"arcs\":[[[2632,3060],[5,-164],[7,-242],[4,-53],[3,-30],[-2,-19],[4,-11],[-5,-25],[0,-24],[-2,-32],[2,-57],[-2,-51],[3,-52]],[[2649,2300],[-14,-1],[-59,0],[-1,-25],[6,-37],[-1,-31],[2,-16],[-4,-28]],[[2578,2162],[-4,-6],[-7,31],[-1,47],[-2,6],[-3,-36],[-1,-34],[-7,9]],[[2553,2179],[-2,291],[6,363],[4,209],[-3,20]],[[2558,3062],[24,1],[50,-3]],[[1324,6901],[1,32],[6,-19],[-1,-32],[-8,4],[2,15]],[[1317,6960],[5,-23],[-3,-33],[-2,11],[0,45]],[[1285,7153],[6,5],[3,-8],[-1,-28],[-6,-6],[-5,17],[3,20]],[[1267,7137],[12,-7],[3,-36],[13,-41],[4,-25],[0,-21],[3,-4],[1,-27],[5,-27],[0,-25],[3,8],[2,-19],[1,-74],[-3,-17],[-7,3],[-3,38],[-2,-3],[-6,28],[-2,-10],[-5,10],[1,-28],[5,7],[3,-10],[-2,-39],[-5,4],[-9,49],[-2,25],[1,26],[-7,-2],[0,20],[5,2],[5,18],[-2,31],[-6,7],[-1,50],[-2,25],[-4,-18],[-2,28],[4,14],[-3,32],[2,8]],[[1263,6985],[5,-12],[4,15],[4,-7],[-4,-28],[-6,8],[-3,24]],[[1258,7247],[-4,19],[5,13],[15,-18],[7,1],[5,-36],[9,-29],[-1,-22],[-5,-11],[-6,5],[-5,-14],[-6,9],[-7,-9],[-1,45],[0,30],[-5,1],[-1,16]],[[1252,7162],[-4,14],[-4,32],[0,24],[3,11],[4,-11],[0,20],[12,-35],[1,-33],[-4,-5],[-3,-37],[3,-11],[-3,-43],[-5,9],[0,-27],[-3,13],[-2,54],[5,25]],[[1207,7331],[8,38],[3,-16],[7,-13],[6,-2],[0,-30],[6,-99],[0,-85],[-1,-22],[-4,13],[-10,84],[-7,25],[3,20],[-3,48],[-8,39]],[[1235,7494],[10,-15],[5,2],[0,-14],[8,-52],[-5,8],[-2,-18],[6,-27],[2,-48],[-6,-13],[-2,-16],[-10,-35],[-3,1],[-1,37],[2,22],[-1,32],[-3,40],[0,21],[-2,51],[-4,22],[-1,38],[7,-36]],[[1203,7324],[4,0],[4,-35],[-2,-24],[-6,-5],[0,38],[0,26]],[[1207,7331],[-5,7],[-3,26],[-6,18],[-5,37],[-6,17],[1,30],[4,10],[1,26],[3,-11],[8,-1],[6,17],[8,-23],[-5,-26],[2,-9],[4,28],[10,-9],[5,-21],[-3,-38],[3,-3],[3,-50],[-7,-7],[-14,41],[0,-42],[-4,-17]],[[883,7871],[-12,-48],[-1,-19],[-9,-12],[2,29],[10,30],[7,34],[3,-14]],[[870,7943],[-2,-39],[-4,-41],[-6,14],[5,47],[7,19]],[[863,9788],[3,-8],[15,-9],[8,5],[10,0],[12,-7],[7,4],[7,-15],[12,-18],[16,-4],[5,10],[11,6],[4,14],[12,2],[0,-9],[7,5],[15,-15],[9,-24],[10,-11],[2,-11],[8,-2],[8,-18],[1,-11],[5,9],[6,-7],[0,-1783],[13,-16],[2,17],[14,-24],[8,30],[18,4],[-3,-52],[4,-17],[10,-17],[2,-27],[29,-101],[4,-63],[6,17],[12,31],[7,1],[3,23],[0,34],[5,0],[1,31],[9,7],[13,26],[13,-45],[-1,-27],[3,-27],[7,-7],[10,-40],[-1,-12],[4,-22],[12,-25],[19,-110],[3,-29],[6,-29],[8,-65],[9,-55],[-3,-23],[9,-9],[-2,-33],[7,-14],[1,-38],[7,2],[14,-40],[9,-7],[5,-19],[4,-5],[1,-19],[9,-5],[3,-23],[-4,-43],[1,-36],[4,-58],[-4,-15],[-6,-53],[-10,-39],[-3,20],[-4,-6],[-3,39],[1,17],[-3,20],[7,21],[-2,7],[-7,-26],[-3,17],[-4,-10],[-12,42],[4,46],[-8,-15],[0,-23],[-6,17],[-1,22],[4,24],[-1,24],[-6,-19],[-6,42],[-3,-8],[-2,36],[5,23],[6,0],[-2,28],[3,36],[-5,-1],[-9,32],[-6,37],[-15,27],[0,77],[-4,9],[1,31],[-5,9],[-8,42],[-2,22],[-12,7],[-14,56],[-6,132],[-3,-30],[1,-27],[6,-53],[-1,-8],[3,-43],[0,-28],[-6,6],[-4,31],[-6,6],[-8,-9],[0,45],[-5,38],[-5,-12],[-17,40],[-2,-11],[10,-13],[7,-31],[3,-1],[1,-25],[4,-30],[-10,-16],[-5,10],[0,-26],[-8,20],[-2,14],[-5,0],[-13,38],[-10,33],[-1,20],[-5,30],[-14,21],[-9,21],[-14,26],[-9,24],[1,26],[2,-9],[3,17],[-3,38],[4,21],[-2,9],[-7,-40],[-14,-26],[-18,10],[-14,24],[-1,18],[-7,-4],[-7,14],[-17,12],[-9,1],[-21,-10],[-8,-7],[-10,27],[-12,12],[-3,17],[-2,28],[-8,-2],[-3,-25],[-15,34],[-2,14],[-15,-27],[-7,-32],[-3,30],[3,17],[4,-5],[14,22],[-2,17],[-6,-8],[-3,22],[-6,3],[-6,55],[-3,-13],[-8,-8],[-3,8],[-3,-18],[-11,6],[-1,-20],[-7,-5],[-3,7],[2,36],[-3,-1],[-5,-38],[7,-12],[1,-27],[4,-30],[-3,-31],[-5,10],[-2,-15],[6,-7],[3,-41],[-8,-9],[-4,9],[-7,-12],[-3,10],[-9,-2],[0,16],[-4,-10],[-3,-20],[-3,18],[-5,-25],[2,-12],[-6,-15],[-6,-2],[-3,-20],[-6,-17],[-4,6],[-5,-21],[-4,1],[-8,-43],[-9,-3],[-3,14],[-5,-23],[-11,17],[2,33],[8,11],[4,-2],[2,13],[8,25],[0,21],[-11,-28],[-9,16],[-1,12],[5,48],[8,34],[1,29],[2,5],[1,30],[-4,34],[10,12],[19,48],[4,-19],[6,-5],[9,20],[-10,26],[-4,20],[-7,-2],[-5,9],[-2,-8],[-9,-14],[-4,-26],[-9,-6],[-9,-30],[-1,-20],[-7,-11],[-2,-22],[-5,-13],[-2,-39],[-10,-25],[5,-20],[-4,-29],[-9,-5],[-1,-38],[-8,-13],[-3,15],[-4,-29],[-5,-1],[1,-21],[-11,-13],[-2,-57],[12,-3],[10,-16],[3,-19],[-4,-30],[-7,-19],[-6,-1],[0,-17],[-4,-6],[1,-21],[-4,-31],[-9,-29],[-5,0],[-5,-11],[-5,2],[-4,-11],[2,-16],[-7,-8],[-2,-23],[-5,14],[-5,-45],[-9,4],[1,-24],[-6,6],[-3,-11],[0,-32],[-6,-50],[-10,-6],[-7,-23],[-2,-13],[-5,18],[-8,-48],[-2,13],[-5,-4],[-1,-27],[-5,-10],[-6,4],[-4,-27],[8,-9],[-9,-60],[-25,-20],[-6,-54],[-2,12],[1,33],[-5,6],[-6,-13],[-1,-14],[-10,-22],[-4,-25],[-1,18],[-2,-21],[-6,14],[-10,-33],[-8,2],[1,25],[-4,24],[-3,-20],[1,-21],[-11,-64],[-3,16],[-1,-24],[-8,4],[-1,38],[-4,8],[-2,-14],[4,-16],[-2,-27],[-5,-13],[-5,29],[-5,2],[-1,-11],[5,-17],[-9,-27],[6,-7],[0,-13],[-5,9],[-7,-25],[-15,1],[-7,-16],[0,-13],[-8,-15],[-6,6],[-2,35],[6,12],[4,43],[6,1],[13,28],[10,1],[4,-27],[3,20],[-1,23],[6,10],[7,0],[8,50],[10,45],[12,40],[15,18],[6,-9],[6,12],[1,-17],[-3,-19],[4,-14],[1,23],[7,2],[2,-15],[5,-5],[0,18],[-8,15],[0,11],[5,49],[6,28],[9,27],[15,24],[10,35],[5,-13],[4,5],[-1,22],[1,21],[8,44],[11,28],[8,38],[0,21],[7,148],[11,40],[-1,31],[-27,-45],[-8,6],[-2,18],[-5,9],[-1,21],[-4,-10],[-3,-32],[5,-41],[-6,-18],[-5,7],[-9,64],[-6,33],[-4,0],[-2,-24],[-3,-4],[-4,19],[-5,4],[-2,32],[-16,-37],[-13,-26],[-1,-14],[-11,-22],[-6,20],[5,23],[-1,54],[-4,57],[7,24],[-6,49],[-5,27],[-4,39],[-6,17],[-2,-34],[-7,-8],[-12,-22],[-14,-9],[-7,2],[-7,12],[-1,30],[-5,9],[-9,42],[-8,8],[-8,46],[6,21],[1,39],[-5,-8],[0,24],[2,19],[-6,18],[0,-19],[-7,8],[-1,32],[-6,4],[-3,22],[0,27],[-5,-12],[-1,26],[7,6],[-6,30],[10,2],[0,35],[2,24],[18,77],[4,23],[3,-5],[-2,33],[7,55],[6,22],[11,9],[8,-9],[12,-33],[8,4],[11,32],[11,49],[6,6],[1,-13],[13,0],[12,10],[11,52],[0,12],[-5,48],[-1,28],[-8,31],[-3,26],[8,-7],[8,22],[0,20],[-10,39],[-8,-30],[-7,5],[-6,-17],[-8,-4],[-2,-11],[-9,-17],[-2,-28],[-5,-12],[-2,34],[-5,7],[-4,-26],[-2,12],[-10,19],[-20,-1],[-14,-21],[-6,-3],[-11,13],[-22,14],[-6,12],[-3,19],[2,26],[-8,22],[2,24],[5,12],[-2,31],[-8,0],[-6,8],[-13,6],[-7,16],[-10,16],[-1,19],[16,27],[20,43],[15,27],[8,-15],[8,-3],[2,21],[-5,3],[-1,18],[20,29],[22,22],[12,2],[7,-7],[-4,-32],[2,-22],[-3,-15],[4,-26],[8,5],[10,-5],[11,6],[4,-10],[7,-2],[7,10],[8,-11],[9,42],[5,2],[5,-8],[2,24],[-12,11],[-11,-9],[1,31],[-8,34],[-10,10],[-2,30],[7,8],[9,-31],[-1,-24],[4,-18],[10,-22],[2,23],[-11,30],[5,54],[-4,10],[-11,-12],[-11,3],[-2,10],[-6,-10],[-24,23],[0,24],[-7,54],[-6,19],[-9,17],[-19,46],[-9,18],[-8,4],[-13,31],[-12,18],[-1,6],[9,10],[4,29],[1,59],[25,-4],[31,13],[8,11],[12,29],[12,45],[3,45],[5,38],[10,33],[5,24],[13,38],[2,-10],[11,-3],[16,20],[10,21],[24,64],[9,4],[1,-10],[9,7],[9,-2],[18,9],[17,28],[17,58],[7,13],[2,-10],[26,-24],[2,-17],[-9,-22],[-4,-1],[0,-29],[14,9],[0,16],[6,14],[2,-8],[5,33],[13,-30],[-2,-23],[8,-6],[5,-14],[7,22],[13,1],[7,7],[18,-7],[10,-8],[-5,-45],[17,-12],[2,-11],[16,-20],[1,9],[12,13],[11,-1],[0,-11],[7,-1],[7,15],[11,2],[9,-6],[11,-16],[5,3],[7,-22],[4,9],[7,-7],[5,-13]],[[717,7456],[-1,-8],[-9,13],[7,49],[6,4],[4,45],[5,-40],[4,14],[8,-22],[0,-31],[-11,-4],[-5,-13],[-8,-7]],[[688,7363],[8,25],[-8,6],[0,22],[6,14],[5,-10],[0,-22],[3,15],[0,32],[5,-15],[1,21],[5,-12],[5,0],[5,11],[7,-20],[0,-55],[9,4],[-6,-37],[-11,15],[4,-24],[-3,-20],[-6,10],[0,-38],[-8,-10],[-3,-16],[-5,15],[-6,-40],[-4,-4],[-5,-18],[-2,43],[-6,-23],[-1,13],[-6,14],[0,39],[-6,15],[4,45],[11,28],[7,-2],[1,-21]],[[671,7185],[-6,-39],[-2,6],[8,33]],[[640,7055],[4,-2],[-1,-40],[-8,6],[-1,13],[6,23]],[[519,6933],[-2,-41],[-9,-33],[5,51],[2,-5],[4,28]],[[501,6947],[5,0],[0,-20],[-5,-23],[-5,15],[-3,-14],[-2,35],[2,12],[8,-5]],[[451,6875],[1,-16],[-3,-11],[-3,18],[5,9]],[[447,8527],[-4,-19],[-2,16],[6,3]],[[436,6781],[6,-7],[-1,-16],[-5,1],[0,22]],[[358,6745],[2,-22],[-5,-10],[-1,23],[4,9]],[[352,6718],[-8,-21],[-2,14],[3,19],[7,-12]],[[335,7902],[6,7],[2,-14],[5,3],[6,-12],[1,-54],[-3,-18],[-7,-11],[-2,-18],[-11,20],[-5,-1],[-10,28],[-4,0],[-6,15],[-3,25],[4,7],[10,-7],[5,20],[5,2],[3,14],[4,-6]],[[334,6690],[5,-14],[-10,-36],[1,-6],[12,26],[0,-15],[-5,-17],[-8,-12],[-1,-18],[-8,-18],[-7,-1],[-5,-18],[-9,-16],[-5,17],[9,20],[3,-3],[8,16],[-2,19],[4,20],[6,-9],[1,12],[-7,4],[-4,14],[4,23],[11,13],[2,-26],[5,25]],[[266,6527],[10,37],[1,16],[4,17],[7,9],[3,-10],[1,-25],[-12,-27],[-6,-40],[-6,-13],[-2,36]],[[238,6477],[2,-19],[-8,-1],[-1,13],[7,7]],[[227,7303],[-4,-18],[-1,18],[5,0]],[[212,6440],[2,-18],[-5,-13],[-1,19],[4,12]],[[182,8542],[22,-28],[13,24],[6,-2],[5,-14],[2,-23],[11,-12],[4,-12],[15,-5],[8,-8],[-4,-28],[-7,6],[-8,-5],[-4,-13],[-4,-28],[-5,26],[-6,18],[-6,2],[-3,20],[-15,25],[-6,1],[-11,-22],[-7,11],[-4,23],[4,44]],[[162,6381],[0,-22],[-5,-4],[1,19],[4,7]],[[128,6335],[4,-8],[10,1],[1,-7],[-13,-9],[-2,23]],[[108,6360],[0,19],[4,7],[6,-19],[-2,-17],[-4,1],[1,-20],[-5,-2],[-12,-21],[-6,6],[2,15],[7,-2],[9,33]],[[47,6279],[5,3],[0,-24],[-6,3],[-8,-28],[-4,37],[4,1],[0,29],[5,1],[0,-21],[4,-1]],[[28,6296],[3,-9],[-2,-32],[-5,-10],[0,20],[4,31]],[[0,6291],[5,-1],[4,-23],[-4,-27],[-5,51]],[[9993,6496],[6,-13],[0,-19],[-11,-12],[-8,31],[0,15],[13,-2]],[[1966,3444],[-1,-1081]],[[1965,2363],[-57,0],[-34,71],[-73,150],[3,43]],[[1804,2627],[6,8],[1,16],[-1,36],[-4,1],[-2,71],[6,27],[0,28],[-1,45],[4,34],[4,12],[4,25],[-6,27],[-4,51],[-5,31],[0,24]],[[1806,3063],[2,26],[0,36],[-3,36],[-2,112],[11,7],[3,-23],[3,1],[3,33],[0,153]],[[1823,3444],[101,2],[42,-2]],[[2515,3253],[-1,-35],[-4,-11],[-1,-29],[-5,-31],[0,-46],[-3,-34],[-3,-5]],[[2498,3062],[2,-17],[-4,-14],[-2,-33],[-3,-8],[0,-38],[-5,-10],[0,-13],[-6,-31],[2,-21],[-5,-30],[-5,-59],[5,-25],[-2,-16],[1,-39],[-2,-26]],[[2474,2682],[-69,3],[-13,0]],[[2392,2685],[0,101],[-4,8],[-5,-9],[-3,18]],[[2380,2803],[1,335],[-5,211]],[[2376,3349],[4,0],[123,-1],[2,-36],[-4,-23],[-4,-36],[18,0]],[[1654,4398],[0,-331],[0,-241],[36,-171],[35,-169],[27,-137],[20,-101],[34,-185]],[[1804,2627],[-38,-18],[-30,-16],[-4,25],[0,40],[-2,47],[-4,33],[-9,46],[-12,43],[-2,-12],[-4,8],[1,18],[-5,39],[-7,-8],[-12,28],[-2,23],[-8,28],[-9,-1],[-7,13],[-10,-6],[-5,26],[1,53],[-1,8],[1,38],[-8,28],[0,39],[-3,2],[-4,33],[-4,8],[-1,20],[-11,79],[-5,23],[-1,61],[2,-5],[2,37],[-4,33],[-5,-4],[-7,30],[-2,24],[0,23],[-3,31],[0,50],[5,0],[-2,70],[-2,-7],[-1,-35],[-5,-7],[-7,26],[-1,45],[-4,35],[-6,22],[-3,25],[-9,50],[2,14],[-4,64],[2,35],[-3,54],[-7,52],[-7,29],[-2,35],[7,83],[2,29],[-2,22],[3,57],[-2,52],[-3,13],[1,42]],[[1534,4399],[28,1],[24,1],[38,-3],[30,0]],[[2107,4208],[57,0],[0,-191]],[[2164,4017],[1,-574]],[[2165,3443],[-28,1]],[[2137,3444],[-38,-1],[-72,0],[-15,1],[-46,0]],[[1966,3444],[0,223],[-1,21],[0,162],[0,357]],[[1965,4207],[32,1],[63,-1],[47,1]],[[3025,4400],[0,-113],[-2,-18]],[[3023,4269],[-2,3],[-12,-14],[-15,4],[-7,-26],[-7,-9],[-8,-22]],[[2972,4205],[-2,22],[7,21],[-2,16],[2,144]],[[2977,4408],[12,-2],[36,-3],[0,-3]],[[2922,3980],[-2,-23]],[[2920,3957],[-3,-13],[0,-30],[5,-29],[1,-47],[6,-49],[3,-2],[1,-66]],[[2933,3721],[-19,2],[-2,241]],[[2912,3964],[5,21],[5,-5]],[[2876,3786],[-2,27]],[[2874,3813],[2,12],[4,-19],[-4,-20]],[[2649,2300],[4,-55],[39,-13],[37,-14],[1,-41],[4,1],[1,39],[-1,35],[2,15],[7,-16],[8,-7]],[[2751,2244],[1,-83],[4,-93],[8,-122],[13,-131],[-2,-9],[1,-61],[5,-68],[8,-137],[2,-42],[0,-44],[-3,-158],[-3,-3],[-3,-49],[1,-16],[-5,-36],[-2,9],[-6,-15],[-9,-8],[-2,20],[1,29],[-7,85],[-5,15],[-4,-11],[-3,47],[-1,38],[-6,43],[-2,28],[1,41],[-3,8],[1,-24],[-3,-7],[-9,104],[-4,26],[9,76],[-6,-4],[-4,-24],[-3,38],[5,104],[1,87],[-4,21],[-1,28],[-5,6],[-7,46],[-5,19],[0,28],[-4,11],[-3,31],[-11,42],[-9,-10],[0,-29],[-3,5],[-12,-35],[-12,-9],[0,21],[-3,25],[-15,57],[-10,24],[-10,6],[-8,-4],[-17,-18]],[[2703,3063],[-6,-41],[0,-20],[9,-40],[3,3],[5,-42],[1,-22],[4,-40],[7,-24],[3,-35],[8,-33],[0,-22],[5,-35],[7,-29],[2,-32],[1,-40],[3,-14],[5,-51],[0,-33],[7,-16]],[[2767,2497],[-7,-65],[-2,-34],[-3,-29],[0,-30],[-3,-14],[-1,-81]],[[2632,3060],[37,1]],[[2669,3061],[20,-1],[14,3]],[[640,0],[-7,17],[-1,16],[1,43],[-5,73],[4,24],[2,34],[-2,22],[1,23],[8,-27],[9,-20],[5,-29],[0,-26],[8,-40],[-5,-34],[-8,-15],[-7,-25],[-3,-36]],[[613,397],[3,-26],[4,11],[9,-30],[-1,-27],[-9,-14],[-2,6],[-1,33],[-5,7],[-1,19],[3,21]],[[602,432],[-3,-20],[-7,0],[2,22],[8,-2]],[[574,525],[3,-45],[-2,-26],[-6,-5],[-4,54],[4,1],[5,21]],[[531,626],[3,-2],[2,-20],[-1,-28],[-4,-18],[-9,22],[1,31],[8,15]],[[1908,4871],[0,-472]],[[1908,4399],[-31,-1],[-54,0]],[[1823,4398],[-85,1]],[[1738,4399],[0,349],[4,62],[-2,16],[-6,3],[-2,26],[6,68],[3,6],[3,29],[-1,17],[4,23],[1,34],[6,56],[-2,26],[-7,14],[-4,32]],[[1741,5160],[0,34],[-3,33],[0,16],[0,255],[0,236]],[[1738,5734],[28,0]],[[1766,5734],[0,-195],[9,-54],[1,-52],[5,-23],[6,-8],[0,-14],[11,-51],[1,-21],[8,-20],[0,-12],[8,1],[-4,-71],[-1,-45],[3,-29],[-5,-21],[2,-20],[-1,-21],[6,-20],[7,26],[3,21],[5,-19],[-1,-15],[3,-37],[5,-39],[3,-13],[0,-37],[3,-16],[6,-2],[4,-61],[3,-11],[3,18],[9,-1],[7,17],[3,-10],[7,9],[2,-11],[5,8],[7,39],[4,-33],[5,-20]],[[2489,4496],[53,-3],[28,0]],[[2570,4493],[-1,-37],[4,-43],[5,-70]],[[2578,4343],[0,-450],[-3,-35],[3,-40],[1,-34],[-4,-27],[-1,-25],[-5,-41],[-3,-3],[0,-24],[-2,-9],[-1,-45],[0,-13]],[[2563,3597],[-3,-27],[2,-34],[-11,-17],[-1,-20],[2,-25],[-3,-16],[-11,29],[-3,-2],[-4,-33],[1,-11]],[[2532,3441],[-5,2],[-6,55],[2,12],[-2,37],[0,29],[-9,41],[-3,-4],[-3,25],[-9,38],[0,31],[5,49],[-1,18],[3,23],[-4,13],[-6,9],[-3,-18],[-3,11],[-1,63],[-10,41],[-9,49],[-3,58],[-1,39],[3,27]],[[2467,4089],[0,35],[8,21],[1,29],[4,19],[0,33],[-4,27],[2,34],[11,9],[9,24],[0,29],[4,13],[1,37],[0,24],[-7,18],[-1,20],[-6,35]],[[2655,4340],[0,-228],[0,-266]],[[2655,3846],[-2,-9],[2,-52],[-5,-1],[-5,-18],[-8,9],[1,-38],[-5,-16],[-2,-24],[-5,-9],[-3,-48],[-3,-13],[-6,18],[-1,22],[-7,-24],[1,-21],[-7,-7],[-1,19],[-8,-19],[-2,-20],[-7,28],[-4,-6],[-2,13],[-3,-13],[-7,-2],[-3,-18]],[[2578,4343],[3,-12],[8,0],[9,22]],[[2598,4353],[23,0],[34,0],[0,-13]],[[2473,4685],[0,-28],[4,-19],[-3,-23],[1,-43],[2,-30],[10,-22],[2,-24]],[[2467,4089],[-3,7],[-6,38],[-3,-1],[-40,-5],[-39,-2],[-33,3]],[[2343,4129],[-3,25],[2,49],[-3,43],[0,48],[-5,17],[-1,26],[2,23],[-2,33],[-4,13],[-5,86]],[[2324,4492],[-5,41],[2,29],[1,37],[2,14],[-3,19],[1,33],[-2,16],[4,4]],[[2324,4685],[144,0],[5,0]],[[2356,4017],[3,-18],[9,-14],[-6,-56],[4,-18],[4,-45],[6,-10],[0,-412]],[[2376,3444],[-156,0],[-55,-1]],[[2164,4017],[5,0],[187,0]],[[2718,3716],[-1,-57],[4,-37],[4,-28],[2,-22],[5,-22],[4,-3]],[[2736,3547],[-11,-51],[-11,-29],[0,-14],[-4,-13],[0,-16],[-6,-8],[-1,-21],[-16,-27]],[[2687,3368],[0,-3],[-24,2],[-22,6],[-5,-2],[-32,8],[-36,-5],[-6,9],[1,-35],[-36,2],[-3,-2]],[[2524,3348],[1,24],[5,-8],[2,77]],[[2655,3846],[11,0],[5,-40],[1,-17],[9,-7],[6,-26],[5,13],[10,-14],[4,19],[4,6],[1,-32],[3,-6],[4,-26]],[[2474,2682],[3,-22],[-2,-9],[-1,-38],[5,-24],[0,-57],[-3,-44],[-7,-27],[-2,-43],[-2,4],[-1,-70],[-3,-2],[2,-37],[-2,-14],[54,0],[-3,-63],[4,-41],[1,-32],[4,-20]],[[2521,2143],[-9,-26],[0,-19],[7,-12],[3,30],[6,-30],[-1,-24],[-3,-11],[-7,10],[1,-18],[-2,-27],[5,-24],[9,-7],[3,-29],[3,-4],[-5,-32],[-5,6],[-4,33],[-10,18],[0,33],[-6,-11],[1,-27],[-3,-25],[-3,-4],[-3,28],[-7,1],[-2,-29],[-4,-9],[-5,18],[-4,2],[-3,47],[-7,21],[-2,-3],[-3,40],[-7,-5],[0,24],[-8,-23],[1,-18],[-5,-17],[-9,8],[-10,27],[-7,11],[-16,-9],[-2,-8]],[[2398,2049],[-2,19],[6,68],[-2,37],[2,20],[-1,26],[3,19],[3,50],[0,40],[-8,78],[0,41],[-7,42],[0,196]],[[3046,5029],[12,26],[-2,13],[5,30],[4,13],[-1,12],[5,18],[-1,33],[2,50],[5,17],[1,53],[22,147],[6,-7],[0,-35],[4,-13],[9,21],[6,0],[4,14],[8,-31],[4,-25],[1,-214],[-1,-51],[10,-14],[-2,-22],[3,-21],[-2,-18],[4,-30],[5,7],[5,-68],[-6,-31],[-3,12],[-3,-21],[-4,5],[0,-18],[-6,2],[-8,-40],[-2,28],[-3,2],[1,-30],[-6,-15],[-2,24],[-3,-12],[-7,0],[0,28],[-5,-6],[1,-20],[-4,-42],[1,-12],[-6,-23],[-5,9],[-3,-24],[-4,-3],[-4,-20],[-4,4],[-1,21],[-7,-34],[2,-21],[-5,-7],[0,-18],[-5,-22],[-5,-50]],[[3056,4600],[-3,14],[0,19],[-4,22],[-2,250],[-1,124]],[[2904,3626],[2,0],[-1,0],[-1,0]],[[2933,3721],[-6,-80]],[[2927,3641],[-4,-3],[-8,-12]],[[2915,3626],[-6,-8],[0,31],[-2,13],[3,13],[-4,32],[-2,-14],[-6,3],[-2,35],[2,0],[0,45],[2,18],[-2,60],[3,36],[5,6],[0,37],[-3,-5],[0,-18],[-8,-25],[-2,-21],[0,-56],[-3,-26],[1,-44],[4,-30],[-1,-23],[3,-23],[-2,-16],[-6,30],[-10,15],[-2,29],[-6,-16],[-2,23],[5,29]],[[2874,3756],[2,30]],[[2874,3813],[-4,18],[-6,10],[0,28],[-3,15],[-4,4]],[[2857,3888],[-4,53],[-4,0],[-5,18],[-3,-15],[-5,1],[-1,-21],[-8,14],[-6,-28],[-3,6],[-6,-33],[-6,-17],[1,98]],[[2807,3964],[105,0]],[[3053,4565],[1,-34],[-1,-27],[-5,-25],[0,-29],[6,-4],[4,-31],[0,-24],[3,-6],[0,-22],[8,-19],[9,18],[-2,-26],[-13,-23],[-5,-1],[-3,18],[-5,-6],[0,-13],[-5,-9]],[[3045,4302],[-3,35]],[[3042,4337],[0,6]],[[3042,4343],[-3,14],[-2,45],[-4,0],[-8,-2]],[[2977,4408],[0,7],[6,126]],[[2983,4541],[23,-3]],[[3006,4538],[34,-7],[3,18],[7,19],[3,-3]],[[2598,4353],[5,25],[4,43],[4,26],[3,36],[1,52],[0,57],[-9,111],[3,42],[-2,50],[6,51],[2,43],[-1,23],[5,9],[0,31],[8,9],[5,34],[0,-69],[3,-3],[3,35],[1,58],[2,15],[8,9],[-3,41],[5,35],[7,2],[7,-22],[7,-3],[3,-28],[6,-2],[9,-25],[3,1],[4,-41],[-3,-21],[3,-29],[2,-32],[-2,-71],[-6,-18],[-1,-37],[-7,-12],[-4,-44],[2,-17],[6,-15],[6,24],[6,49],[10,19],[5,-15],[3,-27],[3,-80],[0,-39],[3,-48],[-3,-69],[-4,-11],[-1,25],[-3,-7],[-3,-58],[-6,-21],[-2,-44],[-7,-37],[0,-16]],[[2694,4347],[-39,-7]],[[2635,5110],[1,-23],[-4,-4],[1,33],[2,-6]],[[2496,5270],[11,20],[5,23],[12,9],[8,29],[4,1],[3,20],[9,28],[4,24],[7,15],[6,-13],[-11,-59],[-2,-19],[0,-36],[5,27],[10,-4],[8,-19],[7,-52],[3,-10],[7,9],[2,-12],[7,-6],[16,44],[8,4],[10,-2],[7,15],[6,1],[1,-54],[5,-7],[6,8],[2,-12],[4,16],[8,5],[1,-67],[3,-28],[6,-8],[1,19],[5,0],[3,-20],[-3,-14],[-15,12],[-8,-8],[-8,23],[-2,-21],[1,-18],[-4,4],[-5,27],[-9,15],[-5,1],[-4,-25],[-8,-6],[-8,5],[-3,-10],[-1,-21],[-9,-18],[1,25],[-4,5],[-2,-26],[-6,-1],[-3,-11],[-5,-45],[-8,-58],[1,-5]],[[2576,4989],[-4,20],[2,27],[-7,4],[3,26],[0,34],[-5,23],[-4,24],[-12,19],[-4,-7],[-12,29],[-29,38],[-3,33],[-5,11]],[[2541,5539],[-7,-24],[-4,-3],[1,19],[18,45],[-4,-31],[-4,-6]],[[2324,4685],[0,343],[-7,22],[-5,36],[8,41],[1,22]],[[2321,5149],[-1,76],[-4,20],[-2,42],[0,51],[-1,8],[-1,123],[-5,65],[-3,36],[0,77],[1,27],[-3,60]],[[2302,5734],[59,0],[0,73],[5,-2],[4,-14],[4,-100],[3,-11],[9,-3],[1,-10],[11,-4],[1,-21],[10,5],[0,9],[7,10],[6,-4],[8,-16],[2,-19],[4,2],[4,-43],[2,18],[7,8],[1,-18],[9,-12],[0,-17],[4,-14],[8,8],[5,18],[8,12],[2,-28],[5,6],[6,-6],[6,4],[8,-24],[7,4],[0,-10],[-10,-24],[-13,-19],[-9,-20],[-12,-49],[-5,-31],[-8,-34],[-13,-46],[2,-16]],[[2450,5296],[-2,9],[-6,-16],[0,-113],[-2,-11],[-8,-16],[-6,-41],[-1,-27],[3,-2],[4,-24],[-3,-29],[0,-33],[-2,-70],[8,-34],[6,-3],[3,-21],[8,-21],[2,-25],[8,-33],[5,-7],[5,-42],[-1,-30],[2,-22]],[[2553,2179],[-3,-8],[-7,4],[-3,12],[-7,-8],[-9,-22],[-3,-14]],[[2498,3062],[53,0],[7,0]],[[2524,3348],[-2,0],[-2,0],[1,-47],[-6,-48]],[[2376,3349],[0,95]],[[2356,4017],[-7,50],[-6,62]],[[2108,5151],[0,-181],[-1,0]],[[2107,4970],[-53,1],[-90,0],[-56,0],[0,-100]],[[1766,5734],[130,-1],[58,1],[154,0]],[[2108,5734],[0,-217],[0,-366]],[[2107,4208],[0,382]],[[2107,4590],[21,0],[49,-1],[88,0],[1,-10],[15,-34],[4,19],[4,-4],[13,0],[15,-36],[2,-27],[5,-5]],[[1823,4398],[0,-954]],[[1654,4398],[37,-1],[47,2]],[[3006,4538],[-2,14],[0,28],[3,11],[-1,27],[3,81],[5,37],[2,43],[3,16],[-1,47],[10,17],[5,33],[-3,31],[4,32],[0,18]],[[3034,4973],[4,49],[6,-5],[2,12]],[[3056,4600],[-3,-35]],[[2962,4152],[-5,-13],[-2,-29],[8,-14],[0,-22],[-3,-103],[-9,-76],[-6,-22],[-5,-48],[-3,31],[-8,16],[-10,42],[-1,28],[0,4],[2,11]],[[2922,3980],[8,15],[0,15],[9,31],[2,17],[-9,39],[0,24],[-3,6],[-1,22],[5,33],[-3,20],[7,40],[2,21],[4,13]],[[2943,4276],[13,-41],[9,-28],[-3,-55]],[[2137,3444],[0,-95]],[[2137,3349],[-1,0],[0,-474],[0,-193],[0,-192],[-101,0],[-1,-18],[3,-22]],[[2037,2450],[-48,0],[0,-87],[-24,0]],[[2972,4205],[13,-15],[2,11],[10,0],[6,6],[8,31],[1,-22],[5,-10],[-11,-28],[-22,-42],[-9,-8],[-6,2],[-5,-9],[-2,31]],[[2943,4276],[-2,14],[-4,1],[-5,32],[1,29],[-4,22],[-2,-2],[-3,27],[-125,0],[0,48],[0,3]],[[2799,4450],[17,54],[3,26],[5,18],[-2,32],[-2,7],[-2,52],[17,22],[15,-1],[6,-5],[6,-21],[4,8],[12,-1],[8,14],[8,34],[5,1],[0,52],[3,31],[-7,21],[2,24],[11,32],[4,28],[14,64],[13,32],[19,-5],[23,4]],[[2981,4973],[1,-39],[-2,-36],[3,-34],[-1,-37],[-3,-39],[2,-52],[-1,-16],[4,-31],[-1,-132],[0,-16]],[[2909,3359],[4,-77],[-8,8],[-1,-10],[-10,-11],[-1,-11],[-7,-3],[0,-13],[8,9],[1,-8],[9,9],[3,-18],[5,8],[2,-46],[-2,-22],[-3,-2],[-8,-47],[-9,-2],[-2,-33],[4,-32],[4,-6],[-6,-54],[-6,7],[-9,-6],[-6,-11],[-10,-37],[-7,-48],[-4,-60],[-6,13],[-11,-12]],[[2833,2844],[-32,181],[-32,4],[1,21],[-5,33],[-3,-12],[0,20],[-35,10],[-8,-8],[-6,-17],[-10,-13]],[[2669,3061],[1,45],[5,4],[3,31],[7,29],[7,1],[7,29],[8,10],[6,43],[4,13],[1,-19],[11,37],[5,-8],[4,36],[5,9],[1,45]],[[2744,3366],[20,-5],[19,-3],[23,-1],[103,2]],[[2321,5149],[-213,2]],[[2108,5734],[194,0]],[[2777,4138],[-4,-10],[2,-21],[0,-29],[-4,-46],[-3,-70],[-11,-62],[-3,-8],[-4,12],[-3,-27],[-3,1],[-4,-36],[1,-22],[-3,-18],[-4,29],[-5,-46],[1,-29],[-3,-11],[-1,-25],[-8,-4]],[[2694,4347],[11,-26],[3,-15],[3,14],[6,-30],[4,-9],[14,25],[7,-6],[9,36],[12,34],[14,24]],[[2777,4394],[0,-256]],[[2380,2803],[-11,21],[-3,22],[-7,18],[-2,-16],[-8,1],[-1,10],[-7,-19],[-3,11],[-6,-10],[-5,-29],[-2,17],[-6,14],[-7,0],[-2,21],[-7,-42],[-2,24],[-3,-8],[-3,16],[-7,15],[-5,-25],[-2,26],[-4,3],[-2,21],[-6,8],[-3,-18],[-3,16],[-5,-2],[-6,17],[-6,-2],[-2,36],[-9,2],[-4,-6],[-6,37],[-2,-3],[0,370],[-52,0],[-34,0]],[[1534,4399],[-4,22],[-2,61],[0,43],[-4,33],[3,32],[2,51],[4,54],[2,48],[3,162],[0,22],[3,71],[1,99],[-2,54],[1,32],[12,29]],[[1553,5212],[5,-22],[4,5],[3,2],[6,-20],[3,-23],[1,-57],[15,-21],[12,30],[8,3],[9,-10],[1,-13],[16,27],[3,-9],[9,5],[7,19],[12,17],[12,4],[4,12],[58,-1]],[[2807,3964],[-30,0],[0,174]],[[2777,4394],[5,11],[17,45]],[[3045,4302],[-6,-4],[3,39]],[[3042,4343],[-4,3],[-3,-28],[-1,-40],[-11,-9]],[[2833,2844],[-5,-10],[-6,-31],[-6,-49],[-1,-40],[-5,-31],[-6,0],[-2,-23],[-6,-25],[-4,-28],[-6,-11],[-6,-29],[-1,-14],[-6,-16],[-6,-40]],[[2107,4590],[0,380]],[[2687,3368],[57,-2]],[[2398,2049],[-5,-1],[-14,-26],[-6,15],[-1,31],[-3,-22],[-3,5],[-1,-27],[3,-11],[0,-36],[-5,-37],[-9,-47],[-17,-51],[-2,9],[-5,-13],[0,12],[-7,-9],[-3,24],[-2,-5],[7,-49],[-5,-16],[-5,10],[-1,-35],[-7,-35],[-6,-66],[-4,-69],[-3,5],[-1,-25],[3,6],[-2,-50],[-2,-2],[0,-28],[3,-16],[1,-57],[3,-20],[0,-37],[3,-32],[-9,-20],[-3,25],[-7,10],[-9,-3],[-8,32],[-5,3],[-5,25],[-6,8],[-4,24],[-2,58],[-5,34],[0,30],[-2,31],[1,27],[-4,30],[-3,4],[-5,27],[-1,34],[-5,32],[-6,26],[-3,57],[-2,16],[-4,46],[-1,38],[-4,27],[-6,24],[-1,16],[-6,15],[-4,42],[-13,9],[-7,-2],[-7,15],[-1,-20],[-7,-6],[-5,-40],[-3,-64],[-2,-1],[-4,-37],[-5,-1],[-7,29],[-17,47],[-4,25],[-6,24],[-5,54],[-1,49],[-4,40],[-2,35],[-3,22],[-11,32],[-6,44],[-4,15],[-6,38],[-7,20],[-5,50],[-4,11]],[[1908,4399],[0,-192],[57,0]],[[2981,4973],[30,-2],[23,2]],[[2927,3641],[-4,-32],[-3,-12],[-3,-44],[-6,-71],[-5,-15],[-1,27],[2,58],[8,74]],[[2874,3756],[-4,-8],[-2,-28],[1,-19],[8,6],[1,-31],[10,-12],[3,-24],[8,-26],[-4,-54],[4,-41],[-4,-20],[-1,-24],[4,-15],[-4,-23],[-6,30],[-1,-10],[5,-22],[14,-5],[3,-71]],[[2736,3547],[-1,-16],[4,-32],[5,-16],[4,1],[5,25],[4,-20],[7,11],[13,36],[1,-11],[5,17],[0,34],[4,30],[5,29],[2,34],[6,36],[2,44],[5,-27],[4,-8],[3,16],[6,68],[4,-17],[13,77],[2,57],[15,-64],[3,37]],[[1553,5212],[-5,7],[-4,-12],[-6,17],[1,26],[4,14],[-6,40],[-4,103],[-2,14],[-3,73],[-6,28],[-2,56],[3,38],[6,-18],[11,-24],[8,1],[8,-9],[8,9],[3,-16],[7,1],[5,-42],[3,3],[1,-56],[2,-52],[3,6],[-3,43],[1,43],[4,44],[-3,18],[-1,31],[-3,35],[2,25],[-2,29],[-5,4],[-4,22],[1,21],[163,0]],[[1576,5602],[4,9],[0,-39],[-5,15],[1,15]],[[1568,5655],[3,25],[4,-30],[-1,-27],[-7,8],[1,24]],[[2576,4989],[-1,-23],[-6,-4],[-4,-44],[-2,-30],[3,-6],[5,20],[4,38],[6,15],[5,48],[6,10],[-1,-25],[-4,-23],[-8,-79],[-2,-44],[0,-32],[-3,-10],[-2,-43],[1,-37],[-3,-24],[-3,-59],[0,-47],[4,-42],[-1,-55]],[[2450,5296],[6,-2],[20,33],[8,17],[2,-13],[-4,-25],[9,-33],[5,-3]]]};\n  Datamap.prototype.usgTopo = '__USG__';\n  Datamap.prototype.uzbTopo = '__UZB__';\n  Datamap.prototype.vatTopo = '__VAT__';\n  Datamap.prototype.vctTopo = '__VCT__';\n  Datamap.prototype.venTopo = '__VEN__';\n  Datamap.prototype.vgbTopo = '__VGB__';\n  Datamap.prototype.virTopo = '__VIR__';\n  Datamap.prototype.vnmTopo = '__VNM__';\n  Datamap.prototype.vutTopo = '__VUT__';\n  Datamap.prototype.wlfTopo = '__WLF__';\n  Datamap.prototype.wsbTopo = '__WSB__';\n  Datamap.prototype.wsmTopo = '__WSM__';\n  Datamap.prototype.yemTopo = '__YEM__';\n  Datamap.prototype.zafTopo = '__ZAF__';\n  Datamap.prototype.zmbTopo = '__ZMB__';\n  Datamap.prototype.zweTopo = '__ZWE__';\n\n  /**************************************\n                Utilities\n  ***************************************/\n\n  // Convert lat/lng coords to X / Y coords\n  Datamap.prototype.latLngToXY = function(lat, lng) {\n     return this.projection([lng, lat]);\n  };\n\n  // Add <g> layer to root SVG\n  Datamap.prototype.addLayer = function( className, id, first ) {\n    var layer;\n    if ( first ) {\n      layer = this.svg.insert('g', ':first-child')\n    }\n    else {\n      layer = this.svg.append('g')\n    }\n    return layer.attr('id', id || '')\n      .attr('class', className || '');\n  };\n\n  Datamap.prototype.updateChoropleth = function(data, options) {\n    var svg = this.svg;\n    var that = this;\n\n    // When options.reset = true, reset all the fill colors to the defaultFill and kill all data-info\n    if ( options && options.reset === true ) {\n      svg.selectAll('.datamaps-subunit')\n        .attr('data-info', function() {\n           return \"{}\"\n        })\n        .transition().style('fill', this.options.fills.defaultFill)\n    }\n\n    for ( var subunit in data ) {\n      if ( data.hasOwnProperty(subunit) ) {\n        var color;\n        var subunitData = data[subunit]\n        if ( ! subunit ) {\n          continue;\n        }\n        else if ( typeof subunitData === \"string\" ) {\n          color = subunitData;\n        }\n        else if ( typeof subunitData.color === \"string\" ) {\n          color = subunitData.color;\n        }\n        else if ( typeof subunitData.fillColor === \"string\" ) {\n          color = subunitData.fillColor;\n        }\n        else {\n          color = this.options.fills[ subunitData.fillKey ];\n        }\n        // If it's an object, overriding the previous data\n        if ( subunitData === Object(subunitData) ) {\n          this.options.data[subunit] = defaults(subunitData, this.options.data[subunit] || {});\n          var geo = this.svg.select('.' + subunit).attr('data-info', JSON.stringify(this.options.data[subunit]));\n        }\n        svg\n          .selectAll('.' + subunit)\n          .transition()\n            .style('fill', color);\n      }\n    }\n  };\n\n  Datamap.prototype.updatePopup = function (element, d, options) {\n    var self = this;\n    element.on('mousemove', null);\n    element.on('mousemove', function() {\n      var position = d3.mouse(self.options.element);\n      d3.select(self.svg[0][0].parentNode).select('.datamaps-hoverover')\n        .style('top', ( (position[1] + 30)) + \"px\")\n        .html(function() {\n          var data = JSON.parse(element.attr('data-info'));\n          try {\n            return options.popupTemplate(d, data);\n          } catch (e) {\n            return \"\";\n          }\n        })\n        .style('left', ( position[0]) + \"px\");\n    });\n\n    d3.select(self.svg[0][0].parentNode).select('.datamaps-hoverover').style('display', 'block');\n  };\n\n  Datamap.prototype.addPlugin = function( name, pluginFn ) {\n    var self = this;\n    if ( typeof Datamap.prototype[name] === \"undefined\" ) {\n      Datamap.prototype[name] = function(data, options, callback, createNewLayer) {\n        var layer;\n        if ( typeof createNewLayer === \"undefined\" ) {\n          createNewLayer = false;\n        }\n\n        if ( typeof options === 'function' ) {\n          callback = options;\n          options = undefined;\n        }\n\n        options = defaults(options || {}, self.options[name + 'Config']);\n\n        // Add a single layer, reuse the old layer\n        if ( !createNewLayer && this.options[name + 'Layer'] ) {\n          layer = this.options[name + 'Layer'];\n          options = options || this.options[name + 'Options'];\n        }\n        else {\n          layer = this.addLayer(name);\n          this.options[name + 'Layer'] = layer;\n          this.options[name + 'Options'] = options;\n        }\n        pluginFn.apply(this, [layer, data, options]);\n        if ( callback ) {\n          callback(layer);\n        }\n      };\n    }\n  };\n\n  // Expose library\n  if (typeof exports === 'object') {\n    d3 = require('d3');\n    topojson = require('topojson');\n    module.exports = Datamap;\n  }\n  else if ( typeof define === \"function\" && define.amd ) {\n    define( \"datamaps\", [\"require\", \"d3\", \"topojson\"], function(require) {\n      d3 = require('d3');\n      topojson = require('topojson');\n\n      return Datamap;\n    });\n  }\n  else {\n    window.Datamap = window.Datamaps = Datamap;\n  }\n\n  if ( window.jQuery ) {\n    window.jQuery.fn.datamaps = function(options, callback) {\n      options = options || {};\n      options.element = this[0];\n      var datamap = new Datamap(options);\n      if ( typeof callback === \"function\" ) {\n        callback(datamap, options);\n      }\n      return this;\n    };\n  }\n})();\n","require('../../modules/es6.string.iterator');\nrequire('../../modules/es6.array.from');\nmodule.exports = require('../../modules/_core').Array.from;\n","module.exports = require(\"core-js/library/fn/object/values\");","require('../../modules/es6.array.is-array');\nmodule.exports = require('../../modules/_core').Array.isArray;\n"],"sourceRoot":""}